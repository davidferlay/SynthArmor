var Lv=Object.defineProperty;var Dv=(t,e,n)=>e in t?Lv(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var ct=(t,e,n)=>Dv(t,typeof e!="symbol"?e+"":e,n);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function n(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=n(s);fetch(s.href,r)}})();/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Ku(t){const e=Object.create(null);for(const n of t.split(","))e[n]=1;return n=>n in e}const ut={},ar=[],ni=()=>{},Uv=()=>!1,rl=t=>t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&(t.charCodeAt(2)>122||t.charCodeAt(2)<97),Ju=t=>t.startsWith("onUpdate:"),kt=Object.assign,Qu=(t,e)=>{const n=t.indexOf(e);n>-1&&t.splice(n,1)},Iv=Object.prototype.hasOwnProperty,et=(t,e)=>Iv.call(t,e),Ie=Array.isArray,lr=t=>Ro(t)==="[object Map]",ol=t=>Ro(t)==="[object Set]",Kf=t=>Ro(t)==="[object Date]",ke=t=>typeof t=="function",yt=t=>typeof t=="string",ii=t=>typeof t=="symbol",ft=t=>t!==null&&typeof t=="object",hg=t=>(ft(t)||ke(t))&&ke(t.then)&&ke(t.catch),dg=Object.prototype.toString,Ro=t=>dg.call(t),Nv=t=>Ro(t).slice(8,-1),pg=t=>Ro(t)==="[object Object]",ef=t=>yt(t)&&t!=="NaN"&&t[0]!=="-"&&""+parseInt(t,10)===t,ro=Ku(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),al=t=>{const e=Object.create(null);return n=>e[n]||(e[n]=t(n))},Fv=/-(\w)/g,Pn=al(t=>t.replace(Fv,(e,n)=>n?n.toUpperCase():"")),Ov=/\B([A-Z])/g,qi=al(t=>t.replace(Ov,"-$1").toLowerCase()),ll=al(t=>t.charAt(0).toUpperCase()+t.slice(1)),Wl=al(t=>t?`on${ll(t)}`:""),ys=(t,e)=>!Object.is(t,e),Ia=(t,...e)=>{for(let n=0;n<t.length;n++)t[n](...e)},mg=(t,e,n,i=!1)=>{Object.defineProperty(t,e,{configurable:!0,enumerable:!1,writable:i,value:n})},gu=t=>{const e=parseFloat(t);return isNaN(e)?t:e},kv=t=>{const e=yt(t)?Number(t):NaN;return isNaN(e)?t:e};let Jf;const cl=()=>Jf||(Jf=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function mo(t){if(Ie(t)){const e={};for(let n=0;n<t.length;n++){const i=t[n],s=yt(i)?Vv(i):mo(i);if(s)for(const r in s)e[r]=s[r]}return e}else if(yt(t)||ft(t))return t}const Bv=/;(?![^(]*\))/g,Hv=/:([^]+)/,zv=/\/\*[^]*?\*\//g;function Vv(t){const e={};return t.replace(zv,"").split(Bv).forEach(n=>{if(n){const i=n.split(Hv);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function ul(t){let e="";if(yt(t))e=t;else if(Ie(t))for(let n=0;n<t.length;n++){const i=ul(t[n]);i&&(e+=i+" ")}else if(ft(t))for(const n in t)t[n]&&(e+=n+" ");return e.trim()}const $v="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Gv=Ku($v);function gg(t){return!!t||t===""}function Wv(t,e){if(t.length!==e.length)return!1;let n=!0;for(let i=0;n&&i<t.length;i++)n=fl(t[i],e[i]);return n}function fl(t,e){if(t===e)return!0;let n=Kf(t),i=Kf(e);if(n||i)return n&&i?t.getTime()===e.getTime():!1;if(n=ii(t),i=ii(e),n||i)return t===e;if(n=Ie(t),i=Ie(e),n||i)return n&&i?Wv(t,e):!1;if(n=ft(t),i=ft(e),n||i){if(!n||!i)return!1;const s=Object.keys(t).length,r=Object.keys(e).length;if(s!==r)return!1;for(const o in t){const a=t.hasOwnProperty(o),l=e.hasOwnProperty(o);if(a&&!l||!a&&l||!fl(t[o],e[o]))return!1}}return String(t)===String(e)}function _g(t,e){return t.findIndex(n=>fl(n,e))}const vg=t=>!!(t&&t.__v_isRef===!0),tf=t=>yt(t)?t:t==null?"":Ie(t)||ft(t)&&(t.toString===dg||!ke(t.toString))?vg(t)?tf(t.value):JSON.stringify(t,xg,2):String(t),xg=(t,e)=>vg(e)?xg(t,e.value):lr(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((n,[i,s],r)=>(n[Xl(i,r)+" =>"]=s,n),{})}:ol(e)?{[`Set(${e.size})`]:[...e.values()].map(n=>Xl(n))}:ii(e)?Xl(e):ft(e)&&!Ie(e)&&!pg(e)?String(e):e,Xl=(t,e="")=>{var n;return ii(t)?`Symbol(${(n=t.description)!=null?n:e})`:t};/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let xn;class Xv{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=xn,!e&&xn&&(this.index=(xn.scopes||(xn.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,n;if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].pause();for(e=0,n=this.effects.length;e<n;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,n;if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].resume();for(e=0,n=this.effects.length;e<n;e++)this.effects[e].resume()}}run(e){if(this._active){const n=xn;try{return xn=this,e()}finally{xn=n}}}on(){xn=this}off(){xn=this.parent}stop(e){if(this._active){this._active=!1;let n,i;for(n=0,i=this.effects.length;n<i;n++)this.effects[n].stop();for(this.effects.length=0,n=0,i=this.cleanups.length;n<i;n++)this.cleanups[n]();if(this.cleanups.length=0,this.scopes){for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const s=this.parent.scopes.pop();s&&s!==this&&(this.parent.scopes[this.index]=s,s.index=this.index)}this.parent=void 0}}}function qv(){return xn}let ht;const ql=new WeakSet;class yg{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,xn&&xn.active&&xn.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,ql.has(this)&&(ql.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||Mg(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Qf(this),Sg(this);const e=ht,n=Vn;ht=this,Vn=!0;try{return this.fn()}finally{Eg(this),ht=e,Vn=n,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)rf(e);this.deps=this.depsTail=void 0,Qf(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?ql.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){_u(this)&&this.run()}get dirty(){return _u(this)}}let bg=0,oo,ao;function Mg(t,e=!1){if(t.flags|=8,e){t.next=ao,ao=t;return}t.next=oo,oo=t}function nf(){bg++}function sf(){if(--bg>0)return;if(ao){let e=ao;for(ao=void 0;e;){const n=e.next;e.next=void 0,e.flags&=-9,e=n}}let t;for(;oo;){let e=oo;for(oo=void 0;e;){const n=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(i){t||(t=i)}e=n}}if(t)throw t}function Sg(t){for(let e=t.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function Eg(t){let e,n=t.depsTail,i=n;for(;i;){const s=i.prevDep;i.version===-1?(i===n&&(n=s),rf(i),jv(i)):e=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=s}t.deps=e,t.depsTail=n}function _u(t){for(let e=t.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(wg(e.dep.computed)||e.dep.version!==e.version))return!0;return!!t._dirty}function wg(t){if(t.flags&4&&!(t.flags&16)||(t.flags&=-17,t.globalVersion===go))return;t.globalVersion=go;const e=t.dep;if(t.flags|=2,e.version>0&&!t.isSSR&&t.deps&&!_u(t)){t.flags&=-3;return}const n=ht,i=Vn;ht=t,Vn=!0;try{Sg(t);const s=t.fn(t._value);(e.version===0||ys(s,t._value))&&(t._value=s,e.version++)}catch(s){throw e.version++,s}finally{ht=n,Vn=i,Eg(t),t.flags&=-3}}function rf(t,e=!1){const{dep:n,prevSub:i,nextSub:s}=t;if(i&&(i.nextSub=s,t.prevSub=void 0),s&&(s.prevSub=i,t.nextSub=void 0),n.subs===t&&(n.subs=i,!i&&n.computed)){n.computed.flags&=-5;for(let r=n.computed.deps;r;r=r.nextDep)rf(r,!0)}!e&&!--n.sc&&n.map&&n.map.delete(n.key)}function jv(t){const{prevDep:e,nextDep:n}=t;e&&(e.nextDep=n,t.prevDep=void 0),n&&(n.prevDep=e,t.nextDep=void 0)}let Vn=!0;const Tg=[];function ji(){Tg.push(Vn),Vn=!1}function Yi(){const t=Tg.pop();Vn=t===void 0?!0:t}function Qf(t){const{cleanup:e}=t;if(t.cleanup=void 0,e){const n=ht;ht=void 0;try{e()}finally{ht=n}}}let go=0;class Yv{constructor(e,n){this.sub=e,this.dep=n,this.version=n.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Ag{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(e){if(!ht||!Vn||ht===this.computed)return;let n=this.activeLink;if(n===void 0||n.sub!==ht)n=this.activeLink=new Yv(ht,this),ht.deps?(n.prevDep=ht.depsTail,ht.depsTail.nextDep=n,ht.depsTail=n):ht.deps=ht.depsTail=n,Rg(n);else if(n.version===-1&&(n.version=this.version,n.nextDep)){const i=n.nextDep;i.prevDep=n.prevDep,n.prevDep&&(n.prevDep.nextDep=i),n.prevDep=ht.depsTail,n.nextDep=void 0,ht.depsTail.nextDep=n,ht.depsTail=n,ht.deps===n&&(ht.deps=i)}return n}trigger(e){this.version++,go++,this.notify(e)}notify(e){nf();try{for(let n=this.subs;n;n=n.prevSub)n.sub.notify()&&n.sub.dep.notify()}finally{sf()}}}function Rg(t){if(t.dep.sc++,t.sub.flags&4){const e=t.dep.computed;if(e&&!t.dep.subs){e.flags|=20;for(let i=e.deps;i;i=i.nextDep)Rg(i)}const n=t.dep.subs;n!==t&&(t.prevSub=n,n&&(n.nextSub=t)),t.dep.subs=t}}const vu=new WeakMap,bs=Symbol(""),xu=Symbol(""),_o=Symbol("");function $t(t,e,n){if(Vn&&ht){let i=vu.get(t);i||vu.set(t,i=new Map);let s=i.get(n);s||(i.set(n,s=new Ag),s.map=i,s.key=n),s.track()}}function yi(t,e,n,i,s,r){const o=vu.get(t);if(!o){go++;return}const a=l=>{l&&l.trigger()};if(nf(),e==="clear")o.forEach(a);else{const l=Ie(t),c=l&&ef(n);if(l&&n==="length"){const u=Number(i);o.forEach((f,h)=>{(h==="length"||h===_o||!ii(h)&&h>=u)&&a(f)})}else switch((n!==void 0||o.has(void 0))&&a(o.get(n)),c&&a(o.get(_o)),e){case"add":l?c&&a(o.get("length")):(a(o.get(bs)),lr(t)&&a(o.get(xu)));break;case"delete":l||(a(o.get(bs)),lr(t)&&a(o.get(xu)));break;case"set":lr(t)&&a(o.get(bs));break}}sf()}function Us(t){const e=it(t);return e===t?e:($t(e,"iterate",_o),$n(t)?e:e.map(rn))}function hl(t){return $t(t=it(t),"iterate",_o),t}const Zv={__proto__:null,[Symbol.iterator](){return jl(this,Symbol.iterator,rn)},concat(...t){return Us(this).concat(...t.map(e=>Ie(e)?Us(e):e))},entries(){return jl(this,"entries",t=>(t[1]=rn(t[1]),t))},every(t,e){return ri(this,"every",t,e,void 0,arguments)},filter(t,e){return ri(this,"filter",t,e,n=>n.map(rn),arguments)},find(t,e){return ri(this,"find",t,e,rn,arguments)},findIndex(t,e){return ri(this,"findIndex",t,e,void 0,arguments)},findLast(t,e){return ri(this,"findLast",t,e,rn,arguments)},findLastIndex(t,e){return ri(this,"findLastIndex",t,e,void 0,arguments)},forEach(t,e){return ri(this,"forEach",t,e,void 0,arguments)},includes(...t){return Yl(this,"includes",t)},indexOf(...t){return Yl(this,"indexOf",t)},join(t){return Us(this).join(t)},lastIndexOf(...t){return Yl(this,"lastIndexOf",t)},map(t,e){return ri(this,"map",t,e,void 0,arguments)},pop(){return Ir(this,"pop")},push(...t){return Ir(this,"push",t)},reduce(t,...e){return eh(this,"reduce",t,e)},reduceRight(t,...e){return eh(this,"reduceRight",t,e)},shift(){return Ir(this,"shift")},some(t,e){return ri(this,"some",t,e,void 0,arguments)},splice(...t){return Ir(this,"splice",t)},toReversed(){return Us(this).toReversed()},toSorted(t){return Us(this).toSorted(t)},toSpliced(...t){return Us(this).toSpliced(...t)},unshift(...t){return Ir(this,"unshift",t)},values(){return jl(this,"values",rn)}};function jl(t,e,n){const i=hl(t),s=i[e]();return i!==t&&!$n(t)&&(s._next=s.next,s.next=()=>{const r=s._next();return r.value&&(r.value=n(r.value)),r}),s}const Kv=Array.prototype;function ri(t,e,n,i,s,r){const o=hl(t),a=o!==t&&!$n(t),l=o[e];if(l!==Kv[e]){const f=l.apply(t,r);return a?rn(f):f}let c=n;o!==t&&(a?c=function(f,h){return n.call(this,rn(f),h,t)}:n.length>2&&(c=function(f,h){return n.call(this,f,h,t)}));const u=l.call(o,c,i);return a&&s?s(u):u}function eh(t,e,n,i){const s=hl(t);let r=n;return s!==t&&($n(t)?n.length>3&&(r=function(o,a,l){return n.call(this,o,a,l,t)}):r=function(o,a,l){return n.call(this,o,rn(a),l,t)}),s[e](r,...i)}function Yl(t,e,n){const i=it(t);$t(i,"iterate",_o);const s=i[e](...n);return(s===-1||s===!1)&&cf(n[0])?(n[0]=it(n[0]),i[e](...n)):s}function Ir(t,e,n=[]){ji(),nf();const i=it(t)[e].apply(t,n);return sf(),Yi(),i}const Jv=Ku("__proto__,__v_isRef,__isVue"),Cg=new Set(Object.getOwnPropertyNames(Symbol).filter(t=>t!=="arguments"&&t!=="caller").map(t=>Symbol[t]).filter(ii));function Qv(t){ii(t)||(t=String(t));const e=it(this);return $t(e,"has",t),e.hasOwnProperty(t)}class Pg{constructor(e=!1,n=!1){this._isReadonly=e,this._isShallow=n}get(e,n,i){if(n==="__v_skip")return e.__v_skip;const s=this._isReadonly,r=this._isShallow;if(n==="__v_isReactive")return!s;if(n==="__v_isReadonly")return s;if(n==="__v_isShallow")return r;if(n==="__v_raw")return i===(s?r?cx:Ig:r?Ug:Dg).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(i)?e:void 0;const o=Ie(e);if(!s){let l;if(o&&(l=Zv[n]))return l;if(n==="hasOwnProperty")return Qv}const a=Reflect.get(e,n,nn(e)?e:i);return(ii(n)?Cg.has(n):Jv(n))||(s||$t(e,"get",n),r)?a:nn(a)?o&&ef(n)?a:a.value:ft(a)?s?Ng(a):af(a):a}}class Lg extends Pg{constructor(e=!1){super(!1,e)}set(e,n,i,s){let r=e[n];if(!this._isShallow){const l=vr(r);if(!$n(i)&&!vr(i)&&(r=it(r),i=it(i)),!Ie(e)&&nn(r)&&!nn(i))return l?!1:(r.value=i,!0)}const o=Ie(e)&&ef(n)?Number(n)<e.length:et(e,n),a=Reflect.set(e,n,i,nn(e)?e:s);return e===it(s)&&(o?ys(i,r)&&yi(e,"set",n,i):yi(e,"add",n,i)),a}deleteProperty(e,n){const i=et(e,n);e[n];const s=Reflect.deleteProperty(e,n);return s&&i&&yi(e,"delete",n,void 0),s}has(e,n){const i=Reflect.has(e,n);return(!ii(n)||!Cg.has(n))&&$t(e,"has",n),i}ownKeys(e){return $t(e,"iterate",Ie(e)?"length":bs),Reflect.ownKeys(e)}}class ex extends Pg{constructor(e=!1){super(!0,e)}set(e,n){return!0}deleteProperty(e,n){return!0}}const tx=new Lg,nx=new ex,ix=new Lg(!0);const yu=t=>t,ko=t=>Reflect.getPrototypeOf(t);function sx(t,e,n){return function(...i){const s=this.__v_raw,r=it(s),o=lr(r),a=t==="entries"||t===Symbol.iterator&&o,l=t==="keys"&&o,c=s[t](...i),u=n?yu:e?bu:rn;return!e&&$t(r,"iterate",l?xu:bs),{next(){const{value:f,done:h}=c.next();return h?{value:f,done:h}:{value:a?[u(f[0]),u(f[1])]:u(f),done:h}},[Symbol.iterator](){return this}}}}function Bo(t){return function(...e){return t==="delete"?!1:t==="clear"?void 0:this}}function rx(t,e){const n={get(s){const r=this.__v_raw,o=it(r),a=it(s);t||(ys(s,a)&&$t(o,"get",s),$t(o,"get",a));const{has:l}=ko(o),c=e?yu:t?bu:rn;if(l.call(o,s))return c(r.get(s));if(l.call(o,a))return c(r.get(a));r!==o&&r.get(s)},get size(){const s=this.__v_raw;return!t&&$t(it(s),"iterate",bs),Reflect.get(s,"size",s)},has(s){const r=this.__v_raw,o=it(r),a=it(s);return t||(ys(s,a)&&$t(o,"has",s),$t(o,"has",a)),s===a?r.has(s):r.has(s)||r.has(a)},forEach(s,r){const o=this,a=o.__v_raw,l=it(a),c=e?yu:t?bu:rn;return!t&&$t(l,"iterate",bs),a.forEach((u,f)=>s.call(r,c(u),c(f),o))}};return kt(n,t?{add:Bo("add"),set:Bo("set"),delete:Bo("delete"),clear:Bo("clear")}:{add(s){!e&&!$n(s)&&!vr(s)&&(s=it(s));const r=it(this);return ko(r).has.call(r,s)||(r.add(s),yi(r,"add",s,s)),this},set(s,r){!e&&!$n(r)&&!vr(r)&&(r=it(r));const o=it(this),{has:a,get:l}=ko(o);let c=a.call(o,s);c||(s=it(s),c=a.call(o,s));const u=l.call(o,s);return o.set(s,r),c?ys(r,u)&&yi(o,"set",s,r):yi(o,"add",s,r),this},delete(s){const r=it(this),{has:o,get:a}=ko(r);let l=o.call(r,s);l||(s=it(s),l=o.call(r,s)),a&&a.call(r,s);const c=r.delete(s);return l&&yi(r,"delete",s,void 0),c},clear(){const s=it(this),r=s.size!==0,o=s.clear();return r&&yi(s,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(s=>{n[s]=sx(s,t,e)}),n}function of(t,e){const n=rx(t,e);return(i,s,r)=>s==="__v_isReactive"?!t:s==="__v_isReadonly"?t:s==="__v_raw"?i:Reflect.get(et(n,s)&&s in i?n:i,s,r)}const ox={get:of(!1,!1)},ax={get:of(!1,!0)},lx={get:of(!0,!1)};const Dg=new WeakMap,Ug=new WeakMap,Ig=new WeakMap,cx=new WeakMap;function ux(t){switch(t){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function fx(t){return t.__v_skip||!Object.isExtensible(t)?0:ux(Nv(t))}function af(t){return vr(t)?t:lf(t,!1,tx,ox,Dg)}function hx(t){return lf(t,!1,ix,ax,Ug)}function Ng(t){return lf(t,!0,nx,lx,Ig)}function lf(t,e,n,i,s){if(!ft(t)||t.__v_raw&&!(e&&t.__v_isReactive))return t;const r=s.get(t);if(r)return r;const o=fx(t);if(o===0)return t;const a=new Proxy(t,o===2?i:n);return s.set(t,a),a}function cr(t){return vr(t)?cr(t.__v_raw):!!(t&&t.__v_isReactive)}function vr(t){return!!(t&&t.__v_isReadonly)}function $n(t){return!!(t&&t.__v_isShallow)}function cf(t){return t?!!t.__v_raw:!1}function it(t){const e=t&&t.__v_raw;return e?it(e):t}function cs(t){return!et(t,"__v_skip")&&Object.isExtensible(t)&&mg(t,"__v_skip",!0),t}const rn=t=>ft(t)?af(t):t,bu=t=>ft(t)?Ng(t):t;function nn(t){return t?t.__v_isRef===!0:!1}function dx(t){return nn(t)?t.value:t}const px={get:(t,e,n)=>e==="__v_raw"?t:dx(Reflect.get(t,e,n)),set:(t,e,n,i)=>{const s=t[e];return nn(s)&&!nn(n)?(s.value=n,!0):Reflect.set(t,e,n,i)}};function Fg(t){return cr(t)?t:new Proxy(t,px)}class mx{constructor(e,n,i){this.fn=e,this.setter=n,this._value=void 0,this.dep=new Ag(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=go-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!n,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&ht!==this)return Mg(this,!0),!0}get value(){const e=this.dep.track();return wg(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function gx(t,e,n=!1){let i,s;return ke(t)?i=t:(i=t.get,s=t.set),new mx(i,s,n)}const Ho={},Va=new WeakMap;let us;function _x(t,e=!1,n=us){if(n){let i=Va.get(n);i||Va.set(n,i=[]),i.push(t)}}function vx(t,e,n=ut){const{immediate:i,deep:s,once:r,scheduler:o,augmentJob:a,call:l}=n,c=x=>s?x:$n(x)||s===!1||s===0?bi(x,1):bi(x);let u,f,h,d,m=!1,_=!1;if(nn(t)?(f=()=>t.value,m=$n(t)):cr(t)?(f=()=>c(t),m=!0):Ie(t)?(_=!0,m=t.some(x=>cr(x)||$n(x)),f=()=>t.map(x=>{if(nn(x))return x.value;if(cr(x))return c(x);if(ke(x))return l?l(x,2):x()})):ke(t)?e?f=l?()=>l(t,2):t:f=()=>{if(h){ji();try{h()}finally{Yi()}}const x=us;us=u;try{return l?l(t,3,[d]):t(d)}finally{us=x}}:f=ni,e&&s){const x=f,b=s===!0?1/0:s;f=()=>bi(x(),b)}const g=qv(),p=()=>{u.stop(),g&&g.active&&Qu(g.effects,u)};if(r&&e){const x=e;e=(...b)=>{x(...b),p()}}let S=_?new Array(t.length).fill(Ho):Ho;const y=x=>{if(!(!(u.flags&1)||!u.dirty&&!x))if(e){const b=u.run();if(s||m||(_?b.some((M,T)=>ys(M,S[T])):ys(b,S))){h&&h();const M=us;us=u;try{const T=[b,S===Ho?void 0:_&&S[0]===Ho?[]:S,d];l?l(e,3,T):e(...T),S=b}finally{us=M}}}else u.run()};return a&&a(y),u=new yg(f),u.scheduler=o?()=>o(y,!1):y,d=x=>_x(x,!1,u),h=u.onStop=()=>{const x=Va.get(u);if(x){if(l)l(x,4);else for(const b of x)b();Va.delete(u)}},e?i?y(!0):S=u.run():o?o(y.bind(null,!0),!0):u.run(),p.pause=u.pause.bind(u),p.resume=u.resume.bind(u),p.stop=p,p}function bi(t,e=1/0,n){if(e<=0||!ft(t)||t.__v_skip||(n=n||new Set,n.has(t)))return t;if(n.add(t),e--,nn(t))bi(t.value,e,n);else if(Ie(t))for(let i=0;i<t.length;i++)bi(t[i],e,n);else if(ol(t)||lr(t))t.forEach(i=>{bi(i,e,n)});else if(pg(t)){for(const i in t)bi(t[i],e,n);for(const i of Object.getOwnPropertySymbols(t))Object.prototype.propertyIsEnumerable.call(t,i)&&bi(t[i],e,n)}return t}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Co(t,e,n,i){try{return i?t(...i):t()}catch(s){dl(s,e,n)}}function Gn(t,e,n,i){if(ke(t)){const s=Co(t,e,n,i);return s&&hg(s)&&s.catch(r=>{dl(r,e,n)}),s}if(Ie(t)){const s=[];for(let r=0;r<t.length;r++)s.push(Gn(t[r],e,n,i));return s}}function dl(t,e,n,i=!0){const s=e?e.vnode:null,{errorHandler:r,throwUnhandledErrorInProduction:o}=e&&e.appContext.config||ut;if(e){let a=e.parent;const l=e.proxy,c=`https://vuejs.org/error-reference/#runtime-${n}`;for(;a;){const u=a.ec;if(u){for(let f=0;f<u.length;f++)if(u[f](t,l,c)===!1)return}a=a.parent}if(r){ji(),Co(r,null,10,[t,l,c]),Yi();return}}xx(t,n,s,i,o)}function xx(t,e,n,i=!0,s=!1){if(s)throw t;console.error(t)}const Jt=[];let Jn=-1;const ur=[];let Hi=null,ir=0;const Og=Promise.resolve();let $a=null;function yx(t){const e=$a||Og;return t?e.then(this?t.bind(this):t):e}function bx(t){let e=Jn+1,n=Jt.length;for(;e<n;){const i=e+n>>>1,s=Jt[i],r=vo(s);r<t||r===t&&s.flags&2?e=i+1:n=i}return e}function uf(t){if(!(t.flags&1)){const e=vo(t),n=Jt[Jt.length-1];!n||!(t.flags&2)&&e>=vo(n)?Jt.push(t):Jt.splice(bx(e),0,t),t.flags|=1,kg()}}function kg(){$a||($a=Og.then(Hg))}function Mx(t){Ie(t)?ur.push(...t):Hi&&t.id===-1?Hi.splice(ir+1,0,t):t.flags&1||(ur.push(t),t.flags|=1),kg()}function th(t,e,n=Jn+1){for(;n<Jt.length;n++){const i=Jt[n];if(i&&i.flags&2){if(t&&i.id!==t.uid)continue;Jt.splice(n,1),n--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function Bg(t){if(ur.length){const e=[...new Set(ur)].sort((n,i)=>vo(n)-vo(i));if(ur.length=0,Hi){Hi.push(...e);return}for(Hi=e,ir=0;ir<Hi.length;ir++){const n=Hi[ir];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}Hi=null,ir=0}}const vo=t=>t.id==null?t.flags&2?-1:1/0:t.id;function Hg(t){try{for(Jn=0;Jn<Jt.length;Jn++){const e=Jt[Jn];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),Co(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;Jn<Jt.length;Jn++){const e=Jt[Jn];e&&(e.flags&=-2)}Jn=-1,Jt.length=0,Bg(),$a=null,(Jt.length||ur.length)&&Hg()}}let cn=null,zg=null;function Ga(t){const e=cn;return cn=t,zg=t&&t.type.__scopeId||null,e}function Vg(t,e=cn,n){if(!e||t._n)return t;const i=(...s)=>{i._d&&hh(-1);const r=Ga(e);let o;try{o=t(...s)}finally{Ga(r),i._d&&hh(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function $e(t,e){if(cn===null)return t;const n=vl(cn),i=t.dirs||(t.dirs=[]);for(let s=0;s<e.length;s++){let[r,o,a,l=ut]=e[s];r&&(ke(r)&&(r={mounted:r,updated:r}),r.deep&&bi(o),i.push({dir:r,instance:n,value:o,oldValue:void 0,arg:a,modifiers:l}))}return t}function es(t,e,n,i){const s=t.dirs,r=e&&e.dirs;for(let o=0;o<s.length;o++){const a=s[o];r&&(a.oldValue=r[o].value);let l=a.dir[i];l&&(ji(),Gn(l,n,8,[t.el,a,t,e]),Yi())}}const Sx=Symbol("_vte"),$g=t=>t.__isTeleport,zi=Symbol("_leaveCb"),zo=Symbol("_enterCb");function Ex(){const t={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Kg(()=>{t.isMounted=!0}),Jg(()=>{t.isUnmounting=!0}),t}const En=[Function,Array],Gg={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:En,onEnter:En,onAfterEnter:En,onEnterCancelled:En,onBeforeLeave:En,onLeave:En,onAfterLeave:En,onLeaveCancelled:En,onBeforeAppear:En,onAppear:En,onAfterAppear:En,onAppearCancelled:En},Wg=t=>{const e=t.subTree;return e.component?Wg(e.component):e},wx={name:"BaseTransition",props:Gg,setup(t,{slots:e}){const n=w1(),i=Ex();return()=>{const s=e.default&&jg(e.default(),!0);if(!s||!s.length)return;const r=Xg(s),o=it(t),{mode:a}=o;if(i.isLeaving)return Zl(r);const l=nh(r);if(!l)return Zl(r);let c=Mu(l,o,i,n,f=>c=f);l.type!==on&&xo(l,c);let u=n.subTree&&nh(n.subTree);if(u&&u.type!==on&&!ds(l,u)&&Wg(n).type!==on){let f=Mu(u,o,i,n);if(xo(u,f),a==="out-in"&&l.type!==on)return i.isLeaving=!0,f.afterLeave=()=>{i.isLeaving=!1,n.job.flags&8||n.update(),delete f.afterLeave,u=void 0},Zl(r);a==="in-out"&&l.type!==on?f.delayLeave=(h,d,m)=>{const _=qg(i,u);_[String(u.key)]=u,h[zi]=()=>{d(),h[zi]=void 0,delete c.delayedLeave,u=void 0},c.delayedLeave=()=>{m(),delete c.delayedLeave,u=void 0}}:u=void 0}else u&&(u=void 0);return r}}};function Xg(t){let e=t[0];if(t.length>1){for(const n of t)if(n.type!==on){e=n;break}}return e}const Tx=wx;function qg(t,e){const{leavingVNodes:n}=t;let i=n.get(e.type);return i||(i=Object.create(null),n.set(e.type,i)),i}function Mu(t,e,n,i,s){const{appear:r,mode:o,persisted:a=!1,onBeforeEnter:l,onEnter:c,onAfterEnter:u,onEnterCancelled:f,onBeforeLeave:h,onLeave:d,onAfterLeave:m,onLeaveCancelled:_,onBeforeAppear:g,onAppear:p,onAfterAppear:S,onAppearCancelled:y}=e,x=String(t.key),b=qg(n,t),M=(v,w)=>{v&&Gn(v,i,9,w)},T=(v,w)=>{const N=w[1];M(v,w),Ie(v)?v.every(U=>U.length<=1)&&N():v.length<=1&&N()},L={mode:o,persisted:a,beforeEnter(v){let w=l;if(!n.isMounted)if(r)w=g||l;else return;v[zi]&&v[zi](!0);const N=b[x];N&&ds(t,N)&&N.el[zi]&&N.el[zi](),M(w,[v])},enter(v){let w=c,N=u,U=f;if(!n.isMounted)if(r)w=p||c,N=S||u,U=y||f;else return;let I=!1;const F=v[zo]=k=>{I||(I=!0,k?M(U,[v]):M(N,[v]),L.delayedLeave&&L.delayedLeave(),v[zo]=void 0)};w?T(w,[v,F]):F()},leave(v,w){const N=String(t.key);if(v[zo]&&v[zo](!0),n.isUnmounting)return w();M(h,[v]);let U=!1;const I=v[zi]=F=>{U||(U=!0,w(),F?M(_,[v]):M(m,[v]),v[zi]=void 0,b[N]===t&&delete b[N])};b[N]=t,d?T(d,[v,I]):I()},clone(v){const w=Mu(v,e,n,i,s);return s&&s(w),w}};return L}function Zl(t){if(pl(t))return t=Wi(t),t.children=null,t}function nh(t){if(!pl(t))return $g(t.type)&&t.children?Xg(t.children):t;const{shapeFlag:e,children:n}=t;if(n){if(e&16)return n[0];if(e&32&&ke(n.default))return n.default()}}function xo(t,e){t.shapeFlag&6&&t.component?(t.transition=e,xo(t.component.subTree,e)):t.shapeFlag&128?(t.ssContent.transition=e.clone(t.ssContent),t.ssFallback.transition=e.clone(t.ssFallback)):t.transition=e}function jg(t,e=!1,n){let i=[],s=0;for(let r=0;r<t.length;r++){let o=t[r];const a=n==null?o.key:String(n)+String(o.key!=null?o.key:r);o.type===Bn?(o.patchFlag&128&&s++,i=i.concat(jg(o.children,e,a))):(e||o.type!==on)&&i.push(a!=null?Wi(o,{key:a}):o)}if(s>1)for(let r=0;r<i.length;r++)i[r].patchFlag=-2;return i}function Yg(t){t.ids=[t.ids[0]+t.ids[2]+++"-",0,0]}function Wa(t,e,n,i,s=!1){if(Ie(t)){t.forEach((m,_)=>Wa(m,e&&(Ie(e)?e[_]:e),n,i,s));return}if(lo(i)&&!s){i.shapeFlag&512&&i.type.__asyncResolved&&i.component.subTree.component&&Wa(t,e,n,i.component.subTree);return}const r=i.shapeFlag&4?vl(i.component):i.el,o=s?null:r,{i:a,r:l}=t,c=e&&e.r,u=a.refs===ut?a.refs={}:a.refs,f=a.setupState,h=it(f),d=f===ut?()=>!1:m=>et(h,m);if(c!=null&&c!==l&&(yt(c)?(u[c]=null,d(c)&&(f[c]=null)):nn(c)&&(c.value=null)),ke(l))Co(l,a,12,[o,u]);else{const m=yt(l),_=nn(l);if(m||_){const g=()=>{if(t.f){const p=m?d(l)?f[l]:u[l]:l.value;s?Ie(p)&&Qu(p,r):Ie(p)?p.includes(r)||p.push(r):m?(u[l]=[r],d(l)&&(f[l]=u[l])):(l.value=[r],t.k&&(u[t.k]=l.value))}else m?(u[l]=o,d(l)&&(f[l]=o)):_&&(l.value=o,t.k&&(u[t.k]=o))};o?(g.id=-1,vn(g,n)):g()}}}cl().requestIdleCallback;cl().cancelIdleCallback;const lo=t=>!!t.type.__asyncLoader,pl=t=>t.type.__isKeepAlive;function Ax(t,e){Zg(t,"a",e)}function Rx(t,e){Zg(t,"da",e)}function Zg(t,e,n=Ot){const i=t.__wdc||(t.__wdc=()=>{let s=n;for(;s;){if(s.isDeactivated)return;s=s.parent}return t()});if(ml(e,i,n),n){let s=n.parent;for(;s&&s.parent;)pl(s.parent.vnode)&&Cx(i,e,n,s),s=s.parent}}function Cx(t,e,n,i){const s=ml(e,t,i,!0);Qg(()=>{Qu(i[e],s)},n)}function ml(t,e,n=Ot,i=!1){if(n){const s=n[t]||(n[t]=[]),r=e.__weh||(e.__weh=(...o)=>{ji();const a=Po(n),l=Gn(e,n,t,o);return a(),Yi(),l});return i?s.unshift(r):s.push(r),r}}const Ai=t=>(e,n=Ot)=>{(!bo||t==="sp")&&ml(t,(...i)=>e(...i),n)},Px=Ai("bm"),Kg=Ai("m"),Lx=Ai("bu"),Dx=Ai("u"),Jg=Ai("bum"),Qg=Ai("um"),Ux=Ai("sp"),Ix=Ai("rtg"),Nx=Ai("rtc");function Fx(t,e=Ot){ml("ec",t,e)}const Ox="components";function Is(t,e){return Bx(Ox,t,!0,e)||t}const kx=Symbol.for("v-ndc");function Bx(t,e,n=!0,i=!1){const s=cn||Ot;if(s){const r=s.type;{const a=P1(r,!1);if(a&&(a===e||a===Pn(e)||a===ll(Pn(e))))return r}const o=ih(s[t]||r[t],e)||ih(s.appContext[t],e);return!o&&i?r:o}}function ih(t,e){return t&&(t[e]||t[Pn(e)]||t[ll(Pn(e))])}function Hx(t,e,n,i){let s;const r=n,o=Ie(t);if(o||yt(t)){const a=o&&cr(t);let l=!1;a&&(l=!$n(t),t=hl(t)),s=new Array(t.length);for(let c=0,u=t.length;c<u;c++)s[c]=e(l?rn(t[c]):t[c],c,void 0,r)}else if(typeof t=="number"){s=new Array(t);for(let a=0;a<t;a++)s[a]=e(a+1,a,void 0,r)}else if(ft(t))if(t[Symbol.iterator])s=Array.from(t,(a,l)=>e(a,l,void 0,r));else{const a=Object.keys(t);s=new Array(a.length);for(let l=0,c=a.length;l<c;l++){const u=a[l];s[l]=e(t[u],u,l,r)}}else s=[];return s}const Su=t=>t?y0(t)?vl(t):Su(t.parent):null,co=kt(Object.create(null),{$:t=>t,$el:t=>t.vnode.el,$data:t=>t.data,$props:t=>t.props,$attrs:t=>t.attrs,$slots:t=>t.slots,$refs:t=>t.refs,$parent:t=>Su(t.parent),$root:t=>Su(t.root),$host:t=>t.ce,$emit:t=>t.emit,$options:t=>t0(t),$forceUpdate:t=>t.f||(t.f=()=>{uf(t.update)}),$nextTick:t=>t.n||(t.n=yx.bind(t.proxy)),$watch:t=>l1.bind(t)}),Kl=(t,e)=>t!==ut&&!t.__isScriptSetup&&et(t,e),zx={get({_:t},e){if(e==="__v_skip")return!0;const{ctx:n,setupState:i,data:s,props:r,accessCache:o,type:a,appContext:l}=t;let c;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return i[e];case 2:return s[e];case 4:return n[e];case 3:return r[e]}else{if(Kl(i,e))return o[e]=1,i[e];if(s!==ut&&et(s,e))return o[e]=2,s[e];if((c=t.propsOptions[0])&&et(c,e))return o[e]=3,r[e];if(n!==ut&&et(n,e))return o[e]=4,n[e];Eu&&(o[e]=0)}}const u=co[e];let f,h;if(u)return e==="$attrs"&&$t(t.attrs,"get",""),u(t);if((f=a.__cssModules)&&(f=f[e]))return f;if(n!==ut&&et(n,e))return o[e]=4,n[e];if(h=l.config.globalProperties,et(h,e))return h[e]},set({_:t},e,n){const{data:i,setupState:s,ctx:r}=t;return Kl(s,e)?(s[e]=n,!0):i!==ut&&et(i,e)?(i[e]=n,!0):et(t.props,e)||e[0]==="$"&&e.slice(1)in t?!1:(r[e]=n,!0)},has({_:{data:t,setupState:e,accessCache:n,ctx:i,appContext:s,propsOptions:r}},o){let a;return!!n[o]||t!==ut&&et(t,o)||Kl(e,o)||(a=r[0])&&et(a,o)||et(i,o)||et(co,o)||et(s.config.globalProperties,o)},defineProperty(t,e,n){return n.get!=null?t._.accessCache[e]=0:et(n,"value")&&this.set(t,e,n.value,null),Reflect.defineProperty(t,e,n)}};function sh(t){return Ie(t)?t.reduce((e,n)=>(e[n]=null,e),{}):t}let Eu=!0;function Vx(t){const e=t0(t),n=t.proxy,i=t.ctx;Eu=!1,e.beforeCreate&&rh(e.beforeCreate,t,"bc");const{data:s,computed:r,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:f,mounted:h,beforeUpdate:d,updated:m,activated:_,deactivated:g,beforeDestroy:p,beforeUnmount:S,destroyed:y,unmounted:x,render:b,renderTracked:M,renderTriggered:T,errorCaptured:L,serverPrefetch:v,expose:w,inheritAttrs:N,components:U,directives:I,filters:F}=e;if(c&&$x(c,i,null),o)for(const $ in o){const W=o[$];ke(W)&&(i[$]=W.bind(n))}if(s){const $=s.call(n,n);ft($)&&(t.data=af($))}if(Eu=!0,r)for(const $ in r){const W=r[$],ae=ke(W)?W.bind(n,n):ke(W.get)?W.get.bind(n,n):ni,te=!ke(W)&&ke(W.set)?W.set.bind(n):ni,Ee=D1({get:ae,set:te});Object.defineProperty(i,$,{enumerable:!0,configurable:!0,get:()=>Ee.value,set:ce=>Ee.value=ce})}if(a)for(const $ in a)e0(a[$],i,n,$);if(l){const $=ke(l)?l.call(n):l;Reflect.ownKeys($).forEach(W=>{Yx(W,$[W])})}u&&rh(u,t,"c");function H($,W){Ie(W)?W.forEach(ae=>$(ae.bind(n))):W&&$(W.bind(n))}if(H(Px,f),H(Kg,h),H(Lx,d),H(Dx,m),H(Ax,_),H(Rx,g),H(Fx,L),H(Nx,M),H(Ix,T),H(Jg,S),H(Qg,x),H(Ux,v),Ie(w))if(w.length){const $=t.exposed||(t.exposed={});w.forEach(W=>{Object.defineProperty($,W,{get:()=>n[W],set:ae=>n[W]=ae})})}else t.exposed||(t.exposed={});b&&t.render===ni&&(t.render=b),N!=null&&(t.inheritAttrs=N),U&&(t.components=U),I&&(t.directives=I),v&&Yg(t)}function $x(t,e,n=ni){Ie(t)&&(t=wu(t));for(const i in t){const s=t[i];let r;ft(s)?"default"in s?r=Na(s.from||i,s.default,!0):r=Na(s.from||i):r=Na(s),nn(r)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>r.value,set:o=>r.value=o}):e[i]=r}}function rh(t,e,n){Gn(Ie(t)?t.map(i=>i.bind(e.proxy)):t.bind(e.proxy),e,n)}function e0(t,e,n,i){let s=i.includes(".")?m0(n,i):()=>n[i];if(yt(t)){const r=e[t];ke(r)&&Ql(s,r)}else if(ke(t))Ql(s,t.bind(n));else if(ft(t))if(Ie(t))t.forEach(r=>e0(r,e,n,i));else{const r=ke(t.handler)?t.handler.bind(n):e[t.handler];ke(r)&&Ql(s,r,t)}}function t0(t){const e=t.type,{mixins:n,extends:i}=e,{mixins:s,optionsCache:r,config:{optionMergeStrategies:o}}=t.appContext,a=r.get(e);let l;return a?l=a:!s.length&&!n&&!i?l=e:(l={},s.length&&s.forEach(c=>Xa(l,c,o,!0)),Xa(l,e,o)),ft(e)&&r.set(e,l),l}function Xa(t,e,n,i=!1){const{mixins:s,extends:r}=e;r&&Xa(t,r,n,!0),s&&s.forEach(o=>Xa(t,o,n,!0));for(const o in e)if(!(i&&o==="expose")){const a=Gx[o]||n&&n[o];t[o]=a?a(t[o],e[o]):e[o]}return t}const Gx={data:oh,props:ah,emits:ah,methods:Kr,computed:Kr,beforeCreate:jt,created:jt,beforeMount:jt,mounted:jt,beforeUpdate:jt,updated:jt,beforeDestroy:jt,beforeUnmount:jt,destroyed:jt,unmounted:jt,activated:jt,deactivated:jt,errorCaptured:jt,serverPrefetch:jt,components:Kr,directives:Kr,watch:Xx,provide:oh,inject:Wx};function oh(t,e){return e?t?function(){return kt(ke(t)?t.call(this,this):t,ke(e)?e.call(this,this):e)}:e:t}function Wx(t,e){return Kr(wu(t),wu(e))}function wu(t){if(Ie(t)){const e={};for(let n=0;n<t.length;n++)e[t[n]]=t[n];return e}return t}function jt(t,e){return t?[...new Set([].concat(t,e))]:e}function Kr(t,e){return t?kt(Object.create(null),t,e):e}function ah(t,e){return t?Ie(t)&&Ie(e)?[...new Set([...t,...e])]:kt(Object.create(null),sh(t),sh(e??{})):e}function Xx(t,e){if(!t)return e;if(!e)return t;const n=kt(Object.create(null),t);for(const i in e)n[i]=jt(t[i],e[i]);return n}function n0(){return{app:null,config:{isNativeTag:Uv,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let qx=0;function jx(t,e){return function(i,s=null){ke(i)||(i=kt({},i)),s!=null&&!ft(s)&&(s=null);const r=n0(),o=new WeakSet,a=[];let l=!1;const c=r.app={_uid:qx++,_component:i,_props:s,_container:null,_context:r,_instance:null,version:I1,get config(){return r.config},set config(u){},use(u,...f){return o.has(u)||(u&&ke(u.install)?(o.add(u),u.install(c,...f)):ke(u)&&(o.add(u),u(c,...f))),c},mixin(u){return r.mixins.includes(u)||r.mixins.push(u),c},component(u,f){return f?(r.components[u]=f,c):r.components[u]},directive(u,f){return f?(r.directives[u]=f,c):r.directives[u]},mount(u,f,h){if(!l){const d=c._ceVNode||Tt(i,s);return d.appContext=r,h===!0?h="svg":h===!1&&(h=void 0),t(d,u,h),l=!0,c._container=u,u.__vue_app__=c,vl(d.component)}},onUnmount(u){a.push(u)},unmount(){l&&(Gn(a,c._instance,16),t(null,c._container),delete c._container.__vue_app__)},provide(u,f){return r.provides[u]=f,c},runWithContext(u){const f=fr;fr=c;try{return u()}finally{fr=f}}};return c}}let fr=null;function Yx(t,e){if(Ot){let n=Ot.provides;const i=Ot.parent&&Ot.parent.provides;i===n&&(n=Ot.provides=Object.create(i)),n[t]=e}}function Na(t,e,n=!1){const i=Ot||cn;if(i||fr){const s=fr?fr._context.provides:i?i.parent==null?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(s&&t in s)return s[t];if(arguments.length>1)return n&&ke(e)?e.call(i&&i.proxy):e}}const i0={},s0=()=>Object.create(i0),r0=t=>Object.getPrototypeOf(t)===i0;function Zx(t,e,n,i=!1){const s={},r=s0();t.propsDefaults=Object.create(null),o0(t,e,s,r);for(const o in t.propsOptions[0])o in s||(s[o]=void 0);n?t.props=i?s:hx(s):t.type.props?t.props=s:t.props=r,t.attrs=r}function Kx(t,e,n,i){const{props:s,attrs:r,vnode:{patchFlag:o}}=t,a=it(s),[l]=t.propsOptions;let c=!1;if((i||o>0)&&!(o&16)){if(o&8){const u=t.vnode.dynamicProps;for(let f=0;f<u.length;f++){let h=u[f];if(gl(t.emitsOptions,h))continue;const d=e[h];if(l)if(et(r,h))d!==r[h]&&(r[h]=d,c=!0);else{const m=Pn(h);s[m]=Tu(l,a,m,d,t,!1)}else d!==r[h]&&(r[h]=d,c=!0)}}}else{o0(t,e,s,r)&&(c=!0);let u;for(const f in a)(!e||!et(e,f)&&((u=qi(f))===f||!et(e,u)))&&(l?n&&(n[f]!==void 0||n[u]!==void 0)&&(s[f]=Tu(l,a,f,void 0,t,!0)):delete s[f]);if(r!==a)for(const f in r)(!e||!et(e,f))&&(delete r[f],c=!0)}c&&yi(t.attrs,"set","")}function o0(t,e,n,i){const[s,r]=t.propsOptions;let o=!1,a;if(e)for(let l in e){if(ro(l))continue;const c=e[l];let u;s&&et(s,u=Pn(l))?!r||!r.includes(u)?n[u]=c:(a||(a={}))[u]=c:gl(t.emitsOptions,l)||(!(l in i)||c!==i[l])&&(i[l]=c,o=!0)}if(r){const l=it(n),c=a||ut;for(let u=0;u<r.length;u++){const f=r[u];n[f]=Tu(s,l,f,c[f],t,!et(c,f))}}return o}function Tu(t,e,n,i,s,r){const o=t[n];if(o!=null){const a=et(o,"default");if(a&&i===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&ke(l)){const{propsDefaults:c}=s;if(n in c)i=c[n];else{const u=Po(s);i=c[n]=l.call(null,e),u()}}else i=l;s.ce&&s.ce._setProp(n,i)}o[0]&&(r&&!a?i=!1:o[1]&&(i===""||i===qi(n))&&(i=!0))}return i}const Jx=new WeakMap;function a0(t,e,n=!1){const i=n?Jx:e.propsCache,s=i.get(t);if(s)return s;const r=t.props,o={},a=[];let l=!1;if(!ke(t)){const u=f=>{l=!0;const[h,d]=a0(f,e,!0);kt(o,h),d&&a.push(...d)};!n&&e.mixins.length&&e.mixins.forEach(u),t.extends&&u(t.extends),t.mixins&&t.mixins.forEach(u)}if(!r&&!l)return ft(t)&&i.set(t,ar),ar;if(Ie(r))for(let u=0;u<r.length;u++){const f=Pn(r[u]);lh(f)&&(o[f]=ut)}else if(r)for(const u in r){const f=Pn(u);if(lh(f)){const h=r[u],d=o[f]=Ie(h)||ke(h)?{type:h}:kt({},h),m=d.type;let _=!1,g=!0;if(Ie(m))for(let p=0;p<m.length;++p){const S=m[p],y=ke(S)&&S.name;if(y==="Boolean"){_=!0;break}else y==="String"&&(g=!1)}else _=ke(m)&&m.name==="Boolean";d[0]=_,d[1]=g,(_||et(d,"default"))&&a.push(f)}}const c=[o,a];return ft(t)&&i.set(t,c),c}function lh(t){return t[0]!=="$"&&!ro(t)}const l0=t=>t[0]==="_"||t==="$stable",ff=t=>Ie(t)?t.map(Qn):[Qn(t)],Qx=(t,e,n)=>{if(e._n)return e;const i=Vg((...s)=>ff(e(...s)),n);return i._c=!1,i},c0=(t,e,n)=>{const i=t._ctx;for(const s in t){if(l0(s))continue;const r=t[s];if(ke(r))e[s]=Qx(s,r,i);else if(r!=null){const o=ff(r);e[s]=()=>o}}},u0=(t,e)=>{const n=ff(e);t.slots.default=()=>n},f0=(t,e,n)=>{for(const i in e)(n||i!=="_")&&(t[i]=e[i])},e1=(t,e,n)=>{const i=t.slots=s0();if(t.vnode.shapeFlag&32){const s=e._;s?(f0(i,e,n),n&&mg(i,"_",s,!0)):c0(e,i)}else e&&u0(t,e)},t1=(t,e,n)=>{const{vnode:i,slots:s}=t;let r=!0,o=ut;if(i.shapeFlag&32){const a=e._;a?n&&a===1?r=!1:f0(s,e,n):(r=!e.$stable,c0(e,s)),o=e}else e&&(u0(t,e),o={default:1});if(r)for(const a in s)!l0(a)&&o[a]==null&&delete s[a]},vn=m1;function n1(t){return i1(t)}function i1(t,e){const n=cl();n.__VUE__=!0;const{insert:i,remove:s,patchProp:r,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:f,nextSibling:h,setScopeId:d=ni,insertStaticContent:m}=t,_=(P,D,z,se=null,ee=null,ie=null,me=void 0,oe=null,ue=!!D.dynamicChildren)=>{if(P===D)return;P&&!ds(P,D)&&(se=A(P),ce(P,ee,ie,!0),P=null),D.patchFlag===-2&&(ue=!1,D.dynamicChildren=null);const{type:le,ref:R,shapeFlag:E}=D;switch(le){case _l:g(P,D,z,se);break;case on:p(P,D,z,se);break;case ec:P==null&&S(D,z,se,me);break;case Bn:U(P,D,z,se,ee,ie,me,oe,ue);break;default:E&1?b(P,D,z,se,ee,ie,me,oe,ue):E&6?I(P,D,z,se,ee,ie,me,oe,ue):(E&64||E&128)&&le.process(P,D,z,se,ee,ie,me,oe,ue,de)}R!=null&&ee&&Wa(R,P&&P.ref,ie,D||P,!D)},g=(P,D,z,se)=>{if(P==null)i(D.el=a(D.children),z,se);else{const ee=D.el=P.el;D.children!==P.children&&c(ee,D.children)}},p=(P,D,z,se)=>{P==null?i(D.el=l(D.children||""),z,se):D.el=P.el},S=(P,D,z,se)=>{[P.el,P.anchor]=m(P.children,D,z,se,P.el,P.anchor)},y=({el:P,anchor:D},z,se)=>{let ee;for(;P&&P!==D;)ee=h(P),i(P,z,se),P=ee;i(D,z,se)},x=({el:P,anchor:D})=>{let z;for(;P&&P!==D;)z=h(P),s(P),P=z;s(D)},b=(P,D,z,se,ee,ie,me,oe,ue)=>{D.type==="svg"?me="svg":D.type==="math"&&(me="mathml"),P==null?M(D,z,se,ee,ie,me,oe,ue):v(P,D,ee,ie,me,oe,ue)},M=(P,D,z,se,ee,ie,me,oe)=>{let ue,le;const{props:R,shapeFlag:E,transition:B,dirs:j}=P;if(ue=P.el=o(P.type,ie,R&&R.is,R),E&8?u(ue,P.children):E&16&&L(P.children,ue,null,se,ee,Jl(P,ie),me,oe),j&&es(P,null,se,"created"),T(ue,P,P.scopeId,me,se),R){for(const he in R)he!=="value"&&!ro(he)&&r(ue,he,null,R[he],ie,se);"value"in R&&r(ue,"value",null,R.value,ie),(le=R.onVnodeBeforeMount)&&qn(le,se,P)}j&&es(P,null,se,"beforeMount");const K=s1(ee,B);K&&B.beforeEnter(ue),i(ue,D,z),((le=R&&R.onVnodeMounted)||K||j)&&vn(()=>{le&&qn(le,se,P),K&&B.enter(ue),j&&es(P,null,se,"mounted")},ee)},T=(P,D,z,se,ee)=>{if(z&&d(P,z),se)for(let ie=0;ie<se.length;ie++)d(P,se[ie]);if(ee){let ie=ee.subTree;if(D===ie||_0(ie.type)&&(ie.ssContent===D||ie.ssFallback===D)){const me=ee.vnode;T(P,me,me.scopeId,me.slotScopeIds,ee.parent)}}},L=(P,D,z,se,ee,ie,me,oe,ue=0)=>{for(let le=ue;le<P.length;le++){const R=P[le]=oe?Vi(P[le]):Qn(P[le]);_(null,R,D,z,se,ee,ie,me,oe)}},v=(P,D,z,se,ee,ie,me)=>{const oe=D.el=P.el;let{patchFlag:ue,dynamicChildren:le,dirs:R}=D;ue|=P.patchFlag&16;const E=P.props||ut,B=D.props||ut;let j;if(z&&ts(z,!1),(j=B.onVnodeBeforeUpdate)&&qn(j,z,D,P),R&&es(D,P,z,"beforeUpdate"),z&&ts(z,!0),(E.innerHTML&&B.innerHTML==null||E.textContent&&B.textContent==null)&&u(oe,""),le?w(P.dynamicChildren,le,oe,z,se,Jl(D,ee),ie):me||W(P,D,oe,null,z,se,Jl(D,ee),ie,!1),ue>0){if(ue&16)N(oe,E,B,z,ee);else if(ue&2&&E.class!==B.class&&r(oe,"class",null,B.class,ee),ue&4&&r(oe,"style",E.style,B.style,ee),ue&8){const K=D.dynamicProps;for(let he=0;he<K.length;he++){const ye=K[he],be=E[ye],Y=B[ye];(Y!==be||ye==="value")&&r(oe,ye,be,Y,ee,z)}}ue&1&&P.children!==D.children&&u(oe,D.children)}else!me&&le==null&&N(oe,E,B,z,ee);((j=B.onVnodeUpdated)||R)&&vn(()=>{j&&qn(j,z,D,P),R&&es(D,P,z,"updated")},se)},w=(P,D,z,se,ee,ie,me)=>{for(let oe=0;oe<D.length;oe++){const ue=P[oe],le=D[oe],R=ue.el&&(ue.type===Bn||!ds(ue,le)||ue.shapeFlag&70)?f(ue.el):z;_(ue,le,R,null,se,ee,ie,me,!0)}},N=(P,D,z,se,ee)=>{if(D!==z){if(D!==ut)for(const ie in D)!ro(ie)&&!(ie in z)&&r(P,ie,D[ie],null,ee,se);for(const ie in z){if(ro(ie))continue;const me=z[ie],oe=D[ie];me!==oe&&ie!=="value"&&r(P,ie,oe,me,ee,se)}"value"in z&&r(P,"value",D.value,z.value,ee)}},U=(P,D,z,se,ee,ie,me,oe,ue)=>{const le=D.el=P?P.el:a(""),R=D.anchor=P?P.anchor:a("");let{patchFlag:E,dynamicChildren:B,slotScopeIds:j}=D;j&&(oe=oe?oe.concat(j):j),P==null?(i(le,z,se),i(R,z,se),L(D.children||[],z,R,ee,ie,me,oe,ue)):E>0&&E&64&&B&&P.dynamicChildren?(w(P.dynamicChildren,B,z,ee,ie,me,oe),(D.key!=null||ee&&D===ee.subTree)&&h0(P,D,!0)):W(P,D,z,R,ee,ie,me,oe,ue)},I=(P,D,z,se,ee,ie,me,oe,ue)=>{D.slotScopeIds=oe,P==null?D.shapeFlag&512?ee.ctx.activate(D,z,se,me,ue):F(D,z,se,ee,ie,me,ue):k(P,D,ue)},F=(P,D,z,se,ee,ie,me)=>{const oe=P.component=E1(P,se,ee);if(pl(P)&&(oe.ctx.renderer=de),T1(oe,!1,me),oe.asyncDep){if(ee&&ee.registerDep(oe,H,me),!P.el){const ue=oe.subTree=Tt(on);p(null,ue,D,z)}}else H(oe,P,D,z,ee,ie,me)},k=(P,D,z)=>{const se=D.component=P.component;if(d1(P,D,z))if(se.asyncDep&&!se.asyncResolved){$(se,D,z);return}else se.next=D,se.update();else D.el=P.el,se.vnode=D},H=(P,D,z,se,ee,ie,me)=>{const oe=()=>{if(P.isMounted){let{next:E,bu:B,u:j,parent:K,vnode:he}=P;{const Re=d0(P);if(Re){E&&(E.el=he.el,$(P,E,me)),Re.asyncDep.then(()=>{P.isUnmounted||oe()});return}}let ye=E,be;ts(P,!1),E?(E.el=he.el,$(P,E,me)):E=he,B&&Ia(B),(be=E.props&&E.props.onVnodeBeforeUpdate)&&qn(be,K,E,he),ts(P,!0);const Y=uh(P),Te=P.subTree;P.subTree=Y,_(Te,Y,f(Te.el),A(Te),P,ee,ie),E.el=Y.el,ye===null&&p1(P,Y.el),j&&vn(j,ee),(be=E.props&&E.props.onVnodeUpdated)&&vn(()=>qn(be,K,E,he),ee)}else{let E;const{el:B,props:j}=D,{bm:K,m:he,parent:ye,root:be,type:Y}=P,Te=lo(D);ts(P,!1),K&&Ia(K),!Te&&(E=j&&j.onVnodeBeforeMount)&&qn(E,ye,D),ts(P,!0);{be.ce&&be.ce._injectChildStyle(Y);const Re=P.subTree=uh(P);_(null,Re,z,se,P,ee,ie),D.el=Re.el}if(he&&vn(he,ee),!Te&&(E=j&&j.onVnodeMounted)){const Re=D;vn(()=>qn(E,ye,Re),ee)}(D.shapeFlag&256||ye&&lo(ye.vnode)&&ye.vnode.shapeFlag&256)&&P.a&&vn(P.a,ee),P.isMounted=!0,D=z=se=null}};P.scope.on();const ue=P.effect=new yg(oe);P.scope.off();const le=P.update=ue.run.bind(ue),R=P.job=ue.runIfDirty.bind(ue);R.i=P,R.id=P.uid,ue.scheduler=()=>uf(R),ts(P,!0),le()},$=(P,D,z)=>{D.component=P;const se=P.vnode.props;P.vnode=D,P.next=null,Kx(P,D.props,se,z),t1(P,D.children,z),ji(),th(P),Yi()},W=(P,D,z,se,ee,ie,me,oe,ue=!1)=>{const le=P&&P.children,R=P?P.shapeFlag:0,E=D.children,{patchFlag:B,shapeFlag:j}=D;if(B>0){if(B&128){te(le,E,z,se,ee,ie,me,oe,ue);return}else if(B&256){ae(le,E,z,se,ee,ie,me,oe,ue);return}}j&8?(R&16&&_e(le,ee,ie),E!==le&&u(z,E)):R&16?j&16?te(le,E,z,se,ee,ie,me,oe,ue):_e(le,ee,ie,!0):(R&8&&u(z,""),j&16&&L(E,z,se,ee,ie,me,oe,ue))},ae=(P,D,z,se,ee,ie,me,oe,ue)=>{P=P||ar,D=D||ar;const le=P.length,R=D.length,E=Math.min(le,R);let B;for(B=0;B<E;B++){const j=D[B]=ue?Vi(D[B]):Qn(D[B]);_(P[B],j,z,null,ee,ie,me,oe,ue)}le>R?_e(P,ee,ie,!0,!1,E):L(D,z,se,ee,ie,me,oe,ue,E)},te=(P,D,z,se,ee,ie,me,oe,ue)=>{let le=0;const R=D.length;let E=P.length-1,B=R-1;for(;le<=E&&le<=B;){const j=P[le],K=D[le]=ue?Vi(D[le]):Qn(D[le]);if(ds(j,K))_(j,K,z,null,ee,ie,me,oe,ue);else break;le++}for(;le<=E&&le<=B;){const j=P[E],K=D[B]=ue?Vi(D[B]):Qn(D[B]);if(ds(j,K))_(j,K,z,null,ee,ie,me,oe,ue);else break;E--,B--}if(le>E){if(le<=B){const j=B+1,K=j<R?D[j].el:se;for(;le<=B;)_(null,D[le]=ue?Vi(D[le]):Qn(D[le]),z,K,ee,ie,me,oe,ue),le++}}else if(le>B)for(;le<=E;)ce(P[le],ee,ie,!0),le++;else{const j=le,K=le,he=new Map;for(le=K;le<=B;le++){const Me=D[le]=ue?Vi(D[le]):Qn(D[le]);Me.key!=null&&he.set(Me.key,le)}let ye,be=0;const Y=B-K+1;let Te=!1,Re=0;const De=new Array(Y);for(le=0;le<Y;le++)De[le]=0;for(le=j;le<=E;le++){const Me=P[le];if(be>=Y){ce(Me,ee,ie,!0);continue}let Fe;if(Me.key!=null)Fe=he.get(Me.key);else for(ye=K;ye<=B;ye++)if(De[ye-K]===0&&ds(Me,D[ye])){Fe=ye;break}Fe===void 0?ce(Me,ee,ie,!0):(De[Fe-K]=le+1,Fe>=Re?Re=Fe:Te=!0,_(Me,D[Fe],z,null,ee,ie,me,oe,ue),be++)}const Ae=Te?r1(De):ar;for(ye=Ae.length-1,le=Y-1;le>=0;le--){const Me=K+le,Fe=D[Me],Qe=Me+1<R?D[Me+1].el:se;De[le]===0?_(null,Fe,z,Qe,ee,ie,me,oe,ue):Te&&(ye<0||le!==Ae[ye]?Ee(Fe,z,Qe,2):ye--)}}},Ee=(P,D,z,se,ee=null)=>{const{el:ie,type:me,transition:oe,children:ue,shapeFlag:le}=P;if(le&6){Ee(P.component.subTree,D,z,se);return}if(le&128){P.suspense.move(D,z,se);return}if(le&64){me.move(P,D,z,de);return}if(me===Bn){i(ie,D,z);for(let E=0;E<ue.length;E++)Ee(ue[E],D,z,se);i(P.anchor,D,z);return}if(me===ec){y(P,D,z);return}if(se!==2&&le&1&&oe)if(se===0)oe.beforeEnter(ie),i(ie,D,z),vn(()=>oe.enter(ie),ee);else{const{leave:E,delayLeave:B,afterLeave:j}=oe,K=()=>i(ie,D,z),he=()=>{E(ie,()=>{K(),j&&j()})};B?B(ie,K,he):he()}else i(ie,D,z)},ce=(P,D,z,se=!1,ee=!1)=>{const{type:ie,props:me,ref:oe,children:ue,dynamicChildren:le,shapeFlag:R,patchFlag:E,dirs:B,cacheIndex:j}=P;if(E===-2&&(ee=!1),oe!=null&&Wa(oe,null,z,P,!0),j!=null&&(D.renderCache[j]=void 0),R&256){D.ctx.deactivate(P);return}const K=R&1&&B,he=!lo(P);let ye;if(he&&(ye=me&&me.onVnodeBeforeUnmount)&&qn(ye,D,P),R&6)ge(P.component,z,se);else{if(R&128){P.suspense.unmount(z,se);return}K&&es(P,null,D,"beforeUnmount"),R&64?P.type.remove(P,D,z,de,se):le&&!le.hasOnce&&(ie!==Bn||E>0&&E&64)?_e(le,D,z,!1,!0):(ie===Bn&&E&384||!ee&&R&16)&&_e(ue,D,z),se&&Z(P)}(he&&(ye=me&&me.onVnodeUnmounted)||K)&&vn(()=>{ye&&qn(ye,D,P),K&&es(P,null,D,"unmounted")},z)},Z=P=>{const{type:D,el:z,anchor:se,transition:ee}=P;if(D===Bn){re(z,se);return}if(D===ec){x(P);return}const ie=()=>{s(z),ee&&!ee.persisted&&ee.afterLeave&&ee.afterLeave()};if(P.shapeFlag&1&&ee&&!ee.persisted){const{leave:me,delayLeave:oe}=ee,ue=()=>me(z,ie);oe?oe(P.el,ie,ue):ue()}else ie()},re=(P,D)=>{let z;for(;P!==D;)z=h(P),s(P),P=z;s(D)},ge=(P,D,z)=>{const{bum:se,scope:ee,job:ie,subTree:me,um:oe,m:ue,a:le}=P;ch(ue),ch(le),se&&Ia(se),ee.stop(),ie&&(ie.flags|=8,ce(me,P,D,z)),oe&&vn(oe,D),vn(()=>{P.isUnmounted=!0},D),D&&D.pendingBranch&&!D.isUnmounted&&P.asyncDep&&!P.asyncResolved&&P.suspenseId===D.pendingId&&(D.deps--,D.deps===0&&D.resolve())},_e=(P,D,z,se=!1,ee=!1,ie=0)=>{for(let me=ie;me<P.length;me++)ce(P[me],D,z,se,ee)},A=P=>{if(P.shapeFlag&6)return A(P.component.subTree);if(P.shapeFlag&128)return P.suspense.next();const D=h(P.anchor||P.el),z=D&&D[Sx];return z?h(z):D};let fe=!1;const Se=(P,D,z)=>{P==null?D._vnode&&ce(D._vnode,null,null,!0):_(D._vnode||null,P,D,null,null,null,z),D._vnode=P,fe||(fe=!0,th(),Bg(),fe=!1)},de={p:_,um:ce,m:Ee,r:Z,mt:F,mc:L,pc:W,pbc:w,n:A,o:t};return{render:Se,hydrate:void 0,createApp:jx(Se)}}function Jl({type:t,props:e},n){return n==="svg"&&t==="foreignObject"||n==="mathml"&&t==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:n}function ts({effect:t,job:e},n){n?(t.flags|=32,e.flags|=4):(t.flags&=-33,e.flags&=-5)}function s1(t,e){return(!t||t&&!t.pendingBranch)&&e&&!e.persisted}function h0(t,e,n=!1){const i=t.children,s=e.children;if(Ie(i)&&Ie(s))for(let r=0;r<i.length;r++){const o=i[r];let a=s[r];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=s[r]=Vi(s[r]),a.el=o.el),!n&&a.patchFlag!==-2&&h0(o,a)),a.type===_l&&(a.el=o.el)}}function r1(t){const e=t.slice(),n=[0];let i,s,r,o,a;const l=t.length;for(i=0;i<l;i++){const c=t[i];if(c!==0){if(s=n[n.length-1],t[s]<c){e[i]=s,n.push(i);continue}for(r=0,o=n.length-1;r<o;)a=r+o>>1,t[n[a]]<c?r=a+1:o=a;c<t[n[r]]&&(r>0&&(e[i]=n[r-1]),n[r]=i)}}for(r=n.length,o=n[r-1];r-- >0;)n[r]=o,o=e[o];return n}function d0(t){const e=t.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:d0(e)}function ch(t){if(t)for(let e=0;e<t.length;e++)t[e].flags|=8}const o1=Symbol.for("v-scx"),a1=()=>Na(o1);function Ql(t,e,n){return p0(t,e,n)}function p0(t,e,n=ut){const{immediate:i,deep:s,flush:r,once:o}=n,a=kt({},n),l=e&&i||!e&&r!=="post";let c;if(bo){if(r==="sync"){const d=a1();c=d.__watcherHandles||(d.__watcherHandles=[])}else if(!l){const d=()=>{};return d.stop=ni,d.resume=ni,d.pause=ni,d}}const u=Ot;a.call=(d,m,_)=>Gn(d,u,m,_);let f=!1;r==="post"?a.scheduler=d=>{vn(d,u&&u.suspense)}:r!=="sync"&&(f=!0,a.scheduler=(d,m)=>{m?d():uf(d)}),a.augmentJob=d=>{e&&(d.flags|=4),f&&(d.flags|=2,u&&(d.id=u.uid,d.i=u))};const h=vx(t,e,a);return bo&&(c?c.push(h):l&&h()),h}function l1(t,e,n){const i=this.proxy,s=yt(t)?t.includes(".")?m0(i,t):()=>i[t]:t.bind(i,i);let r;ke(e)?r=e:(r=e.handler,n=e);const o=Po(this),a=p0(s,r.bind(i),n);return o(),a}function m0(t,e){const n=e.split(".");return()=>{let i=t;for(let s=0;s<n.length&&i;s++)i=i[n[s]];return i}}const c1=(t,e)=>e==="modelValue"||e==="model-value"?t.modelModifiers:t[`${e}Modifiers`]||t[`${Pn(e)}Modifiers`]||t[`${qi(e)}Modifiers`];function u1(t,e,...n){if(t.isUnmounted)return;const i=t.vnode.props||ut;let s=n;const r=e.startsWith("update:"),o=r&&c1(i,e.slice(7));o&&(o.trim&&(s=n.map(u=>yt(u)?u.trim():u)),o.number&&(s=n.map(gu)));let a,l=i[a=Wl(e)]||i[a=Wl(Pn(e))];!l&&r&&(l=i[a=Wl(qi(e))]),l&&Gn(l,t,6,s);const c=i[a+"Once"];if(c){if(!t.emitted)t.emitted={};else if(t.emitted[a])return;t.emitted[a]=!0,Gn(c,t,6,s)}}function g0(t,e,n=!1){const i=e.emitsCache,s=i.get(t);if(s!==void 0)return s;const r=t.emits;let o={},a=!1;if(!ke(t)){const l=c=>{const u=g0(c,e,!0);u&&(a=!0,kt(o,u))};!n&&e.mixins.length&&e.mixins.forEach(l),t.extends&&l(t.extends),t.mixins&&t.mixins.forEach(l)}return!r&&!a?(ft(t)&&i.set(t,null),null):(Ie(r)?r.forEach(l=>o[l]=null):kt(o,r),ft(t)&&i.set(t,o),o)}function gl(t,e){return!t||!rl(e)?!1:(e=e.slice(2).replace(/Once$/,""),et(t,e[0].toLowerCase()+e.slice(1))||et(t,qi(e))||et(t,e))}function uh(t){const{type:e,vnode:n,proxy:i,withProxy:s,propsOptions:[r],slots:o,attrs:a,emit:l,render:c,renderCache:u,props:f,data:h,setupState:d,ctx:m,inheritAttrs:_}=t,g=Ga(t);let p,S;try{if(n.shapeFlag&4){const x=s||i,b=x;p=Qn(c.call(b,x,u,f,d,h,m)),S=a}else{const x=e;p=Qn(x.length>1?x(f,{attrs:a,slots:o,emit:l}):x(f,null)),S=e.props?a:f1(a)}}catch(x){uo.length=0,dl(x,t,1),p=Tt(on)}let y=p;if(S&&_!==!1){const x=Object.keys(S),{shapeFlag:b}=y;x.length&&b&7&&(r&&x.some(Ju)&&(S=h1(S,r)),y=Wi(y,S,!1,!0))}return n.dirs&&(y=Wi(y,null,!1,!0),y.dirs=y.dirs?y.dirs.concat(n.dirs):n.dirs),n.transition&&xo(y,n.transition),p=y,Ga(g),p}const f1=t=>{let e;for(const n in t)(n==="class"||n==="style"||rl(n))&&((e||(e={}))[n]=t[n]);return e},h1=(t,e)=>{const n={};for(const i in t)(!Ju(i)||!(i.slice(9)in e))&&(n[i]=t[i]);return n};function d1(t,e,n){const{props:i,children:s,component:r}=t,{props:o,children:a,patchFlag:l}=e,c=r.emitsOptions;if(e.dirs||e.transition)return!0;if(n&&l>=0){if(l&1024)return!0;if(l&16)return i?fh(i,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let f=0;f<u.length;f++){const h=u[f];if(o[h]!==i[h]&&!gl(c,h))return!0}}}else return(s||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?fh(i,o,c):!0:!!o;return!1}function fh(t,e,n){const i=Object.keys(e);if(i.length!==Object.keys(t).length)return!0;for(let s=0;s<i.length;s++){const r=i[s];if(e[r]!==t[r]&&!gl(n,r))return!0}return!1}function p1({vnode:t,parent:e},n){for(;e;){const i=e.subTree;if(i.suspense&&i.suspense.activeBranch===t&&(i.el=t.el),i===t)(t=e.vnode).el=n,e=e.parent;else break}}const _0=t=>t.__isSuspense;function m1(t,e){e&&e.pendingBranch?Ie(t)?e.effects.push(...t):e.effects.push(t):Mx(t)}const Bn=Symbol.for("v-fgt"),_l=Symbol.for("v-txt"),on=Symbol.for("v-cmt"),ec=Symbol.for("v-stc"),uo=[];let yn=null;function en(t=!1){uo.push(yn=t?null:[])}function g1(){uo.pop(),yn=uo[uo.length-1]||null}let yo=1;function hh(t,e=!1){yo+=t,t<0&&yn&&e&&(yn.hasOnce=!0)}function v0(t){return t.dynamicChildren=yo>0?yn||ar:null,g1(),yo>0&&yn&&yn.push(t),t}function an(t,e,n,i,s,r){return v0(q(t,e,n,i,s,r,!0))}function _1(t,e,n,i,s){return v0(Tt(t,e,n,i,s,!0))}function qa(t){return t?t.__v_isVNode===!0:!1}function ds(t,e){return t.type===e.type&&t.key===e.key}const x0=({key:t})=>t??null,Fa=({ref:t,ref_key:e,ref_for:n})=>(typeof t=="number"&&(t=""+t),t!=null?yt(t)||nn(t)||ke(t)?{i:cn,r:t,k:e,f:!!n}:t:null);function q(t,e=null,n=null,i=0,s=null,r=t===Bn?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:t,props:e,key:e&&x0(e),ref:e&&Fa(e),scopeId:zg,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:i,dynamicProps:s,dynamicChildren:null,appContext:null,ctx:cn};return a?(hf(l,n),r&128&&t.normalize(l)):n&&(l.shapeFlag|=yt(n)?8:16),yo>0&&!o&&yn&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&yn.push(l),l}const Tt=v1;function v1(t,e=null,n=null,i=0,s=null,r=!1){if((!t||t===kx)&&(t=on),qa(t)){const a=Wi(t,e,!0);return n&&hf(a,n),yo>0&&!r&&yn&&(a.shapeFlag&6?yn[yn.indexOf(t)]=a:yn.push(a)),a.patchFlag=-2,a}if(L1(t)&&(t=t.__vccOpts),e){e=x1(e);let{class:a,style:l}=e;a&&!yt(a)&&(e.class=ul(a)),ft(l)&&(cf(l)&&!Ie(l)&&(l=kt({},l)),e.style=mo(l))}const o=yt(t)?1:_0(t)?128:$g(t)?64:ft(t)?4:ke(t)?2:0;return q(t,e,n,i,s,o,r,!0)}function x1(t){return t?cf(t)||r0(t)?kt({},t):t:null}function Wi(t,e,n=!1,i=!1){const{props:s,ref:r,patchFlag:o,children:a,transition:l}=t,c=e?b1(s||{},e):s,u={__v_isVNode:!0,__v_skip:!0,type:t.type,props:c,key:c&&x0(c),ref:e&&e.ref?n&&r?Ie(r)?r.concat(Fa(e)):[r,Fa(e)]:Fa(e):r,scopeId:t.scopeId,slotScopeIds:t.slotScopeIds,children:a,target:t.target,targetStart:t.targetStart,targetAnchor:t.targetAnchor,staticCount:t.staticCount,shapeFlag:t.shapeFlag,patchFlag:e&&t.type!==Bn?o===-1?16:o|16:o,dynamicProps:t.dynamicProps,dynamicChildren:t.dynamicChildren,appContext:t.appContext,dirs:t.dirs,transition:l,component:t.component,suspense:t.suspense,ssContent:t.ssContent&&Wi(t.ssContent),ssFallback:t.ssFallback&&Wi(t.ssFallback),el:t.el,anchor:t.anchor,ctx:t.ctx,ce:t.ce};return l&&i&&xo(u,l.clone(u)),u}function y1(t=" ",e=0){return Tt(_l,null,t,e)}function Jr(t="",e=!1){return e?(en(),_1(on,null,t)):Tt(on,null,t)}function Qn(t){return t==null||typeof t=="boolean"?Tt(on):Ie(t)?Tt(Bn,null,t.slice()):qa(t)?Vi(t):Tt(_l,null,String(t))}function Vi(t){return t.el===null&&t.patchFlag!==-1||t.memo?t:Wi(t)}function hf(t,e){let n=0;const{shapeFlag:i}=t;if(e==null)e=null;else if(Ie(e))n=16;else if(typeof e=="object")if(i&65){const s=e.default;s&&(s._c&&(s._d=!1),hf(t,s()),s._c&&(s._d=!0));return}else{n=32;const s=e._;!s&&!r0(e)?e._ctx=cn:s===3&&cn&&(cn.slots._===1?e._=1:(e._=2,t.patchFlag|=1024))}else ke(e)?(e={default:e,_ctx:cn},n=32):(e=String(e),i&64?(n=16,e=[y1(e)]):n=8);t.children=e,t.shapeFlag|=n}function b1(...t){const e={};for(let n=0;n<t.length;n++){const i=t[n];for(const s in i)if(s==="class")e.class!==i.class&&(e.class=ul([e.class,i.class]));else if(s==="style")e.style=mo([e.style,i.style]);else if(rl(s)){const r=e[s],o=i[s];o&&r!==o&&!(Ie(r)&&r.includes(o))&&(e[s]=r?[].concat(r,o):o)}else s!==""&&(e[s]=i[s])}return e}function qn(t,e,n,i=null){Gn(t,e,7,[n,i])}const M1=n0();let S1=0;function E1(t,e,n){const i=t.type,s=(e?e.appContext:t.appContext)||M1,r={uid:S1++,vnode:t,type:i,parent:e,appContext:s,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Xv(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(s.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:a0(i,s),emitsOptions:g0(i,s),emit:null,emitted:null,propsDefaults:ut,inheritAttrs:i.inheritAttrs,ctx:ut,data:ut,props:ut,attrs:ut,slots:ut,refs:ut,setupState:ut,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=e?e.root:r,r.emit=u1.bind(null,r),t.ce&&t.ce(r),r}let Ot=null;const w1=()=>Ot||cn;let ja,Au;{const t=cl(),e=(n,i)=>{let s;return(s=t[n])||(s=t[n]=[]),s.push(i),r=>{s.length>1?s.forEach(o=>o(r)):s[0](r)}};ja=e("__VUE_INSTANCE_SETTERS__",n=>Ot=n),Au=e("__VUE_SSR_SETTERS__",n=>bo=n)}const Po=t=>{const e=Ot;return ja(t),t.scope.on(),()=>{t.scope.off(),ja(e)}},dh=()=>{Ot&&Ot.scope.off(),ja(null)};function y0(t){return t.vnode.shapeFlag&4}let bo=!1;function T1(t,e=!1,n=!1){e&&Au(e);const{props:i,children:s}=t.vnode,r=y0(t);Zx(t,i,r,e),e1(t,s,n);const o=r?A1(t,e):void 0;return e&&Au(!1),o}function A1(t,e){const n=t.type;t.accessCache=Object.create(null),t.proxy=new Proxy(t.ctx,zx);const{setup:i}=n;if(i){ji();const s=t.setupContext=i.length>1?C1(t):null,r=Po(t),o=Co(i,t,0,[t.props,s]),a=hg(o);if(Yi(),r(),(a||t.sp)&&!lo(t)&&Yg(t),a){if(o.then(dh,dh),e)return o.then(l=>{ph(t,l)}).catch(l=>{dl(l,t,0)});t.asyncDep=o}else ph(t,o)}else b0(t)}function ph(t,e,n){ke(e)?t.type.__ssrInlineRender?t.ssrRender=e:t.render=e:ft(e)&&(t.setupState=Fg(e)),b0(t)}function b0(t,e,n){const i=t.type;t.render||(t.render=i.render||ni);{const s=Po(t);ji();try{Vx(t)}finally{Yi(),s()}}}const R1={get(t,e){return $t(t,"get",""),t[e]}};function C1(t){const e=n=>{t.exposed=n||{}};return{attrs:new Proxy(t.attrs,R1),slots:t.slots,emit:t.emit,expose:e}}function vl(t){return t.exposed?t.exposeProxy||(t.exposeProxy=new Proxy(Fg(cs(t.exposed)),{get(e,n){if(n in e)return e[n];if(n in co)return co[n](t)},has(e,n){return n in e||n in co}})):t.proxy}function P1(t,e=!0){return ke(t)?t.displayName||t.name:t.name||e&&t.__name}function L1(t){return ke(t)&&"__vccOpts"in t}const D1=(t,e)=>gx(t,e,bo);function U1(t,e,n){const i=arguments.length;return i===2?ft(e)&&!Ie(e)?qa(e)?Tt(t,null,[e]):Tt(t,e):Tt(t,null,e):(i>3?n=Array.prototype.slice.call(arguments,2):i===3&&qa(n)&&(n=[n]),Tt(t,e,n))}const I1="3.5.13";/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Ru;const mh=typeof window<"u"&&window.trustedTypes;if(mh)try{Ru=mh.createPolicy("vue",{createHTML:t=>t})}catch{}const M0=Ru?t=>Ru.createHTML(t):t=>t,N1="http://www.w3.org/2000/svg",F1="http://www.w3.org/1998/Math/MathML",xi=typeof document<"u"?document:null,gh=xi&&xi.createElement("template"),O1={insert:(t,e,n)=>{e.insertBefore(t,n||null)},remove:t=>{const e=t.parentNode;e&&e.removeChild(t)},createElement:(t,e,n,i)=>{const s=e==="svg"?xi.createElementNS(N1,t):e==="mathml"?xi.createElementNS(F1,t):n?xi.createElement(t,{is:n}):xi.createElement(t);return t==="select"&&i&&i.multiple!=null&&s.setAttribute("multiple",i.multiple),s},createText:t=>xi.createTextNode(t),createComment:t=>xi.createComment(t),setText:(t,e)=>{t.nodeValue=e},setElementText:(t,e)=>{t.textContent=e},parentNode:t=>t.parentNode,nextSibling:t=>t.nextSibling,querySelector:t=>xi.querySelector(t),setScopeId(t,e){t.setAttribute(e,"")},insertStaticContent(t,e,n,i,s,r){const o=n?n.previousSibling:e.lastChild;if(s&&(s===r||s.nextSibling))for(;e.insertBefore(s.cloneNode(!0),n),!(s===r||!(s=s.nextSibling)););else{gh.innerHTML=M0(i==="svg"?`<svg>${t}</svg>`:i==="mathml"?`<math>${t}</math>`:t);const a=gh.content;if(i==="svg"||i==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,n)}return[o?o.nextSibling:e.firstChild,n?n.previousSibling:e.lastChild]}},Ci="transition",Nr="animation",Mo=Symbol("_vtc"),S0={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},k1=kt({},Gg,S0),B1=t=>(t.displayName="Transition",t.props=k1,t),H1=B1((t,{slots:e})=>U1(Tx,z1(t),e)),ns=(t,e=[])=>{Ie(t)?t.forEach(n=>n(...e)):t&&t(...e)},_h=t=>t?Ie(t)?t.some(e=>e.length>1):t.length>1:!1;function z1(t){const e={};for(const U in t)U in S0||(e[U]=t[U]);if(t.css===!1)return e;const{name:n="v",type:i,duration:s,enterFromClass:r=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:a=`${n}-enter-to`,appearFromClass:l=r,appearActiveClass:c=o,appearToClass:u=a,leaveFromClass:f=`${n}-leave-from`,leaveActiveClass:h=`${n}-leave-active`,leaveToClass:d=`${n}-leave-to`}=t,m=V1(s),_=m&&m[0],g=m&&m[1],{onBeforeEnter:p,onEnter:S,onEnterCancelled:y,onLeave:x,onLeaveCancelled:b,onBeforeAppear:M=p,onAppear:T=S,onAppearCancelled:L=y}=e,v=(U,I,F,k)=>{U._enterCancelled=k,is(U,I?u:a),is(U,I?c:o),F&&F()},w=(U,I)=>{U._isLeaving=!1,is(U,f),is(U,d),is(U,h),I&&I()},N=U=>(I,F)=>{const k=U?T:S,H=()=>v(I,U,F);ns(k,[I,H]),vh(()=>{is(I,U?l:r),oi(I,U?u:a),_h(k)||xh(I,i,_,H)})};return kt(e,{onBeforeEnter(U){ns(p,[U]),oi(U,r),oi(U,o)},onBeforeAppear(U){ns(M,[U]),oi(U,l),oi(U,c)},onEnter:N(!1),onAppear:N(!0),onLeave(U,I){U._isLeaving=!0;const F=()=>w(U,I);oi(U,f),U._enterCancelled?(oi(U,h),Mh()):(Mh(),oi(U,h)),vh(()=>{U._isLeaving&&(is(U,f),oi(U,d),_h(x)||xh(U,i,g,F))}),ns(x,[U,F])},onEnterCancelled(U){v(U,!1,void 0,!0),ns(y,[U])},onAppearCancelled(U){v(U,!0,void 0,!0),ns(L,[U])},onLeaveCancelled(U){w(U),ns(b,[U])}})}function V1(t){if(t==null)return null;if(ft(t))return[tc(t.enter),tc(t.leave)];{const e=tc(t);return[e,e]}}function tc(t){return kv(t)}function oi(t,e){e.split(/\s+/).forEach(n=>n&&t.classList.add(n)),(t[Mo]||(t[Mo]=new Set)).add(e)}function is(t,e){e.split(/\s+/).forEach(i=>i&&t.classList.remove(i));const n=t[Mo];n&&(n.delete(e),n.size||(t[Mo]=void 0))}function vh(t){requestAnimationFrame(()=>{requestAnimationFrame(t)})}let $1=0;function xh(t,e,n,i){const s=t._endId=++$1,r=()=>{s===t._endId&&i()};if(n!=null)return setTimeout(r,n);const{type:o,timeout:a,propCount:l}=G1(t,e);if(!o)return i();const c=o+"end";let u=0;const f=()=>{t.removeEventListener(c,h),r()},h=d=>{d.target===t&&++u>=l&&f()};setTimeout(()=>{u<l&&f()},a+1),t.addEventListener(c,h)}function G1(t,e){const n=window.getComputedStyle(t),i=m=>(n[m]||"").split(", "),s=i(`${Ci}Delay`),r=i(`${Ci}Duration`),o=yh(s,r),a=i(`${Nr}Delay`),l=i(`${Nr}Duration`),c=yh(a,l);let u=null,f=0,h=0;e===Ci?o>0&&(u=Ci,f=o,h=r.length):e===Nr?c>0&&(u=Nr,f=c,h=l.length):(f=Math.max(o,c),u=f>0?o>c?Ci:Nr:null,h=u?u===Ci?r.length:l.length:0);const d=u===Ci&&/\b(transform|all)(,|$)/.test(i(`${Ci}Property`).toString());return{type:u,timeout:f,propCount:h,hasTransform:d}}function yh(t,e){for(;t.length<e.length;)t=t.concat(t);return Math.max(...e.map((n,i)=>bh(n)+bh(t[i])))}function bh(t){return t==="auto"?0:Number(t.slice(0,-1).replace(",","."))*1e3}function Mh(){return document.body.offsetHeight}function W1(t,e,n){const i=t[Mo];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?t.removeAttribute("class"):n?t.setAttribute("class",e):t.className=e}const Ya=Symbol("_vod"),E0=Symbol("_vsh"),X1={beforeMount(t,{value:e},{transition:n}){t[Ya]=t.style.display==="none"?"":t.style.display,n&&e?n.beforeEnter(t):Fr(t,e)},mounted(t,{value:e},{transition:n}){n&&e&&n.enter(t)},updated(t,{value:e,oldValue:n},{transition:i}){!e!=!n&&(i?e?(i.beforeEnter(t),Fr(t,!0),i.enter(t)):i.leave(t,()=>{Fr(t,!1)}):Fr(t,e))},beforeUnmount(t,{value:e}){Fr(t,e)}};function Fr(t,e){t.style.display=e?t[Ya]:"none",t[E0]=!e}const q1=Symbol(""),j1=/(^|;)\s*display\s*:/;function Y1(t,e,n){const i=t.style,s=yt(n);let r=!1;if(n&&!s){if(e)if(yt(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();n[a]==null&&Oa(i,a,"")}else for(const o in e)n[o]==null&&Oa(i,o,"");for(const o in n)o==="display"&&(r=!0),Oa(i,o,n[o])}else if(s){if(e!==n){const o=i[q1];o&&(n+=";"+o),i.cssText=n,r=j1.test(n)}}else e&&t.removeAttribute("style");Ya in t&&(t[Ya]=r?i.display:"",t[E0]&&(i.display="none"))}const Sh=/\s*!important$/;function Oa(t,e,n){if(Ie(n))n.forEach(i=>Oa(t,e,i));else if(n==null&&(n=""),e.startsWith("--"))t.setProperty(e,n);else{const i=Z1(t,e);Sh.test(n)?t.setProperty(qi(i),n.replace(Sh,""),"important"):t[i]=n}}const Eh=["Webkit","Moz","ms"],nc={};function Z1(t,e){const n=nc[e];if(n)return n;let i=Pn(e);if(i!=="filter"&&i in t)return nc[e]=i;i=ll(i);for(let s=0;s<Eh.length;s++){const r=Eh[s]+i;if(r in t)return nc[e]=r}return e}const wh="http://www.w3.org/1999/xlink";function Th(t,e,n,i,s,r=Gv(e)){i&&e.startsWith("xlink:")?n==null?t.removeAttributeNS(wh,e.slice(6,e.length)):t.setAttributeNS(wh,e,n):n==null||r&&!gg(n)?t.removeAttribute(e):t.setAttribute(e,r?"":ii(n)?String(n):n)}function Ah(t,e,n,i,s){if(e==="innerHTML"||e==="textContent"){n!=null&&(t[e]=e==="innerHTML"?M0(n):n);return}const r=t.tagName;if(e==="value"&&r!=="PROGRESS"&&!r.includes("-")){const a=r==="OPTION"?t.getAttribute("value")||"":t.value,l=n==null?t.type==="checkbox"?"on":"":String(n);(a!==l||!("_value"in t))&&(t.value=l),n==null&&t.removeAttribute(e),t._value=n;return}let o=!1;if(n===""||n==null){const a=typeof t[e];a==="boolean"?n=gg(n):n==null&&a==="string"?(n="",o=!0):a==="number"&&(n=0,o=!0)}try{t[e]=n}catch{}o&&t.removeAttribute(s||e)}function ps(t,e,n,i){t.addEventListener(e,n,i)}function K1(t,e,n,i){t.removeEventListener(e,n,i)}const Rh=Symbol("_vei");function J1(t,e,n,i,s=null){const r=t[Rh]||(t[Rh]={}),o=r[e];if(i&&o)o.value=i;else{const[a,l]=Q1(e);if(i){const c=r[e]=ny(i,s);ps(t,a,c,l)}else o&&(K1(t,a,o,l),r[e]=void 0)}}const Ch=/(?:Once|Passive|Capture)$/;function Q1(t){let e;if(Ch.test(t)){e={};let i;for(;i=t.match(Ch);)t=t.slice(0,t.length-i[0].length),e[i[0].toLowerCase()]=!0}return[t[2]===":"?t.slice(3):qi(t.slice(2)),e]}let ic=0;const ey=Promise.resolve(),ty=()=>ic||(ey.then(()=>ic=0),ic=Date.now());function ny(t,e){const n=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=n.attached)return;Gn(iy(i,n.value),e,5,[i])};return n.value=t,n.attached=ty(),n}function iy(t,e){if(Ie(e)){const n=t.stopImmediatePropagation;return t.stopImmediatePropagation=()=>{n.call(t),t._stopped=!0},e.map(i=>s=>!s._stopped&&i&&i(s))}else return e}const Ph=t=>t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&t.charCodeAt(2)>96&&t.charCodeAt(2)<123,sy=(t,e,n,i,s,r)=>{const o=s==="svg";e==="class"?W1(t,i,o):e==="style"?Y1(t,n,i):rl(e)?Ju(e)||J1(t,e,n,i,r):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):ry(t,e,i,o))?(Ah(t,e,i),!t.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&Th(t,e,i,o,r,e!=="value")):t._isVueCE&&(/[A-Z]/.test(e)||!yt(i))?Ah(t,Pn(e),i,r,e):(e==="true-value"?t._trueValue=i:e==="false-value"&&(t._falseValue=i),Th(t,e,i,o))};function ry(t,e,n,i){if(i)return!!(e==="innerHTML"||e==="textContent"||e in t&&Ph(e)&&ke(n));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&t.tagName==="INPUT"||e==="type"&&t.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const s=t.tagName;if(s==="IMG"||s==="VIDEO"||s==="CANVAS"||s==="SOURCE")return!1}return Ph(e)&&yt(n)?!1:e in t}const Za=t=>{const e=t.props["onUpdate:modelValue"]||!1;return Ie(e)?n=>Ia(e,n):e};function oy(t){t.target.composing=!0}function Lh(t){const e=t.target;e.composing&&(e.composing=!1,e.dispatchEvent(new Event("input")))}const hr=Symbol("_assign"),Je={created(t,{modifiers:{lazy:e,trim:n,number:i}},s){t[hr]=Za(s);const r=i||s.props&&s.props.type==="number";ps(t,e?"change":"input",o=>{if(o.target.composing)return;let a=t.value;n&&(a=a.trim()),r&&(a=gu(a)),t[hr](a)}),n&&ps(t,"change",()=>{t.value=t.value.trim()}),e||(ps(t,"compositionstart",oy),ps(t,"compositionend",Lh),ps(t,"change",Lh))},mounted(t,{value:e}){t.value=e??""},beforeUpdate(t,{value:e,oldValue:n,modifiers:{lazy:i,trim:s,number:r}},o){if(t[hr]=Za(o),t.composing)return;const a=(r||t.type==="number")&&!/^0\d/.test(t.value)?gu(t.value):t.value,l=e??"";a!==l&&(document.activeElement===t&&t.type!=="range"&&(i&&e===n||s&&t.value.trim()===l)||(t.value=l))}},Vo={deep:!0,created(t,e,n){t[hr]=Za(n),ps(t,"change",()=>{const i=t._modelValue,s=ay(t),r=t.checked,o=t[hr];if(Ie(i)){const a=_g(i,s),l=a!==-1;if(r&&!l)o(i.concat(s));else if(!r&&l){const c=[...i];c.splice(a,1),o(c)}}else if(ol(i)){const a=new Set(i);r?a.add(s):a.delete(s),o(a)}else o(w0(t,r))})},mounted:Dh,beforeUpdate(t,e,n){t[hr]=Za(n),Dh(t,e,n)}};function Dh(t,{value:e,oldValue:n},i){t._modelValue=e;let s;if(Ie(e))s=_g(e,i.props.value)>-1;else if(ol(e))s=e.has(i.props.value);else{if(e===n)return;s=fl(e,w0(t,!0))}t.checked!==s&&(t.checked=s)}function ay(t){return"_value"in t?t._value:t.value}function w0(t,e){const n=e?"_trueValue":"_falseValue";return n in t?t[n]:e}const ly=["ctrl","shift","alt","meta"],cy={stop:t=>t.stopPropagation(),prevent:t=>t.preventDefault(),self:t=>t.target!==t.currentTarget,ctrl:t=>!t.ctrlKey,shift:t=>!t.shiftKey,alt:t=>!t.altKey,meta:t=>!t.metaKey,left:t=>"button"in t&&t.button!==0,middle:t=>"button"in t&&t.button!==1,right:t=>"button"in t&&t.button!==2,exact:(t,e)=>ly.some(n=>t[`${n}Key`]&&!e.includes(n))},Ka=(t,e)=>{const n=t._withMods||(t._withMods={}),i=e.join(".");return n[i]||(n[i]=(s,...r)=>{for(let o=0;o<e.length;o++){const a=cy[e[o]];if(a&&a(s,e))return}return t(s,...r)})},uy={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},dr=(t,e)=>{const n=t._withKeys||(t._withKeys={}),i=e.join(".");return n[i]||(n[i]=s=>{if(!("key"in s))return;const r=qi(s.key);if(e.some(o=>o===r||uy[o]===r))return t(s)})},fy=kt({patchProp:sy},O1);let Uh;function hy(){return Uh||(Uh=n1(fy))}const dy=(...t)=>{const e=hy().createApp(...t),{mount:n}=e;return e.mount=i=>{const s=my(i);if(!s)return;const r=e._component;!ke(r)&&!r.render&&!r.template&&(r.template=s.innerHTML),s.nodeType===1&&(s.textContent="");const o=n(s,!1,py(s));return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),o},e};function py(t){if(t instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&t instanceof MathMLElement)return"mathml"}function my(t){return yt(t)?document.querySelector(t):t}const Cs=(t,e)=>{const n=t.__vccOpts||t;for(const[i,s]of e)n[i]=s;return n},gy={name:"BasicForm",props:{initialWidth:{type:Number,default:155},initialDepth:{type:Number,default:105},initialSafety:{type:Number,default:0}},data(){return{localWidth:this.initialWidth,localDepth:this.initialDepth,localSafety:this.initialSafety}},methods:{emitValues(){this.$emit("update-dimensions",{width:this.localWidth,depth:this.localDepth,safety:this.localSafety})}}},_y={class:"mb-6 p-4 border border-gray-300 rounded"},vy={class:"flex-1 mb-4"},xy={class:"flex items-center space-x-2 mt-1"},yy={class:"flex-1 mb-4"},by={class:"flex items-center space-x-2 mt-1"},My={class:"flex-1 mb-4"},Sy={class:"mt-1 flex items-center space-x-1"};function Ey(t,e,n,i,s,r){return en(),an("fieldset",_y,[e[23]||(e[23]=q("legend",{class:"px-2 text-lg font-semibold"},"Dimensions",-1)),q("form",{onSubmit:e[16]||(e[16]=Ka(()=>{},["prevent"])),class:"flex flex-col sm:flex-row sm:flex-wrap sm:space-x-4 items-end",style:{width:"100%","max-width":"600px",margin:"0 auto","box-sizing":"border-box"}},[q("div",vy,[e[18]||(e[18]=q("label",{class:"block text-sm font-medium text-gray-700"},"Width:",-1)),q("div",xy,[$e(q("input",{type:"range","onUpdate:modelValue":e[0]||(e[0]=o=>s.localWidth=o),onInput:e[1]||(e[1]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"300",step:"1",class:"flex-1"},null,544),[[Je,s.localWidth,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[2]||(e[2]=o=>s.localWidth=o),onBlur:e[3]||(e[3]=(...o)=>r.emitValues&&r.emitValues(...o)),onKeyup:e[4]||(e[4]=dr((...o)=>r.emitValues&&r.emitValues(...o),["enter"])),onChange:e[5]||(e[5]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"300",step:"1",placeholder:"155",class:"p-2 border border-gray-300 rounded-md w-16"},null,544),[[Je,s.localWidth,void 0,{number:!0}]]),e[17]||(e[17]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])]),q("div",yy,[e[20]||(e[20]=q("label",{class:"block text-sm font-medium text-gray-700"},"Depth:",-1)),q("div",by,[$e(q("input",{type:"range","onUpdate:modelValue":e[6]||(e[6]=o=>s.localDepth=o),onInput:e[7]||(e[7]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"300",step:"1",class:"flex-1"},null,544),[[Je,s.localDepth,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[8]||(e[8]=o=>s.localDepth=o),onBlur:e[9]||(e[9]=(...o)=>r.emitValues&&r.emitValues(...o)),onKeyup:e[10]||(e[10]=dr((...o)=>r.emitValues&&r.emitValues(...o),["enter"])),onChange:e[11]||(e[11]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"300",step:"1",placeholder:"105",class:"p-2 border border-gray-300 rounded-md w-16"},null,544),[[Je,s.localDepth,void 0,{number:!0}]]),e[19]||(e[19]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])]),q("div",My,[e[22]||(e[22]=q("label",{class:"block text-sm font-medium text-gray-700"},"Safety Offset:",-1)),q("div",Sy,[$e(q("input",{"onUpdate:modelValue":e[12]||(e[12]=o=>s.localSafety=o),onBlur:e[13]||(e[13]=(...o)=>r.emitValues&&r.emitValues(...o)),onKeyup:e[14]||(e[14]=dr((...o)=>r.emitValues&&r.emitValues(...o),["enter"])),onChange:e[15]||(e[15]=(...o)=>r.emitValues&&r.emitValues(...o)),type:"number",min:"-2",max:"2",step:"0.1",placeholder:"0",class:"p-2 border border-gray-300 rounded-md w-16"},null,544),[[Je,s.localSafety,void 0,{number:!0}]]),e[21]||(e[21]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])])],32)])}const wy=Cs(gy,[["render",Ey]]),Ty={name:"AdvancedForm",props:{initialBottomHeight:{type:Number,default:15},initialTopHeight:{type:Number,default:25},initialBorderThickness:{type:Number,default:2.5}},data(){return{localBottomHeight:this.initialBottomHeight,localTopHeight:this.initialTopHeight,localBorderThickness:this.initialBorderThickness}},methods:{emitValues(){this.$emit("update-advanced",{bottomHeight:this.localBottomHeight,topHeight:this.localTopHeight,borderThickness:this.localBorderThickness})}}},Ay={class:"mb-6 p-4 border border-gray-300 rounded"},Ry={class:"flex-1 mb-4"},Cy={class:"flex items-center space-x-2 mt-1"},Py={class:"flex-1 mb-4"},Ly={class:"flex items-center space-x-2 mt-1"},Dy={class:"flex-1 mb-4"},Uy={class:"mt-1 flex items-center space-x-1"};function Iy(t,e,n,i,s,r){return en(),an("fieldset",Ay,[e[23]||(e[23]=q("legend",{class:"px-2 text-lg font-semibold"},"Advanced Settings",-1)),q("form",{onSubmit:e[16]||(e[16]=Ka(()=>{},["prevent"])),class:"flex flex-col sm:flex-row sm:flex-wrap sm:space-x-4 items-end mt-4",style:{width:"100%","max-width":"600px",margin:"0 auto","box-sizing":"border-box"}},[q("div",Ry,[e[18]||(e[18]=q("label",{class:"block text-sm font-medium text-gray-700"},"Bottom Height:",-1)),q("div",Cy,[$e(q("input",{type:"range","onUpdate:modelValue":e[0]||(e[0]=o=>s.localBottomHeight=o),onInput:e[1]||(e[1]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"100",step:"1",class:"flex-1"},null,544),[[Je,s.localBottomHeight,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[2]||(e[2]=o=>s.localBottomHeight=o),onBlur:e[3]||(e[3]=(...o)=>r.emitValues&&r.emitValues(...o)),onKeyup:e[4]||(e[4]=dr((...o)=>r.emitValues&&r.emitValues(...o),["enter"])),onChange:e[5]||(e[5]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"100",step:"1",placeholder:"15",class:"p-2 border border-gray-300 rounded-md w-16"},null,544),[[Je,s.localBottomHeight,void 0,{number:!0}]]),e[17]||(e[17]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])]),q("div",Py,[e[20]||(e[20]=q("label",{class:"block text-sm font-medium text-gray-700"},"Top Height:",-1)),q("div",Ly,[$e(q("input",{type:"range","onUpdate:modelValue":e[6]||(e[6]=o=>s.localTopHeight=o),onInput:e[7]||(e[7]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"100",step:"1",class:"flex-1"},null,544),[[Je,s.localTopHeight,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[8]||(e[8]=o=>s.localTopHeight=o),onBlur:e[9]||(e[9]=(...o)=>r.emitValues&&r.emitValues(...o)),onKeyup:e[10]||(e[10]=dr((...o)=>r.emitValues&&r.emitValues(...o),["enter"])),onChange:e[11]||(e[11]=(...o)=>r.emitValues&&r.emitValues(...o)),min:"0",max:"100",step:"1",placeholder:"25",class:"p-2 border border-gray-300 rounded-md w-16"},null,544),[[Je,s.localTopHeight,void 0,{number:!0}]]),e[19]||(e[19]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])]),q("div",Dy,[e[22]||(e[22]=q("label",{class:"block text-sm font-medium text-gray-700"},"Border Thickness:",-1)),q("div",Uy,[$e(q("input",{"onUpdate:modelValue":e[12]||(e[12]=o=>s.localBorderThickness=o),onBlur:e[13]||(e[13]=(...o)=>r.emitValues&&r.emitValues(...o)),onKeyup:e[14]||(e[14]=dr((...o)=>r.emitValues&&r.emitValues(...o),["enter"])),onChange:e[15]||(e[15]=(...o)=>r.emitValues&&r.emitValues(...o)),type:"number",min:"0",step:"0.1",placeholder:"2.5",class:"p-2 border border-gray-300 rounded-md w-16"},null,544),[[Je,s.localBorderThickness,void 0,{number:!0}]]),e[21]||(e[21]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])])],32)])}const Ny=Cs(Ty,[["render",Iy]]);/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const df="152",sc={ROTATE:0,DOLLY:1,PAN:2},Fy=0,Ih=1,Oy=2,T0=1,ky=2,vi=3,Xi=0,un=1,Mi=2,Gi=0,pr=1,Nh=2,Fh=3,Oh=4,By=5,sr=100,Hy=101,zy=102,kh=103,Bh=104,Vy=200,$y=201,Gy=202,Wy=203,A0=204,R0=205,Xy=206,qy=207,jy=208,Yy=209,Zy=210,Ky=0,Jy=1,Qy=2,Cu=3,eb=4,tb=5,nb=6,ib=7,C0=0,sb=1,rb=2,Ti=0,ob=1,ab=2,lb=3,cb=4,ub=5,P0=300,xr=301,yr=302,Pu=303,Lu=304,xl=306,Du=1e3,Hn=1001,Uu=1002,Kt=1003,Hh=1004,rc=1005,Tn=1006,fb=1007,So=1008,ws=1009,hb=1010,db=1011,L0=1012,pb=1013,vs=1014,xs=1015,Eo=1016,mb=1017,gb=1018,mr=1020,_b=1021,zn=1023,vb=1024,xb=1025,Ms=1026,br=1027,yb=1028,bb=1029,Mb=1030,Sb=1031,Eb=1033,oc=33776,ac=33777,lc=33778,cc=33779,zh=35840,Vh=35841,$h=35842,Gh=35843,wb=36196,Wh=37492,Xh=37496,qh=37808,jh=37809,Yh=37810,Zh=37811,Kh=37812,Jh=37813,Qh=37814,ed=37815,td=37816,nd=37817,id=37818,sd=37819,rd=37820,od=37821,uc=36492,Tb=36283,ad=36284,ld=36285,cd=36286,D0=3e3,Ss=3001,Ab=3200,Rb=3201,U0=0,Cb=1,Es="",He="srgb",si="srgb-linear",I0="display-p3",fc=7680,Pb=519,ud=35044,fd="300 es",Iu=1035;class Ps{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const r=s.indexOf(n);r!==-1&&s.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const s=i.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,e);e.target=null}}}const zt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let hd=1234567;const gr=Math.PI/180,wo=180/Math.PI;function Tr(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(zt[t&255]+zt[t>>8&255]+zt[t>>16&255]+zt[t>>24&255]+"-"+zt[e&255]+zt[e>>8&255]+"-"+zt[e>>16&15|64]+zt[e>>24&255]+"-"+zt[n&63|128]+zt[n>>8&255]+"-"+zt[n>>16&255]+zt[n>>24&255]+zt[i&255]+zt[i>>8&255]+zt[i>>16&255]+zt[i>>24&255]).toLowerCase()}function Qt(t,e,n){return Math.max(e,Math.min(n,t))}function pf(t,e){return(t%e+e)%e}function Lb(t,e,n,i,s){return i+(t-e)*(s-i)/(n-e)}function Db(t,e,n){return t!==e?(n-t)/(e-t):0}function fo(t,e,n){return(1-n)*t+n*e}function Ub(t,e,n,i){return fo(t,e,1-Math.exp(-n*i))}function Ib(t,e=1){return e-Math.abs(pf(t,e*2)-e)}function Nb(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))}function Fb(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))}function Ob(t,e){return t+Math.floor(Math.random()*(e-t+1))}function kb(t,e){return t+Math.random()*(e-t)}function Bb(t){return t*(.5-Math.random())}function Hb(t){t!==void 0&&(hd=t);let e=hd+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function zb(t){return t*gr}function Vb(t){return t*wo}function Nu(t){return(t&t-1)===0&&t!==0}function $b(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function N0(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function Gb(t,e,n,i,s){const r=Math.cos,o=Math.sin,a=r(n/2),l=o(n/2),c=r((e+i)/2),u=o((e+i)/2),f=r((e-i)/2),h=o((e-i)/2),d=r((i-e)/2),m=o((i-e)/2);switch(s){case"XYX":t.set(a*u,l*f,l*h,a*c);break;case"YZY":t.set(l*h,a*u,l*f,a*c);break;case"ZXZ":t.set(l*f,l*h,a*u,a*c);break;case"XZX":t.set(a*u,l*m,l*d,a*c);break;case"YXY":t.set(l*d,a*u,l*m,a*c);break;case"ZYZ":t.set(l*m,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Qr(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function sn(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(t*65535);case Uint8Array:return Math.round(t*255);case Int16Array:return Math.round(t*32767);case Int8Array:return Math.round(t*127);default:throw new Error("Invalid component type.")}}const dd={DEG2RAD:gr,RAD2DEG:wo,generateUUID:Tr,clamp:Qt,euclideanModulo:pf,mapLinear:Lb,inverseLerp:Db,lerp:fo,damp:Ub,pingpong:Ib,smoothstep:Nb,smootherstep:Fb,randInt:Ob,randFloat:kb,randFloatSpread:Bb,seededRandom:Hb,degToRad:zb,radToDeg:Vb,isPowerOfTwo:Nu,ceilPowerOfTwo:$b,floorPowerOfTwo:N0,setQuaternionFromProperEuler:Gb,normalize:sn,denormalize:Qr};class Ge{constructor(e=0,n=0){Ge.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6],this.y=s[1]*n+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Qt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),s=Math.sin(n),r=this.x-e.x,o=this.y-e.y;return this.x=r*i-o*s+e.x,this.y=r*s+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ze{constructor(){Ze.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,n,i,s,r,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=s,u[2]=a,u[3]=n,u[4]=r,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,r=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],f=i[7],h=i[2],d=i[5],m=i[8],_=s[0],g=s[3],p=s[6],S=s[1],y=s[4],x=s[7],b=s[2],M=s[5],T=s[8];return r[0]=o*_+a*S+l*b,r[3]=o*g+a*y+l*M,r[6]=o*p+a*x+l*T,r[1]=c*_+u*S+f*b,r[4]=c*g+u*y+f*M,r[7]=c*p+u*x+f*T,r[2]=h*_+d*S+m*b,r[5]=h*g+d*y+m*M,r[8]=h*p+d*x+m*T,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return n*o*u-n*a*c-i*r*u+i*a*l+s*r*c-s*o*l}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=u*o-a*c,h=a*l-u*r,d=c*r-o*l,m=n*f+i*h+s*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/m;return e[0]=f*_,e[1]=(s*c-u*i)*_,e[2]=(a*i-s*o)*_,e[3]=h*_,e[4]=(u*n-s*l)*_,e[5]=(s*r-a*n)*_,e[6]=d*_,e[7]=(i*l-c*n)*_,e[8]=(o*n-i*r)*_,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,s,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-s*c,s*l,-s*(-c*o+l*a)+a+n,0,0,1),this}scale(e,n){return this.premultiply(hc.makeScale(e,n)),this}rotate(e){return this.premultiply(hc.makeRotation(-e)),this}translate(e,n){return this.premultiply(hc.makeTranslation(e,n)),this}makeTranslation(e,n){return this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<9;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const hc=new Ze;function F0(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function Ja(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}const pd={};function ho(t){t in pd||(pd[t]=!0,console.warn(t))}function _r(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function dc(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}const Wb=new Ze().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),Xb=new Ze().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function qb(t){return t.convertSRGBToLinear().applyMatrix3(Xb)}function jb(t){return t.applyMatrix3(Wb).convertLinearToSRGB()}const Yb={[si]:t=>t,[He]:t=>t.convertSRGBToLinear(),[I0]:qb},Zb={[si]:t=>t,[He]:t=>t.convertLinearToSRGB(),[I0]:jb},In={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(t){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!t},get workingColorSpace(){return si},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.enabled===!1||e===n||!e||!n)return t;const i=Yb[e],s=Zb[n];if(i===void 0||s===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${n}".`);return s(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}};let Ns;class O0{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Ns===void 0&&(Ns=Ja("canvas")),Ns.width=e.width,Ns.height=e.height;const i=Ns.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=Ns}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const n=Ja("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const s=i.getImageData(0,0,e.width,e.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=_r(r[o]/255)*255;return i.putImageData(s,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(_r(n[i]/255)*255):n[i]=_r(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class k0{constructor(e=null){this.isSource=!0,this.uuid=Tr(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(pc(s[o].image)):r.push(pc(s[o]))}else r=pc(s);i.url=r}return n||(e.images[this.uuid]=i),i}}function pc(t){return typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap?O0.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Kb=0;class bn extends Ps{constructor(e=bn.DEFAULT_IMAGE,n=bn.DEFAULT_MAPPING,i=Hn,s=Hn,r=Tn,o=So,a=zn,l=ws,c=bn.DEFAULT_ANISOTROPY,u=Es){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Kb++}),this.uuid=Tr(),this.name="",this.source=new k0(e),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Ge(0,0),this.repeat=new Ge(1,1),this.center=new Ge(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ze,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(ho("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===Ss?He:Es),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==P0)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Du:e.x=e.x-Math.floor(e.x);break;case Hn:e.x=e.x<0?0:1;break;case Uu:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Du:e.y=e.y-Math.floor(e.y);break;case Hn:e.y=e.y<0?0:1;break;case Uu:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return ho("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===He?Ss:D0}set encoding(e){ho("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Ss?He:Es}}bn.DEFAULT_IMAGE=null;bn.DEFAULT_MAPPING=P0;bn.DEFAULT_ANISOTROPY=1;class It{constructor(e=0,n=0,i=0,s=1){It.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,s){return this.x=e,this.y=n,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,r=this.w,o=e.elements;return this.x=o[0]*n+o[4]*i+o[8]*s+o[12]*r,this.y=o[1]*n+o[5]*i+o[9]*s+o[13]*r,this.z=o[2]*n+o[6]*i+o[10]*s+o[14]*r,this.w=o[3]*n+o[7]*i+o[11]*s+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,s,r;const l=e.elements,c=l[0],u=l[4],f=l[8],h=l[1],d=l[5],m=l[9],_=l[2],g=l[6],p=l[10];if(Math.abs(u-h)<.01&&Math.abs(f-_)<.01&&Math.abs(m-g)<.01){if(Math.abs(u+h)<.1&&Math.abs(f+_)<.1&&Math.abs(m+g)<.1&&Math.abs(c+d+p-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const y=(c+1)/2,x=(d+1)/2,b=(p+1)/2,M=(u+h)/4,T=(f+_)/4,L=(m+g)/4;return y>x&&y>b?y<.01?(i=0,s=.707106781,r=.707106781):(i=Math.sqrt(y),s=M/i,r=T/i):x>b?x<.01?(i=.707106781,s=0,r=.707106781):(s=Math.sqrt(x),i=M/s,r=L/s):b<.01?(i=.707106781,s=.707106781,r=0):(r=Math.sqrt(b),i=T/r,s=L/r),this.set(i,s,r,n),this}let S=Math.sqrt((g-m)*(g-m)+(f-_)*(f-_)+(h-u)*(h-u));return Math.abs(S)<.001&&(S=1),this.x=(g-m)/S,this.y=(f-_)/S,this.z=(h-u)/S,this.w=Math.acos((c+d+p-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ts extends Ps{constructor(e=1,n=1,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=n,this.depth=1,this.scissor=new It(0,0,e,n),this.scissorTest=!1,this.viewport=new It(0,0,e,n);const s={width:e,height:n,depth:1};i.encoding!==void 0&&(ho("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===Ss?He:Es),this.texture=new bn(s,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:Tn,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,n,i=1){(this.width!==e||this.height!==n||this.depth!==i)&&(this.width=e,this.height=n,this.depth=i,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const n=Object.assign({},e.texture.image);return this.texture.source=new k0(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class B0 extends bn{constructor(e=null,n=1,i=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Kt,this.minFilter=Kt,this.wrapR=Hn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Jb extends bn{constructor(e=null,n=1,i=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Kt,this.minFilter=Kt,this.wrapR=Hn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ar{constructor(e=0,n=0,i=0,s=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=s}static slerpFlat(e,n,i,s,r,o,a){let l=i[s+0],c=i[s+1],u=i[s+2],f=i[s+3];const h=r[o+0],d=r[o+1],m=r[o+2],_=r[o+3];if(a===0){e[n+0]=l,e[n+1]=c,e[n+2]=u,e[n+3]=f;return}if(a===1){e[n+0]=h,e[n+1]=d,e[n+2]=m,e[n+3]=_;return}if(f!==_||l!==h||c!==d||u!==m){let g=1-a;const p=l*h+c*d+u*m+f*_,S=p>=0?1:-1,y=1-p*p;if(y>Number.EPSILON){const b=Math.sqrt(y),M=Math.atan2(b,p*S);g=Math.sin(g*M)/b,a=Math.sin(a*M)/b}const x=a*S;if(l=l*g+h*x,c=c*g+d*x,u=u*g+m*x,f=f*g+_*x,g===1-a){const b=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=b,c*=b,u*=b,f*=b}}e[n]=l,e[n+1]=c,e[n+2]=u,e[n+3]=f}static multiplyQuaternionsFlat(e,n,i,s,r,o){const a=i[s],l=i[s+1],c=i[s+2],u=i[s+3],f=r[o],h=r[o+1],d=r[o+2],m=r[o+3];return e[n]=a*m+u*f+l*d-c*h,e[n+1]=l*m+u*h+c*f-a*d,e[n+2]=c*m+u*d+a*h-l*f,e[n+3]=u*m-a*f-l*h-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){const i=e._x,s=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(s/2),f=a(r/2),h=l(i/2),d=l(s/2),m=l(r/2);switch(o){case"XYZ":this._x=h*u*f+c*d*m,this._y=c*d*f-h*u*m,this._z=c*u*m+h*d*f,this._w=c*u*f-h*d*m;break;case"YXZ":this._x=h*u*f+c*d*m,this._y=c*d*f-h*u*m,this._z=c*u*m-h*d*f,this._w=c*u*f+h*d*m;break;case"ZXY":this._x=h*u*f-c*d*m,this._y=c*d*f+h*u*m,this._z=c*u*m+h*d*f,this._w=c*u*f-h*d*m;break;case"ZYX":this._x=h*u*f-c*d*m,this._y=c*d*f+h*u*m,this._z=c*u*m-h*d*f,this._w=c*u*f+h*d*m;break;case"YZX":this._x=h*u*f+c*d*m,this._y=c*d*f+h*u*m,this._z=c*u*m-h*d*f,this._w=c*u*f-h*d*m;break;case"XZY":this._x=h*u*f-c*d*m,this._y=c*d*f-h*u*m,this._z=c*u*m+h*d*f,this._w=c*u*f+h*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],s=n[4],r=n[8],o=n[1],a=n[5],l=n[9],c=n[2],u=n[6],f=n[10],h=i+a+f;if(h>0){const d=.5/Math.sqrt(h+1);this._w=.25/d,this._x=(u-l)*d,this._y=(r-c)*d,this._z=(o-s)*d}else if(i>a&&i>f){const d=2*Math.sqrt(1+i-a-f);this._w=(u-l)/d,this._x=.25*d,this._y=(s+o)/d,this._z=(r+c)/d}else if(a>f){const d=2*Math.sqrt(1+a-i-f);this._w=(r-c)/d,this._x=(s+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+f-i-a);this._w=(o-s)/d,this._x=(r+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Qt(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const s=Math.min(1,n/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,s=e._y,r=e._z,o=e._w,a=n._x,l=n._y,c=n._z,u=n._w;return this._x=i*u+o*a+s*c-r*l,this._y=s*u+o*l+r*a-i*c,this._z=r*u+o*c+i*l-s*a,this._w=o*u-i*a-s*l-r*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,s=this._y,r=this._z,o=this._w;let a=o*e._w+i*e._x+s*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=s,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-n;return this._w=d*o+n*this._w,this._x=d*i+n*this._x,this._y=d*s+n*this._y,this._z=d*r+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),f=Math.sin((1-n)*u)/c,h=Math.sin(n*u)/c;return this._w=o*f+this._w*h,this._x=i*f+this._x*h,this._y=s*f+this._y*h,this._z=r*f+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=Math.random(),n=Math.sqrt(1-e),i=Math.sqrt(e),s=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(n*Math.cos(s),i*Math.sin(r),i*Math.cos(r),n*Math.sin(s))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class V{constructor(e=0,n=0,i=0){V.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(md.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(md.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6]*s,this.y=r[1]*n+r[4]*i+r[7]*s,this.z=r[2]*n+r[5]*i+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,r=e.elements,o=1/(r[3]*n+r[7]*i+r[11]*s+r[15]);return this.x=(r[0]*n+r[4]*i+r[8]*s+r[12])*o,this.y=(r[1]*n+r[5]*i+r[9]*s+r[13])*o,this.z=(r[2]*n+r[6]*i+r[10]*s+r[14])*o,this}applyQuaternion(e){const n=this.x,i=this.y,s=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=l*n+o*s-a*i,u=l*i+a*n-r*s,f=l*s+r*i-o*n,h=-r*n-o*i-a*s;return this.x=c*l+h*-r+u*-a-f*-o,this.y=u*l+h*-o+f*-r-c*-a,this.z=f*l+h*-a+c*-o-u*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*n+r[4]*i+r[8]*s,this.y=r[1]*n+r[5]*i+r[9]*s,this.z=r[2]*n+r[6]*i+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,s=e.y,r=e.z,o=n.x,a=n.y,l=n.z;return this.x=s*l-r*a,this.y=r*o-i*l,this.z=i*a-s*o,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return mc.copy(this).projectOnVector(e),this.sub(mc)}reflect(e){return this.sub(mc.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Qt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return n*n+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const s=Math.sin(n)*e;return this.x=s*Math.sin(i),this.y=Math.cos(n)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=s,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,n=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const mc=new V,md=new Ar;class Lo{constructor(e=new V(1/0,1/0,1/0),n=new V(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n+=3)this.expandByPoint(li.fromArray(e,n));return this}setFromBufferAttribute(e){this.makeEmpty();for(let n=0,i=e.count;n<i;n++)this.expandByPoint(li.fromBufferAttribute(e,n));return this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=li.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Fs.copy(e.boundingBox),Fs.applyMatrix4(e.matrixWorld),this.union(Fs);else{const s=e.geometry;if(s!==void 0)if(n&&s.attributes!==void 0&&s.attributes.position!==void 0){const r=s.attributes.position;for(let o=0,a=r.count;o<a;o++)li.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(li)}else s.boundingBox===null&&s.computeBoundingBox(),Fs.copy(s.boundingBox),Fs.applyMatrix4(e.matrixWorld),this.union(Fs)}const i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],n);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,li),li.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Or),$o.subVectors(this.max,Or),Os.subVectors(e.a,Or),ks.subVectors(e.b,Or),Bs.subVectors(e.c,Or),Pi.subVectors(ks,Os),Li.subVectors(Bs,ks),ss.subVectors(Os,Bs);let n=[0,-Pi.z,Pi.y,0,-Li.z,Li.y,0,-ss.z,ss.y,Pi.z,0,-Pi.x,Li.z,0,-Li.x,ss.z,0,-ss.x,-Pi.y,Pi.x,0,-Li.y,Li.x,0,-ss.y,ss.x,0];return!gc(n,Os,ks,Bs,$o)||(n=[1,0,0,0,1,0,0,0,1],!gc(n,Os,ks,Bs,$o))?!1:(Go.crossVectors(Pi,Li),n=[Go.x,Go.y,Go.z],gc(n,Os,ks,Bs,$o))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,li).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(li).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ai[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ai[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ai[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ai[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ai[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ai[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ai[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ai[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ai),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ai=[new V,new V,new V,new V,new V,new V,new V,new V],li=new V,Fs=new Lo,Os=new V,ks=new V,Bs=new V,Pi=new V,Li=new V,ss=new V,Or=new V,$o=new V,Go=new V,rs=new V;function gc(t,e,n,i,s){for(let r=0,o=t.length-3;r<=o;r+=3){rs.fromArray(t,r);const a=s.x*Math.abs(rs.x)+s.y*Math.abs(rs.y)+s.z*Math.abs(rs.z),l=e.dot(rs),c=n.dot(rs),u=i.dot(rs);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const Qb=new Lo,kr=new V,_c=new V;class yl{constructor(e=new V,n=-1){this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):Qb.setFromPoints(e).getCenter(i);let s=0;for(let r=0,o=e.length;r<o;r++)s=Math.max(s,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;kr.subVectors(e,this.center);const n=kr.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),s=(i-this.radius)*.5;this.center.addScaledVector(kr,s/i),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(_c.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(kr.copy(e.center).add(_c)),this.expandByPoint(kr.copy(e.center).sub(_c))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ci=new V,vc=new V,Wo=new V,Di=new V,xc=new V,Xo=new V,yc=new V;class H0{constructor(e=new V,n=new V(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ci)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=ci.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(ci.copy(this.origin).addScaledVector(this.direction,n),ci.distanceToSquared(e))}distanceSqToSegment(e,n,i,s){vc.copy(e).add(n).multiplyScalar(.5),Wo.copy(n).sub(e).normalize(),Di.copy(this.origin).sub(vc);const r=e.distanceTo(n)*.5,o=-this.direction.dot(Wo),a=Di.dot(this.direction),l=-Di.dot(Wo),c=Di.lengthSq(),u=Math.abs(1-o*o);let f,h,d,m;if(u>0)if(f=o*l-a,h=o*a-l,m=r*u,f>=0)if(h>=-m)if(h<=m){const _=1/u;f*=_,h*=_,d=f*(f+o*h+2*a)+h*(o*f+h+2*l)+c}else h=r,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h=-r,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h<=-m?(f=Math.max(0,-(-o*r+a)),h=f>0?-r:Math.min(Math.max(-r,-l),r),d=-f*f+h*(h+2*l)+c):h<=m?(f=0,h=Math.min(Math.max(-r,-l),r),d=h*(h+2*l)+c):(f=Math.max(0,-(o*r+a)),h=f>0?r:Math.min(Math.max(-r,-l),r),d=-f*f+h*(h+2*l)+c);else h=o>0?-r:r,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,f),s&&s.copy(vc).addScaledVector(Wo,h),d}intersectSphere(e,n){ci.subVectors(e.center,this.origin);const i=ci.dot(this.direction),s=ci.dot(ci)-i*i,r=e.radius*e.radius;if(s>r)return null;const o=Math.sqrt(r-s),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,n):this.at(a,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,s,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,h=this.origin;return c>=0?(i=(e.min.x-h.x)*c,s=(e.max.x-h.x)*c):(i=(e.max.x-h.x)*c,s=(e.min.x-h.x)*c),u>=0?(r=(e.min.y-h.y)*u,o=(e.max.y-h.y)*u):(r=(e.max.y-h.y)*u,o=(e.min.y-h.y)*u),i>o||r>s||((r>i||isNaN(i))&&(i=r),(o<s||isNaN(s))&&(s=o),f>=0?(a=(e.min.z-h.z)*f,l=(e.max.z-h.z)*f):(a=(e.max.z-h.z)*f,l=(e.min.z-h.z)*f),i>l||a>s)||((a>i||i!==i)&&(i=a),(l<s||s!==s)&&(s=l),s<0)?null:this.at(i>=0?i:s,n)}intersectsBox(e){return this.intersectBox(e,ci)!==null}intersectTriangle(e,n,i,s,r){xc.subVectors(n,e),Xo.subVectors(i,e),yc.crossVectors(xc,Xo);let o=this.direction.dot(yc),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Di.subVectors(this.origin,e);const l=a*this.direction.dot(Xo.crossVectors(Di,Xo));if(l<0)return null;const c=a*this.direction.dot(xc.cross(Di));if(c<0||l+c>o)return null;const u=-a*Di.dot(yc);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class At{constructor(){At.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,n,i,s,r,o,a,l,c,u,f,h,d,m,_,g){const p=this.elements;return p[0]=e,p[4]=n,p[8]=i,p[12]=s,p[1]=r,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=u,p[10]=f,p[14]=h,p[3]=d,p[7]=m,p[11]=_,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new At().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,s=1/Hs.setFromMatrixColumn(e,0).length(),r=1/Hs.setFromMatrixColumn(e,1).length(),o=1/Hs.setFromMatrixColumn(e,2).length();return n[0]=i[0]*s,n[1]=i[1]*s,n[2]=i[2]*s,n[3]=0,n[4]=i[4]*r,n[5]=i[5]*r,n[6]=i[6]*r,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,s=e.y,r=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(s),c=Math.sin(s),u=Math.cos(r),f=Math.sin(r);if(e.order==="XYZ"){const h=o*u,d=o*f,m=a*u,_=a*f;n[0]=l*u,n[4]=-l*f,n[8]=c,n[1]=d+m*c,n[5]=h-_*c,n[9]=-a*l,n[2]=_-h*c,n[6]=m+d*c,n[10]=o*l}else if(e.order==="YXZ"){const h=l*u,d=l*f,m=c*u,_=c*f;n[0]=h+_*a,n[4]=m*a-d,n[8]=o*c,n[1]=o*f,n[5]=o*u,n[9]=-a,n[2]=d*a-m,n[6]=_+h*a,n[10]=o*l}else if(e.order==="ZXY"){const h=l*u,d=l*f,m=c*u,_=c*f;n[0]=h-_*a,n[4]=-o*f,n[8]=m+d*a,n[1]=d+m*a,n[5]=o*u,n[9]=_-h*a,n[2]=-o*c,n[6]=a,n[10]=o*l}else if(e.order==="ZYX"){const h=o*u,d=o*f,m=a*u,_=a*f;n[0]=l*u,n[4]=m*c-d,n[8]=h*c+_,n[1]=l*f,n[5]=_*c+h,n[9]=d*c-m,n[2]=-c,n[6]=a*l,n[10]=o*l}else if(e.order==="YZX"){const h=o*l,d=o*c,m=a*l,_=a*c;n[0]=l*u,n[4]=_-h*f,n[8]=m*f+d,n[1]=f,n[5]=o*u,n[9]=-a*u,n[2]=-c*u,n[6]=d*f+m,n[10]=h-_*f}else if(e.order==="XZY"){const h=o*l,d=o*c,m=a*l,_=a*c;n[0]=l*u,n[4]=-f,n[8]=c*u,n[1]=h*f+_,n[5]=o*u,n[9]=d*f-m,n[2]=m*f-d,n[6]=a*u,n[10]=_*f+h}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(eM,e,tM)}lookAt(e,n,i){const s=this.elements;return hn.subVectors(e,n),hn.lengthSq()===0&&(hn.z=1),hn.normalize(),Ui.crossVectors(i,hn),Ui.lengthSq()===0&&(Math.abs(i.z)===1?hn.x+=1e-4:hn.z+=1e-4,hn.normalize(),Ui.crossVectors(i,hn)),Ui.normalize(),qo.crossVectors(hn,Ui),s[0]=Ui.x,s[4]=qo.x,s[8]=hn.x,s[1]=Ui.y,s[5]=qo.y,s[9]=hn.y,s[2]=Ui.z,s[6]=qo.z,s[10]=hn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,r=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],f=i[5],h=i[9],d=i[13],m=i[2],_=i[6],g=i[10],p=i[14],S=i[3],y=i[7],x=i[11],b=i[15],M=s[0],T=s[4],L=s[8],v=s[12],w=s[1],N=s[5],U=s[9],I=s[13],F=s[2],k=s[6],H=s[10],$=s[14],W=s[3],ae=s[7],te=s[11],Ee=s[15];return r[0]=o*M+a*w+l*F+c*W,r[4]=o*T+a*N+l*k+c*ae,r[8]=o*L+a*U+l*H+c*te,r[12]=o*v+a*I+l*$+c*Ee,r[1]=u*M+f*w+h*F+d*W,r[5]=u*T+f*N+h*k+d*ae,r[9]=u*L+f*U+h*H+d*te,r[13]=u*v+f*I+h*$+d*Ee,r[2]=m*M+_*w+g*F+p*W,r[6]=m*T+_*N+g*k+p*ae,r[10]=m*L+_*U+g*H+p*te,r[14]=m*v+_*I+g*$+p*Ee,r[3]=S*M+y*w+x*F+b*W,r[7]=S*T+y*N+x*k+b*ae,r[11]=S*L+y*U+x*H+b*te,r[15]=S*v+y*I+x*$+b*Ee,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],s=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],f=e[6],h=e[10],d=e[14],m=e[3],_=e[7],g=e[11],p=e[15];return m*(+r*l*f-s*c*f-r*a*h+i*c*h+s*a*d-i*l*d)+_*(+n*l*d-n*c*h+r*o*h-s*o*d+s*c*u-r*l*u)+g*(+n*c*f-n*a*d-r*o*f+i*o*d+r*a*u-i*c*u)+p*(-s*a*u-n*l*f+n*a*h+s*o*f-i*o*h+i*l*u)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=n,s[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=e[9],h=e[10],d=e[11],m=e[12],_=e[13],g=e[14],p=e[15],S=f*g*c-_*h*c+_*l*d-a*g*d-f*l*p+a*h*p,y=m*h*c-u*g*c-m*l*d+o*g*d+u*l*p-o*h*p,x=u*_*c-m*f*c+m*a*d-o*_*d-u*a*p+o*f*p,b=m*f*l-u*_*l-m*a*h+o*_*h+u*a*g-o*f*g,M=n*S+i*y+s*x+r*b;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/M;return e[0]=S*T,e[1]=(_*h*r-f*g*r-_*s*d+i*g*d+f*s*p-i*h*p)*T,e[2]=(a*g*r-_*l*r+_*s*c-i*g*c-a*s*p+i*l*p)*T,e[3]=(f*l*r-a*h*r-f*s*c+i*h*c+a*s*d-i*l*d)*T,e[4]=y*T,e[5]=(u*g*r-m*h*r+m*s*d-n*g*d-u*s*p+n*h*p)*T,e[6]=(m*l*r-o*g*r-m*s*c+n*g*c+o*s*p-n*l*p)*T,e[7]=(o*h*r-u*l*r+u*s*c-n*h*c-o*s*d+n*l*d)*T,e[8]=x*T,e[9]=(m*f*r-u*_*r-m*i*d+n*_*d+u*i*p-n*f*p)*T,e[10]=(o*_*r-m*a*r+m*i*c-n*_*c-o*i*p+n*a*p)*T,e[11]=(u*a*r-o*f*r-u*i*c+n*f*c+o*i*d-n*a*d)*T,e[12]=b*T,e[13]=(u*_*s-m*f*s+m*i*h-n*_*h-u*i*g+n*f*g)*T,e[14]=(m*a*s-o*_*s-m*i*l+n*_*l+o*i*g-n*a*g)*T,e[15]=(o*f*s-u*a*s+u*i*l-n*f*l-o*i*h+n*a*h)*T,this}scale(e){const n=this.elements,i=e.x,s=e.y,r=e.z;return n[0]*=i,n[4]*=s,n[8]*=r,n[1]*=i,n[5]*=s,n[9]*=r,n[2]*=i,n[6]*=s,n[10]*=r,n[3]*=i,n[7]*=s,n[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,s))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),s=Math.sin(n),r=1-i,o=e.x,a=e.y,l=e.z,c=r*o,u=r*a;return this.set(c*o+i,c*a-s*l,c*l+s*a,0,c*a+s*l,u*a+i,u*l-s*o,0,c*l-s*a,u*l+s*o,r*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,s,r,o){return this.set(1,i,r,0,e,1,o,0,n,s,1,0,0,0,0,1),this}compose(e,n,i){const s=this.elements,r=n._x,o=n._y,a=n._z,l=n._w,c=r+r,u=o+o,f=a+a,h=r*c,d=r*u,m=r*f,_=o*u,g=o*f,p=a*f,S=l*c,y=l*u,x=l*f,b=i.x,M=i.y,T=i.z;return s[0]=(1-(_+p))*b,s[1]=(d+x)*b,s[2]=(m-y)*b,s[3]=0,s[4]=(d-x)*M,s[5]=(1-(h+p))*M,s[6]=(g+S)*M,s[7]=0,s[8]=(m+y)*T,s[9]=(g-S)*T,s[10]=(1-(h+_))*T,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,n,i){const s=this.elements;let r=Hs.set(s[0],s[1],s[2]).length();const o=Hs.set(s[4],s[5],s[6]).length(),a=Hs.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],Nn.copy(this);const c=1/r,u=1/o,f=1/a;return Nn.elements[0]*=c,Nn.elements[1]*=c,Nn.elements[2]*=c,Nn.elements[4]*=u,Nn.elements[5]*=u,Nn.elements[6]*=u,Nn.elements[8]*=f,Nn.elements[9]*=f,Nn.elements[10]*=f,n.setFromRotationMatrix(Nn),i.x=r,i.y=o,i.z=a,this}makePerspective(e,n,i,s,r,o){const a=this.elements,l=2*r/(n-e),c=2*r/(i-s),u=(n+e)/(n-e),f=(i+s)/(i-s),h=-(o+r)/(o-r),d=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,n,i,s,r,o){const a=this.elements,l=1/(n-e),c=1/(i-s),u=1/(o-r),f=(n+e)*l,h=(i+s)*c,d=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<16;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const Hs=new V,Nn=new At,eM=new V(0,0,0),tM=new V(1,1,1),Ui=new V,qo=new V,hn=new V,gd=new At,_d=new Ar;class bl{constructor(e=0,n=0,i=0,s=bl.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,s=this._order){return this._x=e,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const s=e.elements,r=s[0],o=s[4],a=s[8],l=s[1],c=s[5],u=s[9],f=s[2],h=s[6],d=s[10];switch(n){case"XYZ":this._y=Math.asin(Qt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(h,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Qt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-f,r),this._z=0);break;case"ZXY":this._x=Math.asin(Qt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-f,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Qt(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Qt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-f,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Qt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return gd.makeRotationFromQuaternion(e),this.setFromRotationMatrix(gd,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return _d.setFromEuler(this),this.setFromQuaternion(_d,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}bl.DEFAULT_ORDER="XYZ";class z0{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let nM=0;const vd=new V,zs=new Ar,ui=new At,jo=new V,Br=new V,iM=new V,sM=new Ar,xd=new V(1,0,0),yd=new V(0,1,0),bd=new V(0,0,1),rM={type:"added"},Md={type:"removed"};class Nt extends Ps{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:nM++}),this.uuid=Tr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Nt.DEFAULT_UP.clone();const e=new V,n=new bl,i=new Ar,s=new V(1,1,1);function r(){i.setFromEuler(n,!1)}function o(){n.setFromQuaternion(i,void 0,!1)}n._onChange(r),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new At},normalMatrix:{value:new Ze}}),this.matrix=new At,this.matrixWorld=new At,this.matrixAutoUpdate=Nt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Nt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new z0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return zs.setFromAxisAngle(e,n),this.quaternion.multiply(zs),this}rotateOnWorldAxis(e,n){return zs.setFromAxisAngle(e,n),this.quaternion.premultiply(zs),this}rotateX(e){return this.rotateOnAxis(xd,e)}rotateY(e){return this.rotateOnAxis(yd,e)}rotateZ(e){return this.rotateOnAxis(bd,e)}translateOnAxis(e,n){return vd.copy(e).applyQuaternion(this.quaternion),this.position.add(vd.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(xd,e)}translateY(e){return this.translateOnAxis(yd,e)}translateZ(e){return this.translateOnAxis(bd,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ui.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?jo.copy(e):jo.set(e,n,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Br.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ui.lookAt(Br,jo,this.up):ui.lookAt(jo,Br,this.up),this.quaternion.setFromRotationMatrix(ui),s&&(ui.extractRotation(s.matrixWorld),zs.setFromRotationMatrix(ui),this.quaternion.premultiply(zs.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(rM)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(Md)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const n=this.children[e];n.parent=null,n.dispatchEvent(Md)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),ui.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ui.multiply(e.parent.matrixWorld)),e.applyMatrix4(ui),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectByProperty(e,n);if(o!==void 0)return o}}getObjectsByProperty(e,n){let i=[];this[e]===n&&i.push(this);for(let s=0,r=this.children.length;s<r;s++){const o=this.children[s].getObjectsByProperty(e,n);o.length>0&&(i=i.concat(o))}return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Br,e,iM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Br,sM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,s=n.length;i<s;i++){const r=n[i];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const s=this.children;for(let r=0,o=s.length;r<o;r++){const a=s[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const f=l[c];r(e.shapes,f)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));s.material=a}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];s.animations.push(r(e.animations,l))}}if(n){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),f=o(e.shapes),h=o(e.skeletons),d=o(e.animations),m=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),f.length>0&&(i.shapes=f),h.length>0&&(i.skeletons=h),d.length>0&&(i.animations=d),m.length>0&&(i.nodes=m)}return i.object=s,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const s=e.children[i];this.add(s.clone())}return this}}Nt.DEFAULT_UP=new V(0,1,0);Nt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Nt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Fn=new V,fi=new V,bc=new V,hi=new V,Vs=new V,$s=new V,Sd=new V,Mc=new V,Sc=new V,Ec=new V;let Yo=!1;class An{constructor(e=new V,n=new V,i=new V){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,s){s.subVectors(i,n),Fn.subVectors(e,n),s.cross(Fn);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,n,i,s,r){Fn.subVectors(s,n),fi.subVectors(i,n),bc.subVectors(e,n);const o=Fn.dot(Fn),a=Fn.dot(fi),l=Fn.dot(bc),c=fi.dot(fi),u=fi.dot(bc),f=o*c-a*a;if(f===0)return r.set(-2,-1,-1);const h=1/f,d=(c*l-a*u)*h,m=(o*u-a*l)*h;return r.set(1-d-m,m,d)}static containsPoint(e,n,i,s){return this.getBarycoord(e,n,i,s,hi),hi.x>=0&&hi.y>=0&&hi.x+hi.y<=1}static getUV(e,n,i,s,r,o,a,l){return Yo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Yo=!0),this.getInterpolation(e,n,i,s,r,o,a,l)}static getInterpolation(e,n,i,s,r,o,a,l){return this.getBarycoord(e,n,i,s,hi),l.setScalar(0),l.addScaledVector(r,hi.x),l.addScaledVector(o,hi.y),l.addScaledVector(a,hi.z),l}static isFrontFacing(e,n,i,s){return Fn.subVectors(i,n),fi.subVectors(e,n),Fn.cross(fi).dot(s)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,s){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,n,i,s){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Fn.subVectors(this.c,this.b),fi.subVectors(this.a,this.b),Fn.cross(fi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return An.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return An.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,s,r){return Yo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Yo=!0),An.getInterpolation(e,this.a,this.b,this.c,n,i,s,r)}getInterpolation(e,n,i,s,r){return An.getInterpolation(e,this.a,this.b,this.c,n,i,s,r)}containsPoint(e){return An.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return An.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,s=this.b,r=this.c;let o,a;Vs.subVectors(s,i),$s.subVectors(r,i),Mc.subVectors(e,i);const l=Vs.dot(Mc),c=$s.dot(Mc);if(l<=0&&c<=0)return n.copy(i);Sc.subVectors(e,s);const u=Vs.dot(Sc),f=$s.dot(Sc);if(u>=0&&f<=u)return n.copy(s);const h=l*f-u*c;if(h<=0&&l>=0&&u<=0)return o=l/(l-u),n.copy(i).addScaledVector(Vs,o);Ec.subVectors(e,r);const d=Vs.dot(Ec),m=$s.dot(Ec);if(m>=0&&d<=m)return n.copy(r);const _=d*c-l*m;if(_<=0&&c>=0&&m<=0)return a=c/(c-m),n.copy(i).addScaledVector($s,a);const g=u*m-d*f;if(g<=0&&f-u>=0&&d-m>=0)return Sd.subVectors(r,s),a=(f-u)/(f-u+(d-m)),n.copy(s).addScaledVector(Sd,a);const p=1/(g+_+h);return o=_*p,a=h*p,n.copy(i).addScaledVector(Vs,o).addScaledVector($s,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let oM=0;class Rr extends Ps{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:oM++}),this.uuid=Tr(),this.name="",this.type="Material",this.blending=pr,this.side=Xi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=A0,this.blendDst=R0,this.blendEquation=sr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Cu,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Pb,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=fc,this.stencilZFail=fc,this.stencilZPass=fc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==pr&&(i.blending=this.blending),this.side!==Xi&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(i.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(n){const r=s(e.textures),o=s(e.images);r.length>0&&(i.textures=r),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const s=n.length;i=new Array(s);for(let r=0;r!==s;++r)i[r]=n[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const V0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},On={h:0,s:0,l:0},Zo={h:0,s:0,l:0};function wc(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}class st{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=He){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,In.toWorkingColorSpace(this,n),this}setRGB(e,n,i,s=In.workingColorSpace){return this.r=e,this.g=n,this.b=i,In.toWorkingColorSpace(this,s),this}setHSL(e,n,i,s=In.workingColorSpace){if(e=pf(e,1),n=Qt(n,0,1),i=Qt(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,o=2*i-r;this.r=wc(o,r,e+1/3),this.g=wc(o,r,e),this.b=wc(o,r,e-1/3)}return In.toWorkingColorSpace(this,s),this}setStyle(e,n=He){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,n);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,n);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=s[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,n);if(o===6)return this.setHex(parseInt(r,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e,n=He){const i=V0[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=_r(e.r),this.g=_r(e.g),this.b=_r(e.b),this}copyLinearToSRGB(e){return this.r=dc(e.r),this.g=dc(e.g),this.b=dc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=He){return In.fromWorkingColorSpace(Vt.copy(this),e),Math.round(Qt(Vt.r*255,0,255))*65536+Math.round(Qt(Vt.g*255,0,255))*256+Math.round(Qt(Vt.b*255,0,255))}getHexString(e=He){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=In.workingColorSpace){In.fromWorkingColorSpace(Vt.copy(this),n);const i=Vt.r,s=Vt.g,r=Vt.b,o=Math.max(i,s,r),a=Math.min(i,s,r);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const f=o-a;switch(c=u<=.5?f/(o+a):f/(2-o-a),o){case i:l=(s-r)/f+(s<r?6:0);break;case s:l=(r-i)/f+2;break;case r:l=(i-s)/f+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,n=In.workingColorSpace){return In.fromWorkingColorSpace(Vt.copy(this),n),e.r=Vt.r,e.g=Vt.g,e.b=Vt.b,e}getStyle(e=He){In.fromWorkingColorSpace(Vt.copy(this),e);const n=Vt.r,i=Vt.g,s=Vt.b;return e!==He?`color(${e} ${n.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(e,n,i){return this.getHSL(On),On.h+=e,On.s+=n,On.l+=i,this.setHSL(On.h,On.s,On.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(On),e.getHSL(Zo);const i=fo(On.h,Zo.h,n),s=fo(On.s,Zo.s,n),r=fo(On.l,Zo.l,n);return this.setHSL(i,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const n=this.r,i=this.g,s=this.b,r=e.elements;return this.r=r[0]*n+r[3]*i+r[6]*s,this.g=r[1]*n+r[4]*i+r[7]*s,this.b=r[2]*n+r[5]*i+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Vt=new st;st.NAMES=V0;class $0 extends Rr{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new st(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=C0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Mt=new V,Ko=new Ge;class Mn{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=ud,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=n.array[i+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Ko.fromBufferAttribute(this,n),Ko.applyMatrix3(e),this.setXY(n,Ko.x,Ko.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)Mt.fromBufferAttribute(this,n),Mt.applyMatrix3(e),this.setXYZ(n,Mt.x,Mt.y,Mt.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)Mt.fromBufferAttribute(this,n),Mt.applyMatrix4(e),this.setXYZ(n,Mt.x,Mt.y,Mt.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)Mt.fromBufferAttribute(this,n),Mt.applyNormalMatrix(e),this.setXYZ(n,Mt.x,Mt.y,Mt.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)Mt.fromBufferAttribute(this,n),Mt.transformDirection(e),this.setXYZ(n,Mt.x,Mt.y,Mt.z);return this}set(e,n=0){return this.array.set(e,n),this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=Qr(n,this.array)),n}setX(e,n){return this.normalized&&(n=sn(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=Qr(n,this.array)),n}setY(e,n){return this.normalized&&(n=sn(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=Qr(n,this.array)),n}setZ(e,n){return this.normalized&&(n=sn(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=Qr(n,this.array)),n}setW(e,n){return this.normalized&&(n=sn(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=sn(n,this.array),i=sn(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=sn(n,this.array),i=sn(i,this.array),s=sn(s,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this}setXYZW(e,n,i,s,r){return e*=this.itemSize,this.normalized&&(n=sn(n,this.array),i=sn(i,this.array),s=sn(s,this.array),r=sn(r,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ud&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class G0 extends Mn{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class W0 extends Mn{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class Cn extends Mn{constructor(e,n,i){super(new Float32Array(e),n,i)}}let aM=0;const wn=new At,Tc=new Nt,Gs=new V,dn=new Lo,Hr=new Lo,Dt=new V;class Wn extends Ps{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:aM++}),this.uuid=Tr(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(F0(e)?W0:G0)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new Ze().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return wn.makeRotationFromQuaternion(e),this.applyMatrix4(wn),this}rotateX(e){return wn.makeRotationX(e),this.applyMatrix4(wn),this}rotateY(e){return wn.makeRotationY(e),this.applyMatrix4(wn),this}rotateZ(e){return wn.makeRotationZ(e),this.applyMatrix4(wn),this}translate(e,n,i){return wn.makeTranslation(e,n,i),this.applyMatrix4(wn),this}scale(e,n,i){return wn.makeScale(e,n,i),this.applyMatrix4(wn),this}lookAt(e){return Tc.lookAt(e),Tc.updateMatrix(),this.applyMatrix4(Tc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gs).negate(),this.translate(Gs.x,Gs.y,Gs.z),this}setFromPoints(e){const n=[];for(let i=0,s=e.length;i<s;i++){const r=e[i];n.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Cn(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Lo);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new V(-1/0,-1/0,-1/0),new V(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,s=n.length;i<s;i++){const r=n[i];dn.setFromBufferAttribute(r),this.morphTargetsRelative?(Dt.addVectors(this.boundingBox.min,dn.min),this.boundingBox.expandByPoint(Dt),Dt.addVectors(this.boundingBox.max,dn.max),this.boundingBox.expandByPoint(Dt)):(this.boundingBox.expandByPoint(dn.min),this.boundingBox.expandByPoint(dn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yl);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new V,1/0);return}if(e){const i=this.boundingSphere.center;if(dn.setFromBufferAttribute(e),n)for(let r=0,o=n.length;r<o;r++){const a=n[r];Hr.setFromBufferAttribute(a),this.morphTargetsRelative?(Dt.addVectors(dn.min,Hr.min),dn.expandByPoint(Dt),Dt.addVectors(dn.max,Hr.max),dn.expandByPoint(Dt)):(dn.expandByPoint(Hr.min),dn.expandByPoint(Hr.max))}dn.getCenter(i);let s=0;for(let r=0,o=e.count;r<o;r++)Dt.fromBufferAttribute(e,r),s=Math.max(s,i.distanceToSquared(Dt));if(n)for(let r=0,o=n.length;r<o;r++){const a=n[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Dt.fromBufferAttribute(a,c),l&&(Gs.fromBufferAttribute(e,c),Dt.add(Gs)),s=Math.max(s,i.distanceToSquared(Dt))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,s=n.position.array,r=n.normal.array,o=n.uv.array,a=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Mn(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let w=0;w<a;w++)c[w]=new V,u[w]=new V;const f=new V,h=new V,d=new V,m=new Ge,_=new Ge,g=new Ge,p=new V,S=new V;function y(w,N,U){f.fromArray(s,w*3),h.fromArray(s,N*3),d.fromArray(s,U*3),m.fromArray(o,w*2),_.fromArray(o,N*2),g.fromArray(o,U*2),h.sub(f),d.sub(f),_.sub(m),g.sub(m);const I=1/(_.x*g.y-g.x*_.y);isFinite(I)&&(p.copy(h).multiplyScalar(g.y).addScaledVector(d,-_.y).multiplyScalar(I),S.copy(d).multiplyScalar(_.x).addScaledVector(h,-g.x).multiplyScalar(I),c[w].add(p),c[N].add(p),c[U].add(p),u[w].add(S),u[N].add(S),u[U].add(S))}let x=this.groups;x.length===0&&(x=[{start:0,count:i.length}]);for(let w=0,N=x.length;w<N;++w){const U=x[w],I=U.start,F=U.count;for(let k=I,H=I+F;k<H;k+=3)y(i[k+0],i[k+1],i[k+2])}const b=new V,M=new V,T=new V,L=new V;function v(w){T.fromArray(r,w*3),L.copy(T);const N=c[w];b.copy(N),b.sub(T.multiplyScalar(T.dot(N))).normalize(),M.crossVectors(L,N);const I=M.dot(u[w])<0?-1:1;l[w*4]=b.x,l[w*4+1]=b.y,l[w*4+2]=b.z,l[w*4+3]=I}for(let w=0,N=x.length;w<N;++w){const U=x[w],I=U.start,F=U.count;for(let k=I,H=I+F;k<H;k+=3)v(i[k+0]),v(i[k+1]),v(i[k+2])}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Mn(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let h=0,d=i.count;h<d;h++)i.setXYZ(h,0,0,0);const s=new V,r=new V,o=new V,a=new V,l=new V,c=new V,u=new V,f=new V;if(e)for(let h=0,d=e.count;h<d;h+=3){const m=e.getX(h+0),_=e.getX(h+1),g=e.getX(h+2);s.fromBufferAttribute(n,m),r.fromBufferAttribute(n,_),o.fromBufferAttribute(n,g),u.subVectors(o,r),f.subVectors(s,r),u.cross(f),a.fromBufferAttribute(i,m),l.fromBufferAttribute(i,_),c.fromBufferAttribute(i,g),a.add(u),l.add(u),c.add(u),i.setXYZ(m,a.x,a.y,a.z),i.setXYZ(_,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let h=0,d=n.count;h<d;h+=3)s.fromBufferAttribute(n,h+0),r.fromBufferAttribute(n,h+1),o.fromBufferAttribute(n,h+2),u.subVectors(o,r),f.subVectors(s,r),u.cross(f),i.setXYZ(h+0,u.x,u.y,u.z),i.setXYZ(h+1,u.x,u.y,u.z),i.setXYZ(h+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)Dt.fromBufferAttribute(e,n),Dt.normalize(),e.setXYZ(n,Dt.x,Dt.y,Dt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,f=a.normalized,h=new c.constructor(l.length*u);let d=0,m=0;for(let _=0,g=l.length;_<g;_++){a.isInterleavedBufferAttribute?d=l[_]*a.data.stride+a.offset:d=l[_]*u;for(let p=0;p<u;p++)h[m++]=c[d++]}return new Mn(h,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new Wn,i=this.index.array,s=this.attributes;for(const a in s){const l=s[a],c=e(l,i);n.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,f=c.length;u<f;u++){const h=c[u],d=e(h,i);l.push(d)}n.morphAttributes[a]=l}n.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];n.addGroup(c.start,c.count,c.materialIndex)}return n}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const s={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let f=0,h=c.length;f<h;f++){const d=c[f];u.push(d.toJSON(e.data))}u.length>0&&(s[l]=u,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const s=e.attributes;for(const c in s){const u=s[c];this.setAttribute(c,u.clone(n))}const r=e.morphAttributes;for(const c in r){const u=[],f=r[c];for(let h=0,d=f.length;h<d;h++)u.push(f[h].clone(n));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ed=new At,jn=new H0,Jo=new yl,wd=new V,Ws=new V,Xs=new V,qs=new V,Ac=new V,Qo=new V,ea=new Ge,ta=new Ge,na=new Ge,Td=new V,Ad=new V,Rd=new V,ia=new V,sa=new V;class Si extends Nt{constructor(e=new Wn,n=new $0){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,n){const i=this.geometry,s=i.attributes.position,r=i.morphAttributes.position,o=i.morphTargetsRelative;n.fromBufferAttribute(s,e);const a=this.morphTargetInfluences;if(r&&a){Qo.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const u=a[l],f=r[l];u!==0&&(Ac.fromBufferAttribute(f,e),o?Qo.addScaledVector(Ac,u):Qo.addScaledVector(Ac.sub(n),u))}n.add(Qo)}return n}raycast(e,n){const i=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Jo.copy(i.boundingSphere),Jo.applyMatrix4(r),jn.copy(e.ray).recast(e.near),!(Jo.containsPoint(jn.origin)===!1&&(jn.intersectSphere(Jo,wd)===null||jn.origin.distanceToSquared(wd)>(e.far-e.near)**2))&&(Ed.copy(r).invert(),jn.copy(e.ray).applyMatrix4(Ed),!(i.boundingBox!==null&&jn.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,n)))}_computeIntersections(e,n){let i;const s=this.geometry,r=this.material,o=s.index,a=s.attributes.position,l=s.attributes.uv,c=s.attributes.uv1,u=s.attributes.normal,f=s.groups,h=s.drawRange;if(o!==null)if(Array.isArray(r))for(let d=0,m=f.length;d<m;d++){const _=f[d],g=r[_.materialIndex],p=Math.max(_.start,h.start),S=Math.min(o.count,Math.min(_.start+_.count,h.start+h.count));for(let y=p,x=S;y<x;y+=3){const b=o.getX(y),M=o.getX(y+1),T=o.getX(y+2);i=ra(this,g,e,jn,l,c,u,b,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=_.materialIndex,n.push(i))}}else{const d=Math.max(0,h.start),m=Math.min(o.count,h.start+h.count);for(let _=d,g=m;_<g;_+=3){const p=o.getX(_),S=o.getX(_+1),y=o.getX(_+2);i=ra(this,r,e,jn,l,c,u,p,S,y),i&&(i.faceIndex=Math.floor(_/3),n.push(i))}}else if(a!==void 0)if(Array.isArray(r))for(let d=0,m=f.length;d<m;d++){const _=f[d],g=r[_.materialIndex],p=Math.max(_.start,h.start),S=Math.min(a.count,Math.min(_.start+_.count,h.start+h.count));for(let y=p,x=S;y<x;y+=3){const b=y,M=y+1,T=y+2;i=ra(this,g,e,jn,l,c,u,b,M,T),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=_.materialIndex,n.push(i))}}else{const d=Math.max(0,h.start),m=Math.min(a.count,h.start+h.count);for(let _=d,g=m;_<g;_+=3){const p=_,S=_+1,y=_+2;i=ra(this,r,e,jn,l,c,u,p,S,y),i&&(i.faceIndex=Math.floor(_/3),n.push(i))}}}}function lM(t,e,n,i,s,r,o,a){let l;if(e.side===un?l=i.intersectTriangle(o,r,s,!0,a):l=i.intersectTriangle(s,r,o,e.side===Xi,a),l===null)return null;sa.copy(a),sa.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(sa);return c<n.near||c>n.far?null:{distance:c,point:sa.clone(),object:t}}function ra(t,e,n,i,s,r,o,a,l,c){t.getVertexPosition(a,Ws),t.getVertexPosition(l,Xs),t.getVertexPosition(c,qs);const u=lM(t,e,n,i,Ws,Xs,qs,ia);if(u){s&&(ea.fromBufferAttribute(s,a),ta.fromBufferAttribute(s,l),na.fromBufferAttribute(s,c),u.uv=An.getInterpolation(ia,Ws,Xs,qs,ea,ta,na,new Ge)),r&&(ea.fromBufferAttribute(r,a),ta.fromBufferAttribute(r,l),na.fromBufferAttribute(r,c),u.uv1=An.getInterpolation(ia,Ws,Xs,qs,ea,ta,na,new Ge),u.uv2=u.uv1),o&&(Td.fromBufferAttribute(o,a),Ad.fromBufferAttribute(o,l),Rd.fromBufferAttribute(o,c),u.normal=An.getInterpolation(ia,Ws,Xs,qs,Td,Ad,Rd,new V),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const f={a,b:l,c,normal:new V,materialIndex:0};An.getNormal(Ws,Xs,qs,f.normal),u.face=f}return u}class Do extends Wn{constructor(e=1,n=1,i=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:r,depthSegments:o};const a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],f=[];let h=0,d=0;m("z","y","x",-1,-1,i,n,e,o,r,0),m("z","y","x",1,-1,i,n,-e,o,r,1),m("x","z","y",1,1,e,i,n,s,o,2),m("x","z","y",1,-1,e,i,-n,s,o,3),m("x","y","z",1,-1,e,n,i,s,r,4),m("x","y","z",-1,-1,e,n,-i,s,r,5),this.setIndex(l),this.setAttribute("position",new Cn(c,3)),this.setAttribute("normal",new Cn(u,3)),this.setAttribute("uv",new Cn(f,2));function m(_,g,p,S,y,x,b,M,T,L,v){const w=x/T,N=b/L,U=x/2,I=b/2,F=M/2,k=T+1,H=L+1;let $=0,W=0;const ae=new V;for(let te=0;te<H;te++){const Ee=te*N-I;for(let ce=0;ce<k;ce++){const Z=ce*w-U;ae[_]=Z*S,ae[g]=Ee*y,ae[p]=F,c.push(ae.x,ae.y,ae.z),ae[_]=0,ae[g]=0,ae[p]=M>0?1:-1,u.push(ae.x,ae.y,ae.z),f.push(ce/T),f.push(1-te/L),$+=1}}for(let te=0;te<L;te++)for(let Ee=0;Ee<T;Ee++){const ce=h+Ee+k*te,Z=h+Ee+k*(te+1),re=h+(Ee+1)+k*(te+1),ge=h+(Ee+1)+k*te;l.push(ce,Z,ge),l.push(Z,re,ge),W+=6}a.addGroup(d,W,v),d+=W,h+=$}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Do(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Mr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const s=t[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function Yt(t){const e={};for(let n=0;n<t.length;n++){const i=Mr(t[n]);for(const s in i)e[s]=i[s]}return e}function cM(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}function X0(t){return t.getRenderTarget()===null?t.outputColorSpace:si}const uM={clone:Mr,merge:Yt};var fM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,hM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class As extends Rr{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=fM,this.fragmentShader=hM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Mr(e.uniforms),this.uniformsGroups=cM(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?n.uniforms[s]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?n.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?n.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?n.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?n.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?n.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?n.uniforms[s]={type:"m4",value:o.toArray()}:n.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class q0 extends Nt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new At,this.projectionMatrix=new At,this.projectionMatrixInverse=new At}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(-n[8],-n[9],-n[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Rn extends q0{constructor(e=50,n=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=wo*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(gr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return wo*2*Math.atan(Math.tan(gr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,n,i,s,r,o){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(gr*.5*this.fov)/this.zoom,i=2*n,s=this.aspect*i,r=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*s/l,n-=o.offsetY*i/c,s*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,n,n-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const js=-90,Ys=1;class dM extends Nt{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i;const s=new Rn(js,Ys,e,n);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(1,0,0),this.add(s);const r=new Rn(js,Ys,e,n);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const o=new Rn(js,Ys,e,n);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const a=new Rn(js,Ys,e,n);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(0,-1,0),this.add(a);const l=new Rn(js,Ys,e,n);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const c=new Rn(js,Ys,e,n);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,-1),this.add(c)}update(e,n){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[s,r,o,a,l,c]=this.children,u=e.getRenderTarget(),f=e.toneMapping,h=e.xr.enabled;e.toneMapping=Ti,e.xr.enabled=!1;const d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(n,s),e.setRenderTarget(i,1),e.render(n,r),e.setRenderTarget(i,2),e.render(n,o),e.setRenderTarget(i,3),e.render(n,a),e.setRenderTarget(i,4),e.render(n,l),i.texture.generateMipmaps=d,e.setRenderTarget(i,5),e.render(n,c),e.setRenderTarget(u),e.toneMapping=f,e.xr.enabled=h,i.texture.needsPMREMUpdate=!0}}class j0 extends bn{constructor(e,n,i,s,r,o,a,l,c,u){e=e!==void 0?e:[],n=n!==void 0?n:xr,super(e,n,i,s,r,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class pM extends Ts{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},s=[i,i,i,i,i,i];n.encoding!==void 0&&(ho("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Ss?He:Es),this.texture=new j0(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Tn}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Do(5,5,5),r=new As({name:"CubemapFromEquirect",uniforms:Mr(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:un,blending:Gi});r.uniforms.tEquirect.value=n;const o=new Si(s,r),a=n.minFilter;return n.minFilter===So&&(n.minFilter=Tn),new dM(1,10,this).update(e,o),n.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,n,i,s){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(n,i,s);e.setRenderTarget(r)}}const Rc=new V,mM=new V,gM=new Ze;class fs{constructor(e=new V(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,s){return this.normal.set(e,n,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const s=Rc.subVectors(i,n).cross(mM.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,n){const i=e.delta(Rc),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:n.copy(e.start).addScaledVector(i,r)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||gM.getNormalMatrix(e),s=this.coplanarPoint(Rc).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const os=new yl,oa=new V;class mf{constructor(e=new fs,n=new fs,i=new fs,s=new fs,r=new fs,o=new fs){this.planes=[e,n,i,s,r,o]}set(e,n,i,s,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(n),a[2].copy(i),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,s=i[0],r=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],f=i[7],h=i[8],d=i[9],m=i[10],_=i[11],g=i[12],p=i[13],S=i[14],y=i[15];return n[0].setComponents(a-s,f-l,_-h,y-g).normalize(),n[1].setComponents(a+s,f+l,_+h,y+g).normalize(),n[2].setComponents(a+r,f+c,_+d,y+p).normalize(),n[3].setComponents(a-r,f-c,_-d,y-p).normalize(),n[4].setComponents(a-o,f-u,_-m,y-S).normalize(),n[5].setComponents(a+o,f+u,_+m,y+S).normalize(),this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),os.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const n=e.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),os.copy(n.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(os)}intersectsSprite(e){return os.center.set(0,0,0),os.radius=.7071067811865476,os.applyMatrix4(e.matrixWorld),this.intersectsSphere(os)}intersectsSphere(e){const n=this.planes,i=e.center,s=-e.radius;for(let r=0;r<6;r++)if(n[r].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const s=n[i];if(oa.x=s.normal.x>0?e.max.x:e.min.x,oa.y=s.normal.y>0?e.max.y:e.min.y,oa.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(oa)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Y0(){let t=null,e=!1,n=null,i=null;function s(r,o){n(r,o),i=t.requestAnimationFrame(s)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){n=r},setContext:function(r){t=r}}}function _M(t,e){const n=e.isWebGL2,i=new WeakMap;function s(c,u){const f=c.array,h=c.usage,d=t.createBuffer();t.bindBuffer(u,d),t.bufferData(u,f,h),c.onUploadCallback();let m;if(f instanceof Float32Array)m=t.FLOAT;else if(f instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(n)m=t.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=t.UNSIGNED_SHORT;else if(f instanceof Int16Array)m=t.SHORT;else if(f instanceof Uint32Array)m=t.UNSIGNED_INT;else if(f instanceof Int32Array)m=t.INT;else if(f instanceof Int8Array)m=t.BYTE;else if(f instanceof Uint8Array)m=t.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)m=t.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:d,type:m,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,f){const h=u.array,d=u.updateRange;t.bindBuffer(f,c),d.count===-1?t.bufferSubData(f,0,h):(n?t.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h,d.offset,d.count):t.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h.subarray(d.offset,d.offset+d.count)),d.count=-1),u.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(t.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=i.get(c);(!h||h.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const f=i.get(c);f===void 0?i.set(c,s(c,u)):f.version<c.version&&(r(f.buffer,c,u),f.version=c.version)}return{get:o,remove:a,update:l}}class gf extends Wn{constructor(e=1,n=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:s};const r=e/2,o=n/2,a=Math.floor(i),l=Math.floor(s),c=a+1,u=l+1,f=e/a,h=n/l,d=[],m=[],_=[],g=[];for(let p=0;p<u;p++){const S=p*h-o;for(let y=0;y<c;y++){const x=y*f-r;m.push(x,-S,0),_.push(0,0,1),g.push(y/a),g.push(1-p/l)}}for(let p=0;p<l;p++)for(let S=0;S<a;S++){const y=S+c*p,x=S+c*(p+1),b=S+1+c*(p+1),M=S+1+c*p;d.push(y,x,M),d.push(x,b,M)}this.setIndex(d),this.setAttribute("position",new Cn(m,3)),this.setAttribute("normal",new Cn(_,3)),this.setAttribute("uv",new Cn(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gf(e.width,e.height,e.widthSegments,e.heightSegments)}}var vM=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,xM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yM=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,bM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,MM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,SM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,EM="vec3 transformed = vec3( position );",wM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,TM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,AM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,RM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,CM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,PM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,LM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,DM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,UM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,IM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,NM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,FM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,OM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,kM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,BM=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,HM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,zM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,VM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,$M=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,GM="gl_FragColor = linearToOutputTexel( gl_FragColor );",WM=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,XM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,qM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,jM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,YM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ZM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,KM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,JM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,QM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,eS=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,tS=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,nS=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,iS=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,sS=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,rS=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,oS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,aS=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,lS=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,cS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,uS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,fS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,hS=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif`,dS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,pS=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,mS=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,gS=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,_S=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,vS=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,xS=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,yS=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,bS=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,MS=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,SS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ES=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,wS=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,TS=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,AS=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,RS=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,CS=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,PS=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,LS=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#ifdef USE_NORMALMAP_TANGENTSPACE
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,DS=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,US=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,IS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,NS=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,FS=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,OS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,kS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,BS=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,HS=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,zS=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,VS=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,$S=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,GS=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,WS=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,XS=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,qS=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,jS=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,YS=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,ZS=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,KS=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,JS=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,QS=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,eE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,tE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,iE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,sE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,oE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,aE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,lE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,cE=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uE=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,fE=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,hE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const dE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,pE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,mE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,gE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,_E=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,xE=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,yE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,bE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,ME=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,SE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,EE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,wE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,TE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,AE=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,RE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,CE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,PE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,DE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,UE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,IE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,NE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,OE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,kE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,HE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,VE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,$E=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,GE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,WE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,XE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ve={alphamap_fragment:vM,alphamap_pars_fragment:xM,alphatest_fragment:yM,alphatest_pars_fragment:bM,aomap_fragment:MM,aomap_pars_fragment:SM,begin_vertex:EM,beginnormal_vertex:wM,bsdfs:TM,iridescence_fragment:AM,bumpmap_pars_fragment:RM,clipping_planes_fragment:CM,clipping_planes_pars_fragment:PM,clipping_planes_pars_vertex:LM,clipping_planes_vertex:DM,color_fragment:UM,color_pars_fragment:IM,color_pars_vertex:NM,color_vertex:FM,common:OM,cube_uv_reflection_fragment:kM,defaultnormal_vertex:BM,displacementmap_pars_vertex:HM,displacementmap_vertex:zM,emissivemap_fragment:VM,emissivemap_pars_fragment:$M,encodings_fragment:GM,encodings_pars_fragment:WM,envmap_fragment:XM,envmap_common_pars_fragment:qM,envmap_pars_fragment:jM,envmap_pars_vertex:YM,envmap_physical_pars_fragment:aS,envmap_vertex:ZM,fog_vertex:KM,fog_pars_vertex:JM,fog_fragment:QM,fog_pars_fragment:eS,gradientmap_pars_fragment:tS,lightmap_fragment:nS,lightmap_pars_fragment:iS,lights_lambert_fragment:sS,lights_lambert_pars_fragment:rS,lights_pars_begin:oS,lights_toon_fragment:lS,lights_toon_pars_fragment:cS,lights_phong_fragment:uS,lights_phong_pars_fragment:fS,lights_physical_fragment:hS,lights_physical_pars_fragment:dS,lights_fragment_begin:pS,lights_fragment_maps:mS,lights_fragment_end:gS,logdepthbuf_fragment:_S,logdepthbuf_pars_fragment:vS,logdepthbuf_pars_vertex:xS,logdepthbuf_vertex:yS,map_fragment:bS,map_pars_fragment:MS,map_particle_fragment:SS,map_particle_pars_fragment:ES,metalnessmap_fragment:wS,metalnessmap_pars_fragment:TS,morphcolor_vertex:AS,morphnormal_vertex:RS,morphtarget_pars_vertex:CS,morphtarget_vertex:PS,normal_fragment_begin:LS,normal_fragment_maps:DS,normal_pars_fragment:US,normal_pars_vertex:IS,normal_vertex:NS,normalmap_pars_fragment:FS,clearcoat_normal_fragment_begin:OS,clearcoat_normal_fragment_maps:kS,clearcoat_pars_fragment:BS,iridescence_pars_fragment:HS,output_fragment:zS,packing:VS,premultiplied_alpha_fragment:$S,project_vertex:GS,dithering_fragment:WS,dithering_pars_fragment:XS,roughnessmap_fragment:qS,roughnessmap_pars_fragment:jS,shadowmap_pars_fragment:YS,shadowmap_pars_vertex:ZS,shadowmap_vertex:KS,shadowmask_pars_fragment:JS,skinbase_vertex:QS,skinning_pars_vertex:eE,skinning_vertex:tE,skinnormal_vertex:nE,specularmap_fragment:iE,specularmap_pars_fragment:sE,tonemapping_fragment:rE,tonemapping_pars_fragment:oE,transmission_fragment:aE,transmission_pars_fragment:lE,uv_pars_fragment:cE,uv_pars_vertex:uE,uv_vertex:fE,worldpos_vertex:hE,background_vert:dE,background_frag:pE,backgroundCube_vert:mE,backgroundCube_frag:gE,cube_vert:_E,cube_frag:vE,depth_vert:xE,depth_frag:yE,distanceRGBA_vert:bE,distanceRGBA_frag:ME,equirect_vert:SE,equirect_frag:EE,linedashed_vert:wE,linedashed_frag:TE,meshbasic_vert:AE,meshbasic_frag:RE,meshlambert_vert:CE,meshlambert_frag:PE,meshmatcap_vert:LE,meshmatcap_frag:DE,meshnormal_vert:UE,meshnormal_frag:IE,meshphong_vert:NE,meshphong_frag:FE,meshphysical_vert:OE,meshphysical_frag:kE,meshtoon_vert:BE,meshtoon_frag:HE,points_vert:zE,points_frag:VE,shadow_vert:$E,shadow_frag:GE,sprite_vert:WE,sprite_frag:XE},xe={common:{diffuse:{value:new st(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ze},alphaMap:{value:null},alphaMapTransform:{value:new Ze},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ze}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ze}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ze}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ze},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ze},normalScale:{value:new Ge(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ze},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ze}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ze}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ze}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new st(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new st(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ze}},sprite:{diffuse:{value:new st(16777215)},opacity:{value:1},center:{value:new Ge(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ze},alphaMap:{value:null},alphaTest:{value:0}}},ei={basic:{uniforms:Yt([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.fog]),vertexShader:Ve.meshbasic_vert,fragmentShader:Ve.meshbasic_frag},lambert:{uniforms:Yt([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new st(0)}}]),vertexShader:Ve.meshlambert_vert,fragmentShader:Ve.meshlambert_frag},phong:{uniforms:Yt([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new st(0)},specular:{value:new st(1118481)},shininess:{value:30}}]),vertexShader:Ve.meshphong_vert,fragmentShader:Ve.meshphong_frag},standard:{uniforms:Yt([xe.common,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.roughnessmap,xe.metalnessmap,xe.fog,xe.lights,{emissive:{value:new st(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ve.meshphysical_vert,fragmentShader:Ve.meshphysical_frag},toon:{uniforms:Yt([xe.common,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.gradientmap,xe.fog,xe.lights,{emissive:{value:new st(0)}}]),vertexShader:Ve.meshtoon_vert,fragmentShader:Ve.meshtoon_frag},matcap:{uniforms:Yt([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,{matcap:{value:null}}]),vertexShader:Ve.meshmatcap_vert,fragmentShader:Ve.meshmatcap_frag},points:{uniforms:Yt([xe.points,xe.fog]),vertexShader:Ve.points_vert,fragmentShader:Ve.points_frag},dashed:{uniforms:Yt([xe.common,xe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ve.linedashed_vert,fragmentShader:Ve.linedashed_frag},depth:{uniforms:Yt([xe.common,xe.displacementmap]),vertexShader:Ve.depth_vert,fragmentShader:Ve.depth_frag},normal:{uniforms:Yt([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,{opacity:{value:1}}]),vertexShader:Ve.meshnormal_vert,fragmentShader:Ve.meshnormal_frag},sprite:{uniforms:Yt([xe.sprite,xe.fog]),vertexShader:Ve.sprite_vert,fragmentShader:Ve.sprite_frag},background:{uniforms:{uvTransform:{value:new Ze},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ve.background_vert,fragmentShader:Ve.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Ve.backgroundCube_vert,fragmentShader:Ve.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ve.cube_vert,fragmentShader:Ve.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ve.equirect_vert,fragmentShader:Ve.equirect_frag},distanceRGBA:{uniforms:Yt([xe.common,xe.displacementmap,{referencePosition:{value:new V},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ve.distanceRGBA_vert,fragmentShader:Ve.distanceRGBA_frag},shadow:{uniforms:Yt([xe.lights,xe.fog,{color:{value:new st(0)},opacity:{value:1}}]),vertexShader:Ve.shadow_vert,fragmentShader:Ve.shadow_frag}};ei.physical={uniforms:Yt([ei.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ze},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ze},clearcoatNormalScale:{value:new Ge(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ze},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ze},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ze},sheen:{value:0},sheenColor:{value:new st(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ze},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ze},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ze},transmissionSamplerSize:{value:new Ge},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ze},attenuationDistance:{value:0},attenuationColor:{value:new st(0)},specularColor:{value:new st(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ze},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ze}}]),vertexShader:Ve.meshphysical_vert,fragmentShader:Ve.meshphysical_frag};const aa={r:0,b:0,g:0};function qE(t,e,n,i,s,r,o){const a=new st(0);let l=r===!0?0:1,c,u,f=null,h=0,d=null;function m(g,p){let S=!1,y=p.isScene===!0?p.background:null;switch(y&&y.isTexture&&(y=(p.backgroundBlurriness>0?n:e).get(y)),y===null?_(a,l):y&&y.isColor&&(_(y,1),S=!0),t.xr.getEnvironmentBlendMode()){case"opaque":S=!0;break;case"additive":i.buffers.color.setClear(0,0,0,1,o),S=!0;break;case"alpha-blend":i.buffers.color.setClear(0,0,0,0,o),S=!0;break}(t.autoClear||S)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),y&&(y.isCubeTexture||y.mapping===xl)?(u===void 0&&(u=new Si(new Do(1,1,1),new As({name:"BackgroundCubeMaterial",uniforms:Mr(ei.backgroundCube.uniforms),vertexShader:ei.backgroundCube.vertexShader,fragmentShader:ei.backgroundCube.fragmentShader,side:un,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(M,T,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(u)),u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=p.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,u.material.toneMapped=y.colorSpace!==He,(f!==y||h!==y.version||d!==t.toneMapping)&&(u.material.needsUpdate=!0,f=y,h=y.version,d=t.toneMapping),u.layers.enableAll(),g.unshift(u,u.geometry,u.material,0,0,null)):y&&y.isTexture&&(c===void 0&&(c=new Si(new gf(2,2),new As({name:"BackgroundMaterial",uniforms:Mr(ei.background.uniforms),vertexShader:ei.background.vertexShader,fragmentShader:ei.background.fragmentShader,side:Xi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(c)),c.material.uniforms.t2D.value=y,c.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,c.material.toneMapped=y.colorSpace!==He,y.matrixAutoUpdate===!0&&y.updateMatrix(),c.material.uniforms.uvTransform.value.copy(y.matrix),(f!==y||h!==y.version||d!==t.toneMapping)&&(c.material.needsUpdate=!0,f=y,h=y.version,d=t.toneMapping),c.layers.enableAll(),g.unshift(c,c.geometry,c.material,0,0,null))}function _(g,p){g.getRGB(aa,X0(t)),i.buffers.color.setClear(aa.r,aa.g,aa.b,p,o)}return{getClearColor:function(){return a},setClearColor:function(g,p=1){a.set(g),l=p,_(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(g){l=g,_(a,l)},render:m}}function jE(t,e,n,i){const s=t.getParameter(t.MAX_VERTEX_ATTRIBS),r=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||r!==null,a={},l=g(null);let c=l,u=!1;function f(F,k,H,$,W){let ae=!1;if(o){const te=_($,H,k);c!==te&&(c=te,d(c.object)),ae=p(F,$,H,W),ae&&S(F,$,H,W)}else{const te=k.wireframe===!0;(c.geometry!==$.id||c.program!==H.id||c.wireframe!==te)&&(c.geometry=$.id,c.program=H.id,c.wireframe=te,ae=!0)}W!==null&&n.update(W,t.ELEMENT_ARRAY_BUFFER),(ae||u)&&(u=!1,L(F,k,H,$),W!==null&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.get(W).buffer))}function h(){return i.isWebGL2?t.createVertexArray():r.createVertexArrayOES()}function d(F){return i.isWebGL2?t.bindVertexArray(F):r.bindVertexArrayOES(F)}function m(F){return i.isWebGL2?t.deleteVertexArray(F):r.deleteVertexArrayOES(F)}function _(F,k,H){const $=H.wireframe===!0;let W=a[F.id];W===void 0&&(W={},a[F.id]=W);let ae=W[k.id];ae===void 0&&(ae={},W[k.id]=ae);let te=ae[$];return te===void 0&&(te=g(h()),ae[$]=te),te}function g(F){const k=[],H=[],$=[];for(let W=0;W<s;W++)k[W]=0,H[W]=0,$[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:k,enabledAttributes:H,attributeDivisors:$,object:F,attributes:{},index:null}}function p(F,k,H,$){const W=c.attributes,ae=k.attributes;let te=0;const Ee=H.getAttributes();for(const ce in Ee)if(Ee[ce].location>=0){const re=W[ce];let ge=ae[ce];if(ge===void 0&&(ce==="instanceMatrix"&&F.instanceMatrix&&(ge=F.instanceMatrix),ce==="instanceColor"&&F.instanceColor&&(ge=F.instanceColor)),re===void 0||re.attribute!==ge||ge&&re.data!==ge.data)return!0;te++}return c.attributesNum!==te||c.index!==$}function S(F,k,H,$){const W={},ae=k.attributes;let te=0;const Ee=H.getAttributes();for(const ce in Ee)if(Ee[ce].location>=0){let re=ae[ce];re===void 0&&(ce==="instanceMatrix"&&F.instanceMatrix&&(re=F.instanceMatrix),ce==="instanceColor"&&F.instanceColor&&(re=F.instanceColor));const ge={};ge.attribute=re,re&&re.data&&(ge.data=re.data),W[ce]=ge,te++}c.attributes=W,c.attributesNum=te,c.index=$}function y(){const F=c.newAttributes;for(let k=0,H=F.length;k<H;k++)F[k]=0}function x(F){b(F,0)}function b(F,k){const H=c.newAttributes,$=c.enabledAttributes,W=c.attributeDivisors;H[F]=1,$[F]===0&&(t.enableVertexAttribArray(F),$[F]=1),W[F]!==k&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](F,k),W[F]=k)}function M(){const F=c.newAttributes,k=c.enabledAttributes;for(let H=0,$=k.length;H<$;H++)k[H]!==F[H]&&(t.disableVertexAttribArray(H),k[H]=0)}function T(F,k,H,$,W,ae){i.isWebGL2===!0&&(H===t.INT||H===t.UNSIGNED_INT)?t.vertexAttribIPointer(F,k,H,W,ae):t.vertexAttribPointer(F,k,H,$,W,ae)}function L(F,k,H,$){if(i.isWebGL2===!1&&(F.isInstancedMesh||$.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const W=$.attributes,ae=H.getAttributes(),te=k.defaultAttributeValues;for(const Ee in ae){const ce=ae[Ee];if(ce.location>=0){let Z=W[Ee];if(Z===void 0&&(Ee==="instanceMatrix"&&F.instanceMatrix&&(Z=F.instanceMatrix),Ee==="instanceColor"&&F.instanceColor&&(Z=F.instanceColor)),Z!==void 0){const re=Z.normalized,ge=Z.itemSize,_e=n.get(Z);if(_e===void 0)continue;const A=_e.buffer,fe=_e.type,Se=_e.bytesPerElement;if(Z.isInterleavedBufferAttribute){const de=Z.data,Pe=de.stride,P=Z.offset;if(de.isInstancedInterleavedBuffer){for(let D=0;D<ce.locationSize;D++)b(ce.location+D,de.meshPerAttribute);F.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let D=0;D<ce.locationSize;D++)x(ce.location+D);t.bindBuffer(t.ARRAY_BUFFER,A);for(let D=0;D<ce.locationSize;D++)T(ce.location+D,ge/ce.locationSize,fe,re,Pe*Se,(P+ge/ce.locationSize*D)*Se)}else{if(Z.isInstancedBufferAttribute){for(let de=0;de<ce.locationSize;de++)b(ce.location+de,Z.meshPerAttribute);F.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let de=0;de<ce.locationSize;de++)x(ce.location+de);t.bindBuffer(t.ARRAY_BUFFER,A);for(let de=0;de<ce.locationSize;de++)T(ce.location+de,ge/ce.locationSize,fe,re,ge*Se,ge/ce.locationSize*de*Se)}}else if(te!==void 0){const re=te[Ee];if(re!==void 0)switch(re.length){case 2:t.vertexAttrib2fv(ce.location,re);break;case 3:t.vertexAttrib3fv(ce.location,re);break;case 4:t.vertexAttrib4fv(ce.location,re);break;default:t.vertexAttrib1fv(ce.location,re)}}}}M()}function v(){U();for(const F in a){const k=a[F];for(const H in k){const $=k[H];for(const W in $)m($[W].object),delete $[W];delete k[H]}delete a[F]}}function w(F){if(a[F.id]===void 0)return;const k=a[F.id];for(const H in k){const $=k[H];for(const W in $)m($[W].object),delete $[W];delete k[H]}delete a[F.id]}function N(F){for(const k in a){const H=a[k];if(H[F.id]===void 0)continue;const $=H[F.id];for(const W in $)m($[W].object),delete $[W];delete H[F.id]}}function U(){I(),u=!0,c!==l&&(c=l,d(c.object))}function I(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:f,reset:U,resetDefaultState:I,dispose:v,releaseStatesOfGeometry:w,releaseStatesOfProgram:N,initAttributes:y,enableAttribute:x,disableUnusedAttributes:M}}function YE(t,e,n,i){const s=i.isWebGL2;let r;function o(c){r=c}function a(c,u){t.drawArrays(r,c,u),n.update(u,r,1)}function l(c,u,f){if(f===0)return;let h,d;if(s)h=t,d="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[d](r,c,u,f),n.update(u,r,f)}this.setMode=o,this.render=a,this.renderInstances=l}function ZE(t,e,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function r(T){if(T==="highp"){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";T="mediump"}return T==="mediump"&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&t.constructor.name==="WebGL2RenderingContext";let a=n.precision!==void 0?n.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=n.logarithmicDepthBuffer===!0,f=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=t.getParameter(t.MAX_TEXTURE_SIZE),m=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),_=t.getParameter(t.MAX_VERTEX_ATTRIBS),g=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),p=t.getParameter(t.MAX_VARYING_VECTORS),S=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),y=h>0,x=o||e.has("OES_texture_float"),b=y&&x,M=o?t.getParameter(t.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:s,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:m,maxAttributes:_,maxVertexUniforms:g,maxVaryings:p,maxFragmentUniforms:S,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:b,maxSamples:M}}function KE(t){const e=this;let n=null,i=0,s=!1,r=!1;const o=new fs,a=new Ze,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,h){const d=f.length!==0||h||i!==0||s;return s=h,i=f.length,d},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(f,h){n=u(f,h,0)},this.setState=function(f,h,d){const m=f.clippingPlanes,_=f.clipIntersection,g=f.clipShadows,p=t.get(f);if(!s||m===null||m.length===0||r&&!g)r?u(null):c();else{const S=r?0:i,y=S*4;let x=p.clippingState||null;l.value=x,x=u(m,h,y,d);for(let b=0;b!==y;++b)x[b]=n[b];p.clippingState=x,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=S}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(f,h,d,m){const _=f!==null?f.length:0;let g=null;if(_!==0){if(g=l.value,m!==!0||g===null){const p=d+_*4,S=h.matrixWorldInverse;a.getNormalMatrix(S),(g===null||g.length<p)&&(g=new Float32Array(p));for(let y=0,x=d;y!==_;++y,x+=4)o.copy(f[y]).applyMatrix4(S,a),o.normal.toArray(g,x),g[x+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,g}}function JE(t){let e=new WeakMap;function n(o,a){return a===Pu?o.mapping=xr:a===Lu&&(o.mapping=yr),o}function i(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Pu||a===Lu)if(e.has(o)){const l=e.get(o).texture;return n(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new pM(l.height/2);return c.fromEquirectangularTexture(t,o),e.set(o,c),o.addEventListener("dispose",s),n(c.texture,o.mapping)}else return null}}return o}function s(o){const a=o.target;a.removeEventListener("dispose",s);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}class Z0 extends q0{constructor(e=-1,n=1,i=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=i-e,o=i+e,a=s+n,l=s-n;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}const rr=4,Cd=[.125,.215,.35,.446,.526,.582],ms=20,Cc=new Z0,Pd=new st;let Pc=null;const hs=(1+Math.sqrt(5))/2,Zs=1/hs,Ld=[new V(1,1,1),new V(-1,1,1),new V(1,1,-1),new V(-1,1,-1),new V(0,hs,Zs),new V(0,hs,-Zs),new V(Zs,0,hs),new V(-Zs,0,hs),new V(hs,Zs,0),new V(-hs,Zs,0)];class Dd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,s=100){Pc=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,i,s,r),n>0&&this._blur(r,0,0,n),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Nd(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Id(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Pc),e.scissorTest=!1,la(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===xr||e.mapping===yr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Pc=this._renderer.getRenderTarget();const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:Tn,minFilter:Tn,generateMipmaps:!1,type:Eo,format:zn,colorSpace:si,depthBuffer:!1},s=Ud(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ud(e,n,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=QE(r)),this._blurMaterial=ew(r,e,n)}return s}_compileMaterial(e){const n=new Si(this._lodPlanes[0],e);this._renderer.compile(n,Cc)}_sceneToCubeUV(e,n,i,s){const a=new Rn(90,1,n,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,h=u.toneMapping;u.getClearColor(Pd),u.toneMapping=Ti,u.autoClear=!1;const d=new $0({name:"PMREM.Background",side:un,depthWrite:!1,depthTest:!1}),m=new Si(new Do,d);let _=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,_=!0):(d.color.copy(Pd),_=!0);for(let p=0;p<6;p++){const S=p%3;S===0?(a.up.set(0,l[p],0),a.lookAt(c[p],0,0)):S===1?(a.up.set(0,0,l[p]),a.lookAt(0,c[p],0)):(a.up.set(0,l[p],0),a.lookAt(0,0,c[p]));const y=this._cubeSize;la(s,S*y,p>2?y:0,y,y),u.setRenderTarget(s),_&&u.render(m,a),u.render(e,a)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=h,u.autoClear=f,e.background=g}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===xr||e.mapping===yr;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Nd()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Id());const r=s?this._cubemapMaterial:this._equirectMaterial,o=new Si(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;la(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(o,Cc)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=Ld[(s-1)%Ld.length];this._blur(e,s-1,s,r,o)}n.autoClear=i}_blur(e,n,i,s,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,n,i,s,"latitudinal",r),this._halfBlur(o,e,i,i,s,"longitudinal",r)}_halfBlur(e,n,i,s,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new Si(this._lodPlanes[s],c),h=c.uniforms,d=this._sizeLods[i]-1,m=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*ms-1),_=r/m,g=isFinite(r)?1+Math.floor(u*_):ms;g>ms&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${ms}`);const p=[];let S=0;for(let T=0;T<ms;++T){const L=T/_,v=Math.exp(-L*L/2);p.push(v),T===0?S+=v:T<g&&(S+=2*v)}for(let T=0;T<p.length;T++)p[T]=p[T]/S;h.envMap.value=e.texture,h.samples.value=g,h.weights.value=p,h.latitudinal.value=o==="latitudinal",a&&(h.poleAxis.value=a);const{_lodMax:y}=this;h.dTheta.value=m,h.mipInt.value=y-i;const x=this._sizeLods[s],b=3*x*(s>y-rr?s-y+rr:0),M=4*(this._cubeSize-x);la(n,b,M,3*x,2*x),l.setRenderTarget(n),l.render(f,Cc)}}function QE(t){const e=[],n=[],i=[];let s=t;const r=t-rr+1+Cd.length;for(let o=0;o<r;o++){const a=Math.pow(2,s);n.push(a);let l=1/a;o>t-rr?l=Cd[o-t+rr-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),u=-c,f=1+c,h=[u,u,f,u,f,f,u,u,f,f,u,f],d=6,m=6,_=3,g=2,p=1,S=new Float32Array(_*m*d),y=new Float32Array(g*m*d),x=new Float32Array(p*m*d);for(let M=0;M<d;M++){const T=M%3*2/3-1,L=M>2?0:-1,v=[T,L,0,T+2/3,L,0,T+2/3,L+1,0,T,L,0,T+2/3,L+1,0,T,L+1,0];S.set(v,_*m*M),y.set(h,g*m*M);const w=[M,M,M,M,M,M];x.set(w,p*m*M)}const b=new Wn;b.setAttribute("position",new Mn(S,_)),b.setAttribute("uv",new Mn(y,g)),b.setAttribute("faceIndex",new Mn(x,p)),e.push(b),s>rr&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function Ud(t,e,n){const i=new Ts(t,e,n);return i.texture.mapping=xl,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function la(t,e,n,i,s){t.viewport.set(e,n,i,s),t.scissor.set(e,n,i,s)}function ew(t,e,n){const i=new Float32Array(ms),s=new V(0,1,0);return new As({name:"SphericalGaussianBlur",defines:{n:ms,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:_f(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Gi,depthTest:!1,depthWrite:!1})}function Id(){return new As({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_f(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Gi,depthTest:!1,depthWrite:!1})}function Nd(){return new As({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_f(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Gi,depthTest:!1,depthWrite:!1})}function _f(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function tw(t){let e=new WeakMap,n=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Pu||l===Lu,u=l===xr||l===yr;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return n===null&&(n=new Dd(t)),f=c?n.fromEquirectangular(a,f):n.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(c&&f&&f.height>0||u&&f&&s(f)){n===null&&(n=new Dd(t));const h=c?n.fromEquirectangular(a):n.fromCubemap(a);return e.set(a,h),a.addEventListener("dispose",r),h.texture}else return null}}}return a}function s(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:o}}function nw(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let s;switch(i){case"WEBGL_depth_texture":s=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=t.getExtension(i)}return e[i]=s,s}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(i){const s=n(i);return s===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),s}}}function iw(t,e,n,i){const s={},r=new WeakMap;function o(f){const h=f.target;h.index!==null&&e.remove(h.index);for(const m in h.attributes)e.remove(h.attributes[m]);h.removeEventListener("dispose",o),delete s[h.id];const d=r.get(h);d&&(e.remove(d),r.delete(h)),i.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,n.memory.geometries--}function a(f,h){return s[h.id]===!0||(h.addEventListener("dispose",o),s[h.id]=!0,n.memory.geometries++),h}function l(f){const h=f.attributes;for(const m in h)e.update(h[m],t.ARRAY_BUFFER);const d=f.morphAttributes;for(const m in d){const _=d[m];for(let g=0,p=_.length;g<p;g++)e.update(_[g],t.ARRAY_BUFFER)}}function c(f){const h=[],d=f.index,m=f.attributes.position;let _=0;if(d!==null){const S=d.array;_=d.version;for(let y=0,x=S.length;y<x;y+=3){const b=S[y+0],M=S[y+1],T=S[y+2];h.push(b,M,M,T,T,b)}}else{const S=m.array;_=m.version;for(let y=0,x=S.length/3-1;y<x;y+=3){const b=y+0,M=y+1,T=y+2;h.push(b,M,M,T,T,b)}}const g=new(F0(h)?W0:G0)(h,1);g.version=_;const p=r.get(f);p&&e.remove(p),r.set(f,g)}function u(f){const h=r.get(f);if(h){const d=f.index;d!==null&&h.version<d.version&&c(f)}else c(f);return r.get(f)}return{get:a,update:l,getWireframeAttribute:u}}function sw(t,e,n,i){const s=i.isWebGL2;let r;function o(h){r=h}let a,l;function c(h){a=h.type,l=h.bytesPerElement}function u(h,d){t.drawElements(r,d,a,h*l),n.update(d,r,1)}function f(h,d,m){if(m===0)return;let _,g;if(s)_=t,g="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[g](r,d,a,h*l,m),n.update(d,r,m)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=f}function rw(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,o,a){switch(n.calls++,o){case t.TRIANGLES:n.triangles+=a*(r/3);break;case t.LINES:n.lines+=a*(r/2);break;case t.LINE_STRIP:n.lines+=a*(r-1);break;case t.LINE_LOOP:n.lines+=a*r;break;case t.POINTS:n.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function s(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:s,update:i}}function ow(t,e){return t[0]-e[0]}function aw(t,e){return Math.abs(e[1])-Math.abs(t[1])}function lw(t,e,n){const i={},s=new Float32Array(8),r=new WeakMap,o=new It,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,f){const h=c.morphTargetInfluences;if(e.isWebGL2===!0){const m=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,_=m!==void 0?m.length:0;let g=r.get(u);if(g===void 0||g.count!==_){let k=function(){I.dispose(),r.delete(u),u.removeEventListener("dispose",k)};var d=k;g!==void 0&&g.texture.dispose();const y=u.morphAttributes.position!==void 0,x=u.morphAttributes.normal!==void 0,b=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],T=u.morphAttributes.normal||[],L=u.morphAttributes.color||[];let v=0;y===!0&&(v=1),x===!0&&(v=2),b===!0&&(v=3);let w=u.attributes.position.count*v,N=1;w>e.maxTextureSize&&(N=Math.ceil(w/e.maxTextureSize),w=e.maxTextureSize);const U=new Float32Array(w*N*4*_),I=new B0(U,w,N,_);I.type=xs,I.needsUpdate=!0;const F=v*4;for(let H=0;H<_;H++){const $=M[H],W=T[H],ae=L[H],te=w*N*4*H;for(let Ee=0;Ee<$.count;Ee++){const ce=Ee*F;y===!0&&(o.fromBufferAttribute($,Ee),U[te+ce+0]=o.x,U[te+ce+1]=o.y,U[te+ce+2]=o.z,U[te+ce+3]=0),x===!0&&(o.fromBufferAttribute(W,Ee),U[te+ce+4]=o.x,U[te+ce+5]=o.y,U[te+ce+6]=o.z,U[te+ce+7]=0),b===!0&&(o.fromBufferAttribute(ae,Ee),U[te+ce+8]=o.x,U[te+ce+9]=o.y,U[te+ce+10]=o.z,U[te+ce+11]=ae.itemSize===4?o.w:1)}}g={count:_,texture:I,size:new Ge(w,N)},r.set(u,g),u.addEventListener("dispose",k)}let p=0;for(let y=0;y<h.length;y++)p+=h[y];const S=u.morphTargetsRelative?1:1-p;f.getUniforms().setValue(t,"morphTargetBaseInfluence",S),f.getUniforms().setValue(t,"morphTargetInfluences",h),f.getUniforms().setValue(t,"morphTargetsTexture",g.texture,n),f.getUniforms().setValue(t,"morphTargetsTextureSize",g.size)}else{const m=h===void 0?0:h.length;let _=i[u.id];if(_===void 0||_.length!==m){_=[];for(let x=0;x<m;x++)_[x]=[x,0];i[u.id]=_}for(let x=0;x<m;x++){const b=_[x];b[0]=x,b[1]=h[x]}_.sort(aw);for(let x=0;x<8;x++)x<m&&_[x][1]?(a[x][0]=_[x][0],a[x][1]=_[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(ow);const g=u.morphAttributes.position,p=u.morphAttributes.normal;let S=0;for(let x=0;x<8;x++){const b=a[x],M=b[0],T=b[1];M!==Number.MAX_SAFE_INTEGER&&T?(g&&u.getAttribute("morphTarget"+x)!==g[M]&&u.setAttribute("morphTarget"+x,g[M]),p&&u.getAttribute("morphNormal"+x)!==p[M]&&u.setAttribute("morphNormal"+x,p[M]),s[x]=T,S+=T):(g&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),p&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),s[x]=0)}const y=u.morphTargetsRelative?1:1-S;f.getUniforms().setValue(t,"morphTargetBaseInfluence",y),f.getUniforms().setValue(t,"morphTargetInfluences",s)}}return{update:l}}function cw(t,e,n,i){let s=new WeakMap;function r(l){const c=i.render.frame,u=l.geometry,f=e.get(l,u);return s.get(f)!==c&&(e.update(f),s.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.update(l.instanceMatrix,t.ARRAY_BUFFER),l.instanceColor!==null&&n.update(l.instanceColor,t.ARRAY_BUFFER)),f}function o(){s=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:r,dispose:o}}const K0=new bn,J0=new B0,Q0=new Jb,e_=new j0,Fd=[],Od=[],kd=new Float32Array(16),Bd=new Float32Array(9),Hd=new Float32Array(4);function Cr(t,e,n){const i=t[0];if(i<=0||i>0)return t;const s=e*n;let r=Fd[s];if(r===void 0&&(r=new Float32Array(s),Fd[s]=r),e!==0){i.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=n,t[o].toArray(r,a)}return r}function Rt(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Ct(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Ml(t,e){let n=Od[e];n===void 0&&(n=new Int32Array(e),Od[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function uw(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function fw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Rt(n,e))return;t.uniform2fv(this.addr,e),Ct(n,e)}}function hw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Rt(n,e))return;t.uniform3fv(this.addr,e),Ct(n,e)}}function dw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Rt(n,e))return;t.uniform4fv(this.addr,e),Ct(n,e)}}function pw(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Rt(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Ct(n,e)}else{if(Rt(n,i))return;Hd.set(i),t.uniformMatrix2fv(this.addr,!1,Hd),Ct(n,i)}}function mw(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Rt(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Ct(n,e)}else{if(Rt(n,i))return;Bd.set(i),t.uniformMatrix3fv(this.addr,!1,Bd),Ct(n,i)}}function gw(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Rt(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Ct(n,e)}else{if(Rt(n,i))return;kd.set(i),t.uniformMatrix4fv(this.addr,!1,kd),Ct(n,i)}}function _w(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function vw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Rt(n,e))return;t.uniform2iv(this.addr,e),Ct(n,e)}}function xw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Rt(n,e))return;t.uniform3iv(this.addr,e),Ct(n,e)}}function yw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Rt(n,e))return;t.uniform4iv(this.addr,e),Ct(n,e)}}function bw(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Mw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Rt(n,e))return;t.uniform2uiv(this.addr,e),Ct(n,e)}}function Sw(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Rt(n,e))return;t.uniform3uiv(this.addr,e),Ct(n,e)}}function Ew(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Rt(n,e))return;t.uniform4uiv(this.addr,e),Ct(n,e)}}function ww(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture2D(e||K0,s)}function Tw(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||Q0,s)}function Aw(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||e_,s)}function Rw(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||J0,s)}function Cw(t){switch(t){case 5126:return uw;case 35664:return fw;case 35665:return hw;case 35666:return dw;case 35674:return pw;case 35675:return mw;case 35676:return gw;case 5124:case 35670:return _w;case 35667:case 35671:return vw;case 35668:case 35672:return xw;case 35669:case 35673:return yw;case 5125:return bw;case 36294:return Mw;case 36295:return Sw;case 36296:return Ew;case 35678:case 36198:case 36298:case 36306:case 35682:return ww;case 35679:case 36299:case 36307:return Tw;case 35680:case 36300:case 36308:case 36293:return Aw;case 36289:case 36303:case 36311:case 36292:return Rw}}function Pw(t,e){t.uniform1fv(this.addr,e)}function Lw(t,e){const n=Cr(e,this.size,2);t.uniform2fv(this.addr,n)}function Dw(t,e){const n=Cr(e,this.size,3);t.uniform3fv(this.addr,n)}function Uw(t,e){const n=Cr(e,this.size,4);t.uniform4fv(this.addr,n)}function Iw(t,e){const n=Cr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Nw(t,e){const n=Cr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Fw(t,e){const n=Cr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ow(t,e){t.uniform1iv(this.addr,e)}function kw(t,e){t.uniform2iv(this.addr,e)}function Bw(t,e){t.uniform3iv(this.addr,e)}function Hw(t,e){t.uniform4iv(this.addr,e)}function zw(t,e){t.uniform1uiv(this.addr,e)}function Vw(t,e){t.uniform2uiv(this.addr,e)}function $w(t,e){t.uniform3uiv(this.addr,e)}function Gw(t,e){t.uniform4uiv(this.addr,e)}function Ww(t,e,n){const i=this.cache,s=e.length,r=Ml(n,s);Rt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let o=0;o!==s;++o)n.setTexture2D(e[o]||K0,r[o])}function Xw(t,e,n){const i=this.cache,s=e.length,r=Ml(n,s);Rt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let o=0;o!==s;++o)n.setTexture3D(e[o]||Q0,r[o])}function qw(t,e,n){const i=this.cache,s=e.length,r=Ml(n,s);Rt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let o=0;o!==s;++o)n.setTextureCube(e[o]||e_,r[o])}function jw(t,e,n){const i=this.cache,s=e.length,r=Ml(n,s);Rt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let o=0;o!==s;++o)n.setTexture2DArray(e[o]||J0,r[o])}function Yw(t){switch(t){case 5126:return Pw;case 35664:return Lw;case 35665:return Dw;case 35666:return Uw;case 35674:return Iw;case 35675:return Nw;case 35676:return Fw;case 5124:case 35670:return Ow;case 35667:case 35671:return kw;case 35668:case 35672:return Bw;case 35669:case 35673:return Hw;case 5125:return zw;case 36294:return Vw;case 36295:return $w;case 36296:return Gw;case 35678:case 36198:case 36298:case 36306:case 35682:return Ww;case 35679:case 36299:case 36307:return Xw;case 35680:case 36300:case 36308:case 36293:return qw;case 36289:case 36303:case 36311:case 36292:return jw}}class Zw{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.setValue=Cw(n.type)}}class Kw{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.size=n.size,this.setValue=Yw(n.type)}}class Jw{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const s=this.seq;for(let r=0,o=s.length;r!==o;++r){const a=s[r];a.setValue(e,n[a.id],i)}}}const Lc=/(\w+)(\])?(\[|\.)?/g;function zd(t,e){t.seq.push(e),t.map[e.id]=e}function Qw(t,e,n){const i=t.name,s=i.length;for(Lc.lastIndex=0;;){const r=Lc.exec(i),o=Lc.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===s){zd(n,c===void 0?new Zw(a,t,e):new Kw(a,t,e));break}else{let f=n.map[a];f===void 0&&(f=new Jw(a),zd(n,f)),n=f}}}class ka{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let s=0;s<i;++s){const r=e.getActiveUniform(n,s),o=e.getUniformLocation(n,r.name);Qw(r,o,this)}}setValue(e,n,i,s){const r=this.map[n];r!==void 0&&r.setValue(e,i,s)}setOptional(e,n,i){const s=n[i];s!==void 0&&this.setValue(e,i,s)}static upload(e,n,i,s){for(let r=0,o=n.length;r!==o;++r){const a=n[r],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,s)}}static seqWithValue(e,n){const i=[];for(let s=0,r=e.length;s!==r;++s){const o=e[s];o.id in n&&i.push(o)}return i}}function Vd(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let eT=0;function tT(t,e){const n=t.split(`
`),i=[],s=Math.max(e-6,0),r=Math.min(e+6,n.length);for(let o=s;o<r;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${n[o]}`)}return i.join(`
`)}function nT(t){switch(t){case si:return["Linear","( value )"];case He:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",t),["Linear","( value )"]}}function $d(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),s=t.getShaderInfoLog(e).trim();if(i&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const o=parseInt(r[1]);return n.toUpperCase()+`

`+s+`

`+tT(t.getShaderSource(e),o)}else return s}function iT(t,e){const n=nT(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function sT(t,e){let n;switch(e){case ob:n="Linear";break;case ab:n="Reinhard";break;case lb:n="OptimizedCineon";break;case cb:n="ACESFilmic";break;case ub:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function rT(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.normalMapTangentSpace||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(eo).join(`
`)}function oT(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function aT(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const r=t.getActiveAttrib(e,s),o=r.name;let a=1;r.type===t.FLOAT_MAT2&&(a=2),r.type===t.FLOAT_MAT3&&(a=3),r.type===t.FLOAT_MAT4&&(a=4),n[o]={type:r.type,location:t.getAttribLocation(e,o),locationSize:a}}return n}function eo(t){return t!==""}function Gd(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Wd(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const lT=/^[ \t]*#include +<([\w\d./]+)>/gm;function Fu(t){return t.replace(lT,cT)}function cT(t,e){const n=Ve[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return Fu(n)}const uT=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Xd(t){return t.replace(uT,fT)}function fT(t,e,n,i){let s="";for(let r=parseInt(e);r<parseInt(n);r++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function qd(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function hT(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===T0?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===ky?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===vi&&(e="SHADOWMAP_TYPE_VSM"),e}function dT(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case xr:case yr:e="ENVMAP_TYPE_CUBE";break;case xl:e="ENVMAP_TYPE_CUBE_UV";break}return e}function pT(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case yr:e="ENVMAP_MODE_REFRACTION";break}return e}function mT(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case C0:e="ENVMAP_BLENDING_MULTIPLY";break;case sb:e="ENVMAP_BLENDING_MIX";break;case rb:e="ENVMAP_BLENDING_ADD";break}return e}function gT(t){const e=t.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function _T(t,e,n,i){const s=t.getContext(),r=n.defines;let o=n.vertexShader,a=n.fragmentShader;const l=hT(n),c=dT(n),u=pT(n),f=mT(n),h=gT(n),d=n.isWebGL2?"":rT(n),m=oT(r),_=s.createProgram();let g,p,S=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(g=[m].filter(eo).join(`
`),g.length>0&&(g+=`
`),p=[d,m].filter(eo).join(`
`),p.length>0&&(p+=`
`)):(g=[qd(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(eo).join(`
`),p=[d,qd(n),"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+f:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Ti?"#define TONE_MAPPING":"",n.toneMapping!==Ti?Ve.tonemapping_pars_fragment:"",n.toneMapping!==Ti?sT("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Ve.encodings_pars_fragment,iT("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(eo).join(`
`)),o=Fu(o),o=Gd(o,n),o=Wd(o,n),a=Fu(a),a=Gd(a,n),a=Wd(a,n),o=Xd(o),a=Xd(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(S=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,p=["#define varying in",n.glslVersion===fd?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===fd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const y=S+g+o,x=S+p+a,b=Vd(s,s.VERTEX_SHADER,y),M=Vd(s,s.FRAGMENT_SHADER,x);if(s.attachShader(_,b),s.attachShader(_,M),n.index0AttributeName!==void 0?s.bindAttribLocation(_,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(_,0,"position"),s.linkProgram(_),t.debug.checkShaderErrors){const v=s.getProgramInfoLog(_).trim(),w=s.getShaderInfoLog(b).trim(),N=s.getShaderInfoLog(M).trim();let U=!0,I=!0;if(s.getProgramParameter(_,s.LINK_STATUS)===!1)if(U=!1,typeof t.debug.onShaderError=="function")t.debug.onShaderError(s,_,b,M);else{const F=$d(s,b,"vertex"),k=$d(s,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(_,s.VALIDATE_STATUS)+`

Program Info Log: `+v+`
`+F+`
`+k)}else v!==""?console.warn("THREE.WebGLProgram: Program Info Log:",v):(w===""||N==="")&&(I=!1);I&&(this.diagnostics={runnable:U,programLog:v,vertexShader:{log:w,prefix:g},fragmentShader:{log:N,prefix:p}})}s.deleteShader(b),s.deleteShader(M);let T;this.getUniforms=function(){return T===void 0&&(T=new ka(s,_)),T};let L;return this.getAttributes=function(){return L===void 0&&(L=aT(s,_)),L},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(_),this.program=void 0},this.name=n.shaderName,this.id=eT++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=b,this.fragmentShader=M,this}let vT=0;class xT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,s=this._getShaderStage(n),r=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(s)===!1&&(o.add(s),s.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new yT(e),n.set(e,i)),i}}class yT{constructor(e){this.id=vT++,this.code=e,this.usedTimes=0}}function bT(t,e,n,i,s,r,o){const a=new z0,l=new xT,c=[],u=s.isWebGL2,f=s.logarithmicDepthBuffer,h=s.vertexTextures;let d=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(v){return v===1?"uv1":v===2?"uv2":v===3?"uv3":"uv"}function g(v,w,N,U,I){const F=U.fog,k=I.geometry,H=v.isMeshStandardMaterial?U.environment:null,$=(v.isMeshStandardMaterial?n:e).get(v.envMap||H),W=$&&$.mapping===xl?$.image.height:null,ae=m[v.type];v.precision!==null&&(d=s.getMaxPrecision(v.precision),d!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",d,"instead."));const te=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,Ee=te!==void 0?te.length:0;let ce=0;k.morphAttributes.position!==void 0&&(ce=1),k.morphAttributes.normal!==void 0&&(ce=2),k.morphAttributes.color!==void 0&&(ce=3);let Z,re,ge,_e;if(ae){const at=ei[ae];Z=at.vertexShader,re=at.fragmentShader}else Z=v.vertexShader,re=v.fragmentShader,l.update(v),ge=l.getVertexShaderID(v),_e=l.getFragmentShaderID(v);const A=t.getRenderTarget(),fe=I.isInstancedMesh===!0,Se=!!v.map,de=!!v.matcap,Pe=!!$,P=!!v.aoMap,D=!!v.lightMap,z=!!v.bumpMap,se=!!v.normalMap,ee=!!v.displacementMap,ie=!!v.emissiveMap,me=!!v.metalnessMap,oe=!!v.roughnessMap,ue=v.clearcoat>0,le=v.iridescence>0,R=v.sheen>0,E=v.transmission>0,B=ue&&!!v.clearcoatMap,j=ue&&!!v.clearcoatNormalMap,K=ue&&!!v.clearcoatRoughnessMap,he=le&&!!v.iridescenceMap,ye=le&&!!v.iridescenceThicknessMap,be=R&&!!v.sheenColorMap,Y=R&&!!v.sheenRoughnessMap,Te=!!v.specularMap,Re=!!v.specularColorMap,De=!!v.specularIntensityMap,Ae=E&&!!v.transmissionMap,Me=E&&!!v.thicknessMap,Fe=!!v.gradientMap,Qe=!!v.alphaMap,_t=v.alphaTest>0,O=!!v.extensions,J=!!k.attributes.uv1,pe=!!k.attributes.uv2,we=!!k.attributes.uv3;return{isWebGL2:u,shaderID:ae,shaderName:v.type,vertexShader:Z,fragmentShader:re,defines:v.defines,customVertexShaderID:ge,customFragmentShaderID:_e,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:d,instancing:fe,instancingColor:fe&&I.instanceColor!==null,supportsVertexTextures:h,outputColorSpace:A===null?t.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:si,map:Se,matcap:de,envMap:Pe,envMapMode:Pe&&$.mapping,envMapCubeUVHeight:W,aoMap:P,lightMap:D,bumpMap:z,normalMap:se,displacementMap:h&&ee,emissiveMap:ie,normalMapObjectSpace:se&&v.normalMapType===Cb,normalMapTangentSpace:se&&v.normalMapType===U0,metalnessMap:me,roughnessMap:oe,clearcoat:ue,clearcoatMap:B,clearcoatNormalMap:j,clearcoatRoughnessMap:K,iridescence:le,iridescenceMap:he,iridescenceThicknessMap:ye,sheen:R,sheenColorMap:be,sheenRoughnessMap:Y,specularMap:Te,specularColorMap:Re,specularIntensityMap:De,transmission:E,transmissionMap:Ae,thicknessMap:Me,gradientMap:Fe,opaque:v.transparent===!1&&v.blending===pr,alphaMap:Qe,alphaTest:_t,combine:v.combine,mapUv:Se&&_(v.map.channel),aoMapUv:P&&_(v.aoMap.channel),lightMapUv:D&&_(v.lightMap.channel),bumpMapUv:z&&_(v.bumpMap.channel),normalMapUv:se&&_(v.normalMap.channel),displacementMapUv:ee&&_(v.displacementMap.channel),emissiveMapUv:ie&&_(v.emissiveMap.channel),metalnessMapUv:me&&_(v.metalnessMap.channel),roughnessMapUv:oe&&_(v.roughnessMap.channel),clearcoatMapUv:B&&_(v.clearcoatMap.channel),clearcoatNormalMapUv:j&&_(v.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:K&&_(v.clearcoatRoughnessMap.channel),iridescenceMapUv:he&&_(v.iridescenceMap.channel),iridescenceThicknessMapUv:ye&&_(v.iridescenceThicknessMap.channel),sheenColorMapUv:be&&_(v.sheenColorMap.channel),sheenRoughnessMapUv:Y&&_(v.sheenRoughnessMap.channel),specularMapUv:Te&&_(v.specularMap.channel),specularColorMapUv:Re&&_(v.specularColorMap.channel),specularIntensityMapUv:De&&_(v.specularIntensityMap.channel),transmissionMapUv:Ae&&_(v.transmissionMap.channel),thicknessMapUv:Me&&_(v.thicknessMap.channel),alphaMapUv:Qe&&_(v.alphaMap.channel),vertexTangents:se&&!!k.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,vertexUv1s:J,vertexUv2s:pe,vertexUv3s:we,pointsUvs:I.isPoints===!0&&!!k.attributes.uv&&(Se||Qe),fog:!!F,useFog:v.fog===!0,fogExp2:F&&F.isFogExp2,flatShading:v.flatShading===!0,sizeAttenuation:v.sizeAttenuation===!0,logarithmicDepthBuffer:f,skinning:I.isSkinnedMesh===!0,morphTargets:k.morphAttributes.position!==void 0,morphNormals:k.morphAttributes.normal!==void 0,morphColors:k.morphAttributes.color!==void 0,morphTargetsCount:Ee,morphTextureStride:ce,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:v.dithering,shadowMapEnabled:t.shadowMap.enabled&&N.length>0,shadowMapType:t.shadowMap.type,toneMapping:v.toneMapped?t.toneMapping:Ti,useLegacyLights:t.useLegacyLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===Mi,flipSided:v.side===un,useDepthPacking:v.depthPacking>=0,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:O&&v.extensions.derivatives===!0,extensionFragDepth:O&&v.extensions.fragDepth===!0,extensionDrawBuffers:O&&v.extensions.drawBuffers===!0,extensionShaderTextureLOD:O&&v.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function p(v){const w=[];if(v.shaderID?w.push(v.shaderID):(w.push(v.customVertexShaderID),w.push(v.customFragmentShaderID)),v.defines!==void 0)for(const N in v.defines)w.push(N),w.push(v.defines[N]);return v.isRawShaderMaterial===!1&&(S(w,v),y(w,v),w.push(t.outputColorSpace)),w.push(v.customProgramCacheKey),w.join()}function S(v,w){v.push(w.precision),v.push(w.outputColorSpace),v.push(w.envMapMode),v.push(w.envMapCubeUVHeight),v.push(w.mapUv),v.push(w.alphaMapUv),v.push(w.lightMapUv),v.push(w.aoMapUv),v.push(w.bumpMapUv),v.push(w.normalMapUv),v.push(w.displacementMapUv),v.push(w.emissiveMapUv),v.push(w.metalnessMapUv),v.push(w.roughnessMapUv),v.push(w.clearcoatMapUv),v.push(w.clearcoatNormalMapUv),v.push(w.clearcoatRoughnessMapUv),v.push(w.iridescenceMapUv),v.push(w.iridescenceThicknessMapUv),v.push(w.sheenColorMapUv),v.push(w.sheenRoughnessMapUv),v.push(w.specularMapUv),v.push(w.specularColorMapUv),v.push(w.specularIntensityMapUv),v.push(w.transmissionMapUv),v.push(w.thicknessMapUv),v.push(w.combine),v.push(w.fogExp2),v.push(w.sizeAttenuation),v.push(w.morphTargetsCount),v.push(w.morphAttributeCount),v.push(w.numDirLights),v.push(w.numPointLights),v.push(w.numSpotLights),v.push(w.numSpotLightMaps),v.push(w.numHemiLights),v.push(w.numRectAreaLights),v.push(w.numDirLightShadows),v.push(w.numPointLightShadows),v.push(w.numSpotLightShadows),v.push(w.numSpotLightShadowsWithMaps),v.push(w.shadowMapType),v.push(w.toneMapping),v.push(w.numClippingPlanes),v.push(w.numClipIntersection),v.push(w.depthPacking)}function y(v,w){a.disableAll(),w.isWebGL2&&a.enable(0),w.supportsVertexTextures&&a.enable(1),w.instancing&&a.enable(2),w.instancingColor&&a.enable(3),w.matcap&&a.enable(4),w.envMap&&a.enable(5),w.normalMapObjectSpace&&a.enable(6),w.normalMapTangentSpace&&a.enable(7),w.clearcoat&&a.enable(8),w.iridescence&&a.enable(9),w.alphaTest&&a.enable(10),w.vertexColors&&a.enable(11),w.vertexAlphas&&a.enable(12),w.vertexUv1s&&a.enable(13),w.vertexUv2s&&a.enable(14),w.vertexUv3s&&a.enable(15),w.vertexTangents&&a.enable(16),v.push(a.mask),a.disableAll(),w.fog&&a.enable(0),w.useFog&&a.enable(1),w.flatShading&&a.enable(2),w.logarithmicDepthBuffer&&a.enable(3),w.skinning&&a.enable(4),w.morphTargets&&a.enable(5),w.morphNormals&&a.enable(6),w.morphColors&&a.enable(7),w.premultipliedAlpha&&a.enable(8),w.shadowMapEnabled&&a.enable(9),w.useLegacyLights&&a.enable(10),w.doubleSided&&a.enable(11),w.flipSided&&a.enable(12),w.useDepthPacking&&a.enable(13),w.dithering&&a.enable(14),w.transmission&&a.enable(15),w.sheen&&a.enable(16),w.opaque&&a.enable(17),w.pointsUvs&&a.enable(18),v.push(a.mask)}function x(v){const w=m[v.type];let N;if(w){const U=ei[w];N=uM.clone(U.uniforms)}else N=v.uniforms;return N}function b(v,w){let N;for(let U=0,I=c.length;U<I;U++){const F=c[U];if(F.cacheKey===w){N=F,++N.usedTimes;break}}return N===void 0&&(N=new _T(t,w,v,r),c.push(N)),N}function M(v){if(--v.usedTimes===0){const w=c.indexOf(v);c[w]=c[c.length-1],c.pop(),v.destroy()}}function T(v){l.remove(v)}function L(){l.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:x,acquireProgram:b,releaseProgram:M,releaseShaderCache:T,programs:c,dispose:L}}function MT(){let t=new WeakMap;function e(r){let o=t.get(r);return o===void 0&&(o={},t.set(r,o)),o}function n(r){t.delete(r)}function i(r,o,a){t.get(r)[o]=a}function s(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:s}}function ST(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function jd(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Yd(){const t=[];let e=0;const n=[],i=[],s=[];function r(){e=0,n.length=0,i.length=0,s.length=0}function o(f,h,d,m,_,g){let p=t[e];return p===void 0?(p={id:f.id,object:f,geometry:h,material:d,groupOrder:m,renderOrder:f.renderOrder,z:_,group:g},t[e]=p):(p.id=f.id,p.object=f,p.geometry=h,p.material=d,p.groupOrder=m,p.renderOrder=f.renderOrder,p.z=_,p.group=g),e++,p}function a(f,h,d,m,_,g){const p=o(f,h,d,m,_,g);d.transmission>0?i.push(p):d.transparent===!0?s.push(p):n.push(p)}function l(f,h,d,m,_,g){const p=o(f,h,d,m,_,g);d.transmission>0?i.unshift(p):d.transparent===!0?s.unshift(p):n.unshift(p)}function c(f,h){n.length>1&&n.sort(f||ST),i.length>1&&i.sort(h||jd),s.length>1&&s.sort(h||jd)}function u(){for(let f=e,h=t.length;f<h;f++){const d=t[f];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:n,transmissive:i,transparent:s,init:r,push:a,unshift:l,finish:u,sort:c}}function ET(){let t=new WeakMap;function e(i,s){const r=t.get(i);let o;return r===void 0?(o=new Yd,t.set(i,[o])):s>=r.length?(o=new Yd,r.push(o)):o=r[s],o}function n(){t=new WeakMap}return{get:e,dispose:n}}function wT(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new V,color:new st};break;case"SpotLight":n={position:new V,direction:new V,color:new st,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new V,color:new st,distance:0,decay:0};break;case"HemisphereLight":n={direction:new V,skyColor:new st,groundColor:new st};break;case"RectAreaLight":n={color:new st,position:new V,halfWidth:new V,halfHeight:new V};break}return t[e.id]=n,n}}}function TT(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ge};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ge};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ge,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let AT=0;function RT(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function CT(t,e){const n=new wT,i=TT(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)s.probe.push(new V);const r=new V,o=new At,a=new At;function l(u,f){let h=0,d=0,m=0;for(let N=0;N<9;N++)s.probe[N].set(0,0,0);let _=0,g=0,p=0,S=0,y=0,x=0,b=0,M=0,T=0,L=0;u.sort(RT);const v=f===!0?Math.PI:1;for(let N=0,U=u.length;N<U;N++){const I=u[N],F=I.color,k=I.intensity,H=I.distance,$=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)h+=F.r*k*v,d+=F.g*k*v,m+=F.b*k*v;else if(I.isLightProbe)for(let W=0;W<9;W++)s.probe[W].addScaledVector(I.sh.coefficients[W],k);else if(I.isDirectionalLight){const W=n.get(I);if(W.color.copy(I.color).multiplyScalar(I.intensity*v),I.castShadow){const ae=I.shadow,te=i.get(I);te.shadowBias=ae.bias,te.shadowNormalBias=ae.normalBias,te.shadowRadius=ae.radius,te.shadowMapSize=ae.mapSize,s.directionalShadow[_]=te,s.directionalShadowMap[_]=$,s.directionalShadowMatrix[_]=I.shadow.matrix,x++}s.directional[_]=W,_++}else if(I.isSpotLight){const W=n.get(I);W.position.setFromMatrixPosition(I.matrixWorld),W.color.copy(F).multiplyScalar(k*v),W.distance=H,W.coneCos=Math.cos(I.angle),W.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),W.decay=I.decay,s.spot[p]=W;const ae=I.shadow;if(I.map&&(s.spotLightMap[T]=I.map,T++,ae.updateMatrices(I),I.castShadow&&L++),s.spotLightMatrix[p]=ae.matrix,I.castShadow){const te=i.get(I);te.shadowBias=ae.bias,te.shadowNormalBias=ae.normalBias,te.shadowRadius=ae.radius,te.shadowMapSize=ae.mapSize,s.spotShadow[p]=te,s.spotShadowMap[p]=$,M++}p++}else if(I.isRectAreaLight){const W=n.get(I);W.color.copy(F).multiplyScalar(k),W.halfWidth.set(I.width*.5,0,0),W.halfHeight.set(0,I.height*.5,0),s.rectArea[S]=W,S++}else if(I.isPointLight){const W=n.get(I);if(W.color.copy(I.color).multiplyScalar(I.intensity*v),W.distance=I.distance,W.decay=I.decay,I.castShadow){const ae=I.shadow,te=i.get(I);te.shadowBias=ae.bias,te.shadowNormalBias=ae.normalBias,te.shadowRadius=ae.radius,te.shadowMapSize=ae.mapSize,te.shadowCameraNear=ae.camera.near,te.shadowCameraFar=ae.camera.far,s.pointShadow[g]=te,s.pointShadowMap[g]=$,s.pointShadowMatrix[g]=I.shadow.matrix,b++}s.point[g]=W,g++}else if(I.isHemisphereLight){const W=n.get(I);W.skyColor.copy(I.color).multiplyScalar(k*v),W.groundColor.copy(I.groundColor).multiplyScalar(k*v),s.hemi[y]=W,y++}}S>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=xe.LTC_FLOAT_1,s.rectAreaLTC2=xe.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=xe.LTC_HALF_1,s.rectAreaLTC2=xe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=h,s.ambient[1]=d,s.ambient[2]=m;const w=s.hash;(w.directionalLength!==_||w.pointLength!==g||w.spotLength!==p||w.rectAreaLength!==S||w.hemiLength!==y||w.numDirectionalShadows!==x||w.numPointShadows!==b||w.numSpotShadows!==M||w.numSpotMaps!==T)&&(s.directional.length=_,s.spot.length=p,s.rectArea.length=S,s.point.length=g,s.hemi.length=y,s.directionalShadow.length=x,s.directionalShadowMap.length=x,s.pointShadow.length=b,s.pointShadowMap.length=b,s.spotShadow.length=M,s.spotShadowMap.length=M,s.directionalShadowMatrix.length=x,s.pointShadowMatrix.length=b,s.spotLightMatrix.length=M+T-L,s.spotLightMap.length=T,s.numSpotLightShadowsWithMaps=L,w.directionalLength=_,w.pointLength=g,w.spotLength=p,w.rectAreaLength=S,w.hemiLength=y,w.numDirectionalShadows=x,w.numPointShadows=b,w.numSpotShadows=M,w.numSpotMaps=T,s.version=AT++)}function c(u,f){let h=0,d=0,m=0,_=0,g=0;const p=f.matrixWorldInverse;for(let S=0,y=u.length;S<y;S++){const x=u[S];if(x.isDirectionalLight){const b=s.directional[h];b.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(p),h++}else if(x.isSpotLight){const b=s.spot[m];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(p),b.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(p),m++}else if(x.isRectAreaLight){const b=s.rectArea[_];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(p),a.identity(),o.copy(x.matrixWorld),o.premultiply(p),a.extractRotation(o),b.halfWidth.set(x.width*.5,0,0),b.halfHeight.set(0,x.height*.5,0),b.halfWidth.applyMatrix4(a),b.halfHeight.applyMatrix4(a),_++}else if(x.isPointLight){const b=s.point[d];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(p),d++}else if(x.isHemisphereLight){const b=s.hemi[g];b.direction.setFromMatrixPosition(x.matrixWorld),b.direction.transformDirection(p),g++}}}return{setup:l,setupView:c,state:s}}function Zd(t,e){const n=new CT(t,e),i=[],s=[];function r(){i.length=0,s.length=0}function o(f){i.push(f)}function a(f){s.push(f)}function l(f){n.setup(i,f)}function c(f){n.setupView(i,f)}return{init:r,state:{lightsArray:i,shadowsArray:s,lights:n},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function PT(t,e){let n=new WeakMap;function i(r,o=0){const a=n.get(r);let l;return a===void 0?(l=new Zd(t,e),n.set(r,[l])):o>=a.length?(l=new Zd(t,e),a.push(l)):l=a[o],l}function s(){n=new WeakMap}return{get:i,dispose:s}}class LT extends Rr{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ab,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class DT extends Rr{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const UT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,IT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function NT(t,e,n){let i=new mf;const s=new Ge,r=new Ge,o=new It,a=new LT({depthPacking:Rb}),l=new DT,c={},u=n.maxTextureSize,f={[Xi]:un,[un]:Xi,[Mi]:Mi},h=new As({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ge},radius:{value:4}},vertexShader:UT,fragmentShader:IT}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const m=new Wn;m.setAttribute("position",new Mn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new Si(m,h),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=T0;let p=this.type;this.render=function(b,M,T){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||b.length===0)return;const L=t.getRenderTarget(),v=t.getActiveCubeFace(),w=t.getActiveMipmapLevel(),N=t.state;N.setBlending(Gi),N.buffers.color.setClear(1,1,1,1),N.buffers.depth.setTest(!0),N.setScissorTest(!1);const U=p!==vi&&this.type===vi,I=p===vi&&this.type!==vi;for(let F=0,k=b.length;F<k;F++){const H=b[F],$=H.shadow;if($===void 0){console.warn("THREE.WebGLShadowMap:",H,"has no shadow.");continue}if($.autoUpdate===!1&&$.needsUpdate===!1)continue;s.copy($.mapSize);const W=$.getFrameExtents();if(s.multiply(W),r.copy($.mapSize),(s.x>u||s.y>u)&&(s.x>u&&(r.x=Math.floor(u/W.x),s.x=r.x*W.x,$.mapSize.x=r.x),s.y>u&&(r.y=Math.floor(u/W.y),s.y=r.y*W.y,$.mapSize.y=r.y)),$.map===null||U===!0||I===!0){const te=this.type!==vi?{minFilter:Kt,magFilter:Kt}:{};$.map!==null&&$.map.dispose(),$.map=new Ts(s.x,s.y,te),$.map.texture.name=H.name+".shadowMap",$.camera.updateProjectionMatrix()}t.setRenderTarget($.map),t.clear();const ae=$.getViewportCount();for(let te=0;te<ae;te++){const Ee=$.getViewport(te);o.set(r.x*Ee.x,r.y*Ee.y,r.x*Ee.z,r.y*Ee.w),N.viewport(o),$.updateMatrices(H,te),i=$.getFrustum(),x(M,T,$.camera,H,this.type)}$.isPointLightShadow!==!0&&this.type===vi&&S($,T),$.needsUpdate=!1}p=this.type,g.needsUpdate=!1,t.setRenderTarget(L,v,w)};function S(b,M){const T=e.update(_);h.defines.VSM_SAMPLES!==b.blurSamples&&(h.defines.VSM_SAMPLES=b.blurSamples,d.defines.VSM_SAMPLES=b.blurSamples,h.needsUpdate=!0,d.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new Ts(s.x,s.y)),h.uniforms.shadow_pass.value=b.map.texture,h.uniforms.resolution.value=b.mapSize,h.uniforms.radius.value=b.radius,t.setRenderTarget(b.mapPass),t.clear(),t.renderBufferDirect(M,null,T,h,_,null),d.uniforms.shadow_pass.value=b.mapPass.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,t.setRenderTarget(b.map),t.clear(),t.renderBufferDirect(M,null,T,d,_,null)}function y(b,M,T,L){let v=null;const w=T.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(w!==void 0)v=w;else if(v=T.isPointLight===!0?l:a,t.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const N=v.uuid,U=M.uuid;let I=c[N];I===void 0&&(I={},c[N]=I);let F=I[U];F===void 0&&(F=v.clone(),I[U]=F),v=F}if(v.visible=M.visible,v.wireframe=M.wireframe,L===vi?v.side=M.shadowSide!==null?M.shadowSide:M.side:v.side=M.shadowSide!==null?M.shadowSide:f[M.side],v.alphaMap=M.alphaMap,v.alphaTest=M.alphaTest,v.map=M.map,v.clipShadows=M.clipShadows,v.clippingPlanes=M.clippingPlanes,v.clipIntersection=M.clipIntersection,v.displacementMap=M.displacementMap,v.displacementScale=M.displacementScale,v.displacementBias=M.displacementBias,v.wireframeLinewidth=M.wireframeLinewidth,v.linewidth=M.linewidth,T.isPointLight===!0&&v.isMeshDistanceMaterial===!0){const N=t.properties.get(v);N.light=T}return v}function x(b,M,T,L,v){if(b.visible===!1)return;if(b.layers.test(M.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&v===vi)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,b.matrixWorld);const U=e.update(b),I=b.material;if(Array.isArray(I)){const F=U.groups;for(let k=0,H=F.length;k<H;k++){const $=F[k],W=I[$.materialIndex];if(W&&W.visible){const ae=y(b,W,L,v);t.renderBufferDirect(T,null,U,ae,b,$)}}}else if(I.visible){const F=y(b,I,L,v);t.renderBufferDirect(T,null,U,F,b,null)}}const N=b.children;for(let U=0,I=N.length;U<I;U++)x(N[U],M,T,L,v)}}function FT(t,e,n){const i=n.isWebGL2;function s(){let O=!1;const J=new It;let pe=null;const we=new It(0,0,0,0);return{setMask:function(Le){pe!==Le&&!O&&(t.colorMask(Le,Le,Le,Le),pe=Le)},setLocked:function(Le){O=Le},setClear:function(Le,at,lt,Ht,Ri){Ri===!0&&(Le*=Ht,at*=Ht,lt*=Ht),J.set(Le,at,lt,Ht),we.equals(J)===!1&&(t.clearColor(Le,at,lt,Ht),we.copy(J))},reset:function(){O=!1,pe=null,we.set(-1,0,0,0)}}}function r(){let O=!1,J=null,pe=null,we=null;return{setTest:function(Le){Le?A(t.DEPTH_TEST):fe(t.DEPTH_TEST)},setMask:function(Le){J!==Le&&!O&&(t.depthMask(Le),J=Le)},setFunc:function(Le){if(pe!==Le){switch(Le){case Ky:t.depthFunc(t.NEVER);break;case Jy:t.depthFunc(t.ALWAYS);break;case Qy:t.depthFunc(t.LESS);break;case Cu:t.depthFunc(t.LEQUAL);break;case eb:t.depthFunc(t.EQUAL);break;case tb:t.depthFunc(t.GEQUAL);break;case nb:t.depthFunc(t.GREATER);break;case ib:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}pe=Le}},setLocked:function(Le){O=Le},setClear:function(Le){we!==Le&&(t.clearDepth(Le),we=Le)},reset:function(){O=!1,J=null,pe=null,we=null}}}function o(){let O=!1,J=null,pe=null,we=null,Le=null,at=null,lt=null,Ht=null,Ri=null;return{setTest:function(vt){O||(vt?A(t.STENCIL_TEST):fe(t.STENCIL_TEST))},setMask:function(vt){J!==vt&&!O&&(t.stencilMask(vt),J=vt)},setFunc:function(vt,Sn,Xn){(pe!==vt||we!==Sn||Le!==Xn)&&(t.stencilFunc(vt,Sn,Xn),pe=vt,we=Sn,Le=Xn)},setOp:function(vt,Sn,Xn){(at!==vt||lt!==Sn||Ht!==Xn)&&(t.stencilOp(vt,Sn,Xn),at=vt,lt=Sn,Ht=Xn)},setLocked:function(vt){O=vt},setClear:function(vt){Ri!==vt&&(t.clearStencil(vt),Ri=vt)},reset:function(){O=!1,J=null,pe=null,we=null,Le=null,at=null,lt=null,Ht=null,Ri=null}}}const a=new s,l=new r,c=new o,u=new WeakMap,f=new WeakMap;let h={},d={},m=new WeakMap,_=[],g=null,p=!1,S=null,y=null,x=null,b=null,M=null,T=null,L=null,v=!1,w=null,N=null,U=null,I=null,F=null;const k=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let H=!1,$=0;const W=t.getParameter(t.VERSION);W.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(W)[1]),H=$>=1):W.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),H=$>=2);let ae=null,te={};const Ee=t.getParameter(t.SCISSOR_BOX),ce=t.getParameter(t.VIEWPORT),Z=new It().fromArray(Ee),re=new It().fromArray(ce);function ge(O,J,pe,we){const Le=new Uint8Array(4),at=t.createTexture();t.bindTexture(O,at),t.texParameteri(O,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(O,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let lt=0;lt<pe;lt++)i&&(O===t.TEXTURE_3D||O===t.TEXTURE_2D_ARRAY)?t.texImage3D(J,0,t.RGBA,1,1,we,0,t.RGBA,t.UNSIGNED_BYTE,Le):t.texImage2D(J+lt,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,Le);return at}const _e={};_e[t.TEXTURE_2D]=ge(t.TEXTURE_2D,t.TEXTURE_2D,1),_e[t.TEXTURE_CUBE_MAP]=ge(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(_e[t.TEXTURE_2D_ARRAY]=ge(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),_e[t.TEXTURE_3D]=ge(t.TEXTURE_3D,t.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),A(t.DEPTH_TEST),l.setFunc(Cu),ee(!1),ie(Ih),A(t.CULL_FACE),z(Gi);function A(O){h[O]!==!0&&(t.enable(O),h[O]=!0)}function fe(O){h[O]!==!1&&(t.disable(O),h[O]=!1)}function Se(O,J){return d[O]!==J?(t.bindFramebuffer(O,J),d[O]=J,i&&(O===t.DRAW_FRAMEBUFFER&&(d[t.FRAMEBUFFER]=J),O===t.FRAMEBUFFER&&(d[t.DRAW_FRAMEBUFFER]=J)),!0):!1}function de(O,J){let pe=_,we=!1;if(O)if(pe=m.get(J),pe===void 0&&(pe=[],m.set(J,pe)),O.isWebGLMultipleRenderTargets){const Le=O.texture;if(pe.length!==Le.length||pe[0]!==t.COLOR_ATTACHMENT0){for(let at=0,lt=Le.length;at<lt;at++)pe[at]=t.COLOR_ATTACHMENT0+at;pe.length=Le.length,we=!0}}else pe[0]!==t.COLOR_ATTACHMENT0&&(pe[0]=t.COLOR_ATTACHMENT0,we=!0);else pe[0]!==t.BACK&&(pe[0]=t.BACK,we=!0);we&&(n.isWebGL2?t.drawBuffers(pe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(pe))}function Pe(O){return g!==O?(t.useProgram(O),g=O,!0):!1}const P={[sr]:t.FUNC_ADD,[Hy]:t.FUNC_SUBTRACT,[zy]:t.FUNC_REVERSE_SUBTRACT};if(i)P[kh]=t.MIN,P[Bh]=t.MAX;else{const O=e.get("EXT_blend_minmax");O!==null&&(P[kh]=O.MIN_EXT,P[Bh]=O.MAX_EXT)}const D={[Vy]:t.ZERO,[$y]:t.ONE,[Gy]:t.SRC_COLOR,[A0]:t.SRC_ALPHA,[Zy]:t.SRC_ALPHA_SATURATE,[jy]:t.DST_COLOR,[Xy]:t.DST_ALPHA,[Wy]:t.ONE_MINUS_SRC_COLOR,[R0]:t.ONE_MINUS_SRC_ALPHA,[Yy]:t.ONE_MINUS_DST_COLOR,[qy]:t.ONE_MINUS_DST_ALPHA};function z(O,J,pe,we,Le,at,lt,Ht){if(O===Gi){p===!0&&(fe(t.BLEND),p=!1);return}if(p===!1&&(A(t.BLEND),p=!0),O!==By){if(O!==S||Ht!==v){if((y!==sr||M!==sr)&&(t.blendEquation(t.FUNC_ADD),y=sr,M=sr),Ht)switch(O){case pr:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case Nh:t.blendFunc(t.ONE,t.ONE);break;case Fh:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case Oh:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case pr:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case Nh:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case Fh:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case Oh:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}x=null,b=null,T=null,L=null,S=O,v=Ht}return}Le=Le||J,at=at||pe,lt=lt||we,(J!==y||Le!==M)&&(t.blendEquationSeparate(P[J],P[Le]),y=J,M=Le),(pe!==x||we!==b||at!==T||lt!==L)&&(t.blendFuncSeparate(D[pe],D[we],D[at],D[lt]),x=pe,b=we,T=at,L=lt),S=O,v=!1}function se(O,J){O.side===Mi?fe(t.CULL_FACE):A(t.CULL_FACE);let pe=O.side===un;J&&(pe=!pe),ee(pe),O.blending===pr&&O.transparent===!1?z(Gi):z(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),l.setFunc(O.depthFunc),l.setTest(O.depthTest),l.setMask(O.depthWrite),a.setMask(O.colorWrite);const we=O.stencilWrite;c.setTest(we),we&&(c.setMask(O.stencilWriteMask),c.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),c.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),oe(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?A(t.SAMPLE_ALPHA_TO_COVERAGE):fe(t.SAMPLE_ALPHA_TO_COVERAGE)}function ee(O){w!==O&&(O?t.frontFace(t.CW):t.frontFace(t.CCW),w=O)}function ie(O){O!==Fy?(A(t.CULL_FACE),O!==N&&(O===Ih?t.cullFace(t.BACK):O===Oy?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):fe(t.CULL_FACE),N=O}function me(O){O!==U&&(H&&t.lineWidth(O),U=O)}function oe(O,J,pe){O?(A(t.POLYGON_OFFSET_FILL),(I!==J||F!==pe)&&(t.polygonOffset(J,pe),I=J,F=pe)):fe(t.POLYGON_OFFSET_FILL)}function ue(O){O?A(t.SCISSOR_TEST):fe(t.SCISSOR_TEST)}function le(O){O===void 0&&(O=t.TEXTURE0+k-1),ae!==O&&(t.activeTexture(O),ae=O)}function R(O,J,pe){pe===void 0&&(ae===null?pe=t.TEXTURE0+k-1:pe=ae);let we=te[pe];we===void 0&&(we={type:void 0,texture:void 0},te[pe]=we),(we.type!==O||we.texture!==J)&&(ae!==pe&&(t.activeTexture(pe),ae=pe),t.bindTexture(O,J||_e[O]),we.type=O,we.texture=J)}function E(){const O=te[ae];O!==void 0&&O.type!==void 0&&(t.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function B(){try{t.compressedTexImage2D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function j(){try{t.compressedTexImage3D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function K(){try{t.texSubImage2D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function he(){try{t.texSubImage3D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ye(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function be(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Y(){try{t.texStorage2D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Te(){try{t.texStorage3D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Re(){try{t.texImage2D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function De(){try{t.texImage3D.apply(t,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ae(O){Z.equals(O)===!1&&(t.scissor(O.x,O.y,O.z,O.w),Z.copy(O))}function Me(O){re.equals(O)===!1&&(t.viewport(O.x,O.y,O.z,O.w),re.copy(O))}function Fe(O,J){let pe=f.get(J);pe===void 0&&(pe=new WeakMap,f.set(J,pe));let we=pe.get(O);we===void 0&&(we=t.getUniformBlockIndex(J,O.name),pe.set(O,we))}function Qe(O,J){const we=f.get(J).get(O);u.get(J)!==we&&(t.uniformBlockBinding(J,we,O.__bindingPointIndex),u.set(J,we))}function _t(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),i===!0&&(t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),h={},ae=null,te={},d={},m=new WeakMap,_=[],g=null,p=!1,S=null,y=null,x=null,b=null,M=null,T=null,L=null,v=!1,w=null,N=null,U=null,I=null,F=null,Z.set(0,0,t.canvas.width,t.canvas.height),re.set(0,0,t.canvas.width,t.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:A,disable:fe,bindFramebuffer:Se,drawBuffers:de,useProgram:Pe,setBlending:z,setMaterial:se,setFlipSided:ee,setCullFace:ie,setLineWidth:me,setPolygonOffset:oe,setScissorTest:ue,activeTexture:le,bindTexture:R,unbindTexture:E,compressedTexImage2D:B,compressedTexImage3D:j,texImage2D:Re,texImage3D:De,updateUBOMapping:Fe,uniformBlockBinding:Qe,texStorage2D:Y,texStorage3D:Te,texSubImage2D:K,texSubImage3D:he,compressedTexSubImage2D:ye,compressedTexSubImage3D:be,scissor:Ae,viewport:Me,reset:_t}}function OT(t,e,n,i,s,r,o){const a=s.isWebGL2,l=s.maxTextures,c=s.maxCubemapSize,u=s.maxTextureSize,f=s.maxSamples,h=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let _;const g=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function S(R,E){return p?new OffscreenCanvas(R,E):Ja("canvas")}function y(R,E,B,j){let K=1;if((R.width>j||R.height>j)&&(K=j/Math.max(R.width,R.height)),K<1||E===!0)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap){const he=E?N0:Math.floor,ye=he(K*R.width),be=he(K*R.height);_===void 0&&(_=S(ye,be));const Y=B?S(ye,be):_;return Y.width=ye,Y.height=be,Y.getContext("2d").drawImage(R,0,0,ye,be),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+ye+"x"+be+")."),Y}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),R;return R}function x(R){return Nu(R.width)&&Nu(R.height)}function b(R){return a?!1:R.wrapS!==Hn||R.wrapT!==Hn||R.minFilter!==Kt&&R.minFilter!==Tn}function M(R,E){return R.generateMipmaps&&E&&R.minFilter!==Kt&&R.minFilter!==Tn}function T(R){t.generateMipmap(R)}function L(R,E,B,j,K=!1){if(a===!1)return E;if(R!==null){if(t[R]!==void 0)return t[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let he=E;return E===t.RED&&(B===t.FLOAT&&(he=t.R32F),B===t.HALF_FLOAT&&(he=t.R16F),B===t.UNSIGNED_BYTE&&(he=t.R8)),E===t.RG&&(B===t.FLOAT&&(he=t.RG32F),B===t.HALF_FLOAT&&(he=t.RG16F),B===t.UNSIGNED_BYTE&&(he=t.RG8)),E===t.RGBA&&(B===t.FLOAT&&(he=t.RGBA32F),B===t.HALF_FLOAT&&(he=t.RGBA16F),B===t.UNSIGNED_BYTE&&(he=j===He&&K===!1?t.SRGB8_ALPHA8:t.RGBA8),B===t.UNSIGNED_SHORT_4_4_4_4&&(he=t.RGBA4),B===t.UNSIGNED_SHORT_5_5_5_1&&(he=t.RGB5_A1)),(he===t.R16F||he===t.R32F||he===t.RG16F||he===t.RG32F||he===t.RGBA16F||he===t.RGBA32F)&&e.get("EXT_color_buffer_float"),he}function v(R,E,B){return M(R,B)===!0||R.isFramebufferTexture&&R.minFilter!==Kt&&R.minFilter!==Tn?Math.log2(Math.max(E.width,E.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?E.mipmaps.length:1}function w(R){return R===Kt||R===Hh||R===rc?t.NEAREST:t.LINEAR}function N(R){const E=R.target;E.removeEventListener("dispose",N),I(E),E.isVideoTexture&&m.delete(E)}function U(R){const E=R.target;E.removeEventListener("dispose",U),k(E)}function I(R){const E=i.get(R);if(E.__webglInit===void 0)return;const B=R.source,j=g.get(B);if(j){const K=j[E.__cacheKey];K.usedTimes--,K.usedTimes===0&&F(R),Object.keys(j).length===0&&g.delete(B)}i.remove(R)}function F(R){const E=i.get(R);t.deleteTexture(E.__webglTexture);const B=R.source,j=g.get(B);delete j[E.__cacheKey],o.memory.textures--}function k(R){const E=R.texture,B=i.get(R),j=i.get(E);if(j.__webglTexture!==void 0&&(t.deleteTexture(j.__webglTexture),o.memory.textures--),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let K=0;K<6;K++)t.deleteFramebuffer(B.__webglFramebuffer[K]),B.__webglDepthbuffer&&t.deleteRenderbuffer(B.__webglDepthbuffer[K]);else{if(t.deleteFramebuffer(B.__webglFramebuffer),B.__webglDepthbuffer&&t.deleteRenderbuffer(B.__webglDepthbuffer),B.__webglMultisampledFramebuffer&&t.deleteFramebuffer(B.__webglMultisampledFramebuffer),B.__webglColorRenderbuffer)for(let K=0;K<B.__webglColorRenderbuffer.length;K++)B.__webglColorRenderbuffer[K]&&t.deleteRenderbuffer(B.__webglColorRenderbuffer[K]);B.__webglDepthRenderbuffer&&t.deleteRenderbuffer(B.__webglDepthRenderbuffer)}if(R.isWebGLMultipleRenderTargets)for(let K=0,he=E.length;K<he;K++){const ye=i.get(E[K]);ye.__webglTexture&&(t.deleteTexture(ye.__webglTexture),o.memory.textures--),i.remove(E[K])}i.remove(E),i.remove(R)}let H=0;function $(){H=0}function W(){const R=H;return R>=l&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+l),H+=1,R}function ae(R){const E=[];return E.push(R.wrapS),E.push(R.wrapT),E.push(R.wrapR||0),E.push(R.magFilter),E.push(R.minFilter),E.push(R.anisotropy),E.push(R.internalFormat),E.push(R.format),E.push(R.type),E.push(R.generateMipmaps),E.push(R.premultiplyAlpha),E.push(R.flipY),E.push(R.unpackAlignment),E.push(R.colorSpace),E.join()}function te(R,E){const B=i.get(R);if(R.isVideoTexture&&ue(R),R.isRenderTargetTexture===!1&&R.version>0&&B.__version!==R.version){const j=R.image;if(j===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(j.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{fe(B,R,E);return}}n.bindTexture(t.TEXTURE_2D,B.__webglTexture,t.TEXTURE0+E)}function Ee(R,E){const B=i.get(R);if(R.version>0&&B.__version!==R.version){fe(B,R,E);return}n.bindTexture(t.TEXTURE_2D_ARRAY,B.__webglTexture,t.TEXTURE0+E)}function ce(R,E){const B=i.get(R);if(R.version>0&&B.__version!==R.version){fe(B,R,E);return}n.bindTexture(t.TEXTURE_3D,B.__webglTexture,t.TEXTURE0+E)}function Z(R,E){const B=i.get(R);if(R.version>0&&B.__version!==R.version){Se(B,R,E);return}n.bindTexture(t.TEXTURE_CUBE_MAP,B.__webglTexture,t.TEXTURE0+E)}const re={[Du]:t.REPEAT,[Hn]:t.CLAMP_TO_EDGE,[Uu]:t.MIRRORED_REPEAT},ge={[Kt]:t.NEAREST,[Hh]:t.NEAREST_MIPMAP_NEAREST,[rc]:t.NEAREST_MIPMAP_LINEAR,[Tn]:t.LINEAR,[fb]:t.LINEAR_MIPMAP_NEAREST,[So]:t.LINEAR_MIPMAP_LINEAR};function _e(R,E,B){if(B?(t.texParameteri(R,t.TEXTURE_WRAP_S,re[E.wrapS]),t.texParameteri(R,t.TEXTURE_WRAP_T,re[E.wrapT]),(R===t.TEXTURE_3D||R===t.TEXTURE_2D_ARRAY)&&t.texParameteri(R,t.TEXTURE_WRAP_R,re[E.wrapR]),t.texParameteri(R,t.TEXTURE_MAG_FILTER,ge[E.magFilter]),t.texParameteri(R,t.TEXTURE_MIN_FILTER,ge[E.minFilter])):(t.texParameteri(R,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(R,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),(R===t.TEXTURE_3D||R===t.TEXTURE_2D_ARRAY)&&t.texParameteri(R,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),(E.wrapS!==Hn||E.wrapT!==Hn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(R,t.TEXTURE_MAG_FILTER,w(E.magFilter)),t.texParameteri(R,t.TEXTURE_MIN_FILTER,w(E.minFilter)),E.minFilter!==Kt&&E.minFilter!==Tn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const j=e.get("EXT_texture_filter_anisotropic");if(E.magFilter===Kt||E.minFilter!==rc&&E.minFilter!==So||E.type===xs&&e.has("OES_texture_float_linear")===!1||a===!1&&E.type===Eo&&e.has("OES_texture_half_float_linear")===!1)return;(E.anisotropy>1||i.get(E).__currentAnisotropy)&&(t.texParameterf(R,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,s.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy)}}function A(R,E){let B=!1;R.__webglInit===void 0&&(R.__webglInit=!0,E.addEventListener("dispose",N));const j=E.source;let K=g.get(j);K===void 0&&(K={},g.set(j,K));const he=ae(E);if(he!==R.__cacheKey){K[he]===void 0&&(K[he]={texture:t.createTexture(),usedTimes:0},o.memory.textures++,B=!0),K[he].usedTimes++;const ye=K[R.__cacheKey];ye!==void 0&&(K[R.__cacheKey].usedTimes--,ye.usedTimes===0&&F(E)),R.__cacheKey=he,R.__webglTexture=K[he].texture}return B}function fe(R,E,B){let j=t.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(j=t.TEXTURE_2D_ARRAY),E.isData3DTexture&&(j=t.TEXTURE_3D);const K=A(R,E),he=E.source;n.bindTexture(j,R.__webglTexture,t.TEXTURE0+B);const ye=i.get(he);if(he.version!==ye.__version||K===!0){n.activeTexture(t.TEXTURE0+B),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,E.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,E.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const be=b(E)&&x(E.image)===!1;let Y=y(E.image,be,!1,u);Y=le(E,Y);const Te=x(Y)||a,Re=r.convert(E.format,E.colorSpace);let De=r.convert(E.type),Ae=L(E.internalFormat,Re,De,E.colorSpace);_e(j,E,Te);let Me;const Fe=E.mipmaps,Qe=a&&E.isVideoTexture!==!0,_t=ye.__version===void 0||K===!0,O=v(E,Y,Te);if(E.isDepthTexture)Ae=t.DEPTH_COMPONENT,a?E.type===xs?Ae=t.DEPTH_COMPONENT32F:E.type===vs?Ae=t.DEPTH_COMPONENT24:E.type===mr?Ae=t.DEPTH24_STENCIL8:Ae=t.DEPTH_COMPONENT16:E.type===xs&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===Ms&&Ae===t.DEPTH_COMPONENT&&E.type!==L0&&E.type!==vs&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=vs,De=r.convert(E.type)),E.format===br&&Ae===t.DEPTH_COMPONENT&&(Ae=t.DEPTH_STENCIL,E.type!==mr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=mr,De=r.convert(E.type))),_t&&(Qe?n.texStorage2D(t.TEXTURE_2D,1,Ae,Y.width,Y.height):n.texImage2D(t.TEXTURE_2D,0,Ae,Y.width,Y.height,0,Re,De,null));else if(E.isDataTexture)if(Fe.length>0&&Te){Qe&&_t&&n.texStorage2D(t.TEXTURE_2D,O,Ae,Fe[0].width,Fe[0].height);for(let J=0,pe=Fe.length;J<pe;J++)Me=Fe[J],Qe?n.texSubImage2D(t.TEXTURE_2D,J,0,0,Me.width,Me.height,Re,De,Me.data):n.texImage2D(t.TEXTURE_2D,J,Ae,Me.width,Me.height,0,Re,De,Me.data);E.generateMipmaps=!1}else Qe?(_t&&n.texStorage2D(t.TEXTURE_2D,O,Ae,Y.width,Y.height),n.texSubImage2D(t.TEXTURE_2D,0,0,0,Y.width,Y.height,Re,De,Y.data)):n.texImage2D(t.TEXTURE_2D,0,Ae,Y.width,Y.height,0,Re,De,Y.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){Qe&&_t&&n.texStorage3D(t.TEXTURE_2D_ARRAY,O,Ae,Fe[0].width,Fe[0].height,Y.depth);for(let J=0,pe=Fe.length;J<pe;J++)Me=Fe[J],E.format!==zn?Re!==null?Qe?n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,J,0,0,0,Me.width,Me.height,Y.depth,Re,Me.data,0,0):n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,J,Ae,Me.width,Me.height,Y.depth,0,Me.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Qe?n.texSubImage3D(t.TEXTURE_2D_ARRAY,J,0,0,0,Me.width,Me.height,Y.depth,Re,De,Me.data):n.texImage3D(t.TEXTURE_2D_ARRAY,J,Ae,Me.width,Me.height,Y.depth,0,Re,De,Me.data)}else{Qe&&_t&&n.texStorage2D(t.TEXTURE_2D,O,Ae,Fe[0].width,Fe[0].height);for(let J=0,pe=Fe.length;J<pe;J++)Me=Fe[J],E.format!==zn?Re!==null?Qe?n.compressedTexSubImage2D(t.TEXTURE_2D,J,0,0,Me.width,Me.height,Re,Me.data):n.compressedTexImage2D(t.TEXTURE_2D,J,Ae,Me.width,Me.height,0,Me.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Qe?n.texSubImage2D(t.TEXTURE_2D,J,0,0,Me.width,Me.height,Re,De,Me.data):n.texImage2D(t.TEXTURE_2D,J,Ae,Me.width,Me.height,0,Re,De,Me.data)}else if(E.isDataArrayTexture)Qe?(_t&&n.texStorage3D(t.TEXTURE_2D_ARRAY,O,Ae,Y.width,Y.height,Y.depth),n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,Y.width,Y.height,Y.depth,Re,De,Y.data)):n.texImage3D(t.TEXTURE_2D_ARRAY,0,Ae,Y.width,Y.height,Y.depth,0,Re,De,Y.data);else if(E.isData3DTexture)Qe?(_t&&n.texStorage3D(t.TEXTURE_3D,O,Ae,Y.width,Y.height,Y.depth),n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,Y.width,Y.height,Y.depth,Re,De,Y.data)):n.texImage3D(t.TEXTURE_3D,0,Ae,Y.width,Y.height,Y.depth,0,Re,De,Y.data);else if(E.isFramebufferTexture){if(_t)if(Qe)n.texStorage2D(t.TEXTURE_2D,O,Ae,Y.width,Y.height);else{let J=Y.width,pe=Y.height;for(let we=0;we<O;we++)n.texImage2D(t.TEXTURE_2D,we,Ae,J,pe,0,Re,De,null),J>>=1,pe>>=1}}else if(Fe.length>0&&Te){Qe&&_t&&n.texStorage2D(t.TEXTURE_2D,O,Ae,Fe[0].width,Fe[0].height);for(let J=0,pe=Fe.length;J<pe;J++)Me=Fe[J],Qe?n.texSubImage2D(t.TEXTURE_2D,J,0,0,Re,De,Me):n.texImage2D(t.TEXTURE_2D,J,Ae,Re,De,Me);E.generateMipmaps=!1}else Qe?(_t&&n.texStorage2D(t.TEXTURE_2D,O,Ae,Y.width,Y.height),n.texSubImage2D(t.TEXTURE_2D,0,0,0,Re,De,Y)):n.texImage2D(t.TEXTURE_2D,0,Ae,Re,De,Y);M(E,Te)&&T(j),ye.__version=he.version,E.onUpdate&&E.onUpdate(E)}R.__version=E.version}function Se(R,E,B){if(E.image.length!==6)return;const j=A(R,E),K=E.source;n.bindTexture(t.TEXTURE_CUBE_MAP,R.__webglTexture,t.TEXTURE0+B);const he=i.get(K);if(K.version!==he.__version||j===!0){n.activeTexture(t.TEXTURE0+B),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,E.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,E.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const ye=E.isCompressedTexture||E.image[0].isCompressedTexture,be=E.image[0]&&E.image[0].isDataTexture,Y=[];for(let J=0;J<6;J++)!ye&&!be?Y[J]=y(E.image[J],!1,!0,c):Y[J]=be?E.image[J].image:E.image[J],Y[J]=le(E,Y[J]);const Te=Y[0],Re=x(Te)||a,De=r.convert(E.format,E.colorSpace),Ae=r.convert(E.type),Me=L(E.internalFormat,De,Ae,E.colorSpace),Fe=a&&E.isVideoTexture!==!0,Qe=he.__version===void 0||j===!0;let _t=v(E,Te,Re);_e(t.TEXTURE_CUBE_MAP,E,Re);let O;if(ye){Fe&&Qe&&n.texStorage2D(t.TEXTURE_CUBE_MAP,_t,Me,Te.width,Te.height);for(let J=0;J<6;J++){O=Y[J].mipmaps;for(let pe=0;pe<O.length;pe++){const we=O[pe];E.format!==zn?De!==null?Fe?n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe,0,0,we.width,we.height,De,we.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe,Me,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Fe?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe,0,0,we.width,we.height,De,Ae,we.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe,Me,we.width,we.height,0,De,Ae,we.data)}}}else{O=E.mipmaps,Fe&&Qe&&(O.length>0&&_t++,n.texStorage2D(t.TEXTURE_CUBE_MAP,_t,Me,Y[0].width,Y[0].height));for(let J=0;J<6;J++)if(be){Fe?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,0,0,Y[J].width,Y[J].height,De,Ae,Y[J].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,Me,Y[J].width,Y[J].height,0,De,Ae,Y[J].data);for(let pe=0;pe<O.length;pe++){const Le=O[pe].image[J].image;Fe?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe+1,0,0,Le.width,Le.height,De,Ae,Le.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe+1,Me,Le.width,Le.height,0,De,Ae,Le.data)}}else{Fe?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,0,0,De,Ae,Y[J]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,Me,De,Ae,Y[J]);for(let pe=0;pe<O.length;pe++){const we=O[pe];Fe?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe+1,0,0,De,Ae,we.image[J]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+J,pe+1,Me,De,Ae,we.image[J])}}}M(E,Re)&&T(t.TEXTURE_CUBE_MAP),he.__version=K.version,E.onUpdate&&E.onUpdate(E)}R.__version=E.version}function de(R,E,B,j,K){const he=r.convert(B.format,B.colorSpace),ye=r.convert(B.type),be=L(B.internalFormat,he,ye,B.colorSpace);i.get(E).__hasExternalTextures||(K===t.TEXTURE_3D||K===t.TEXTURE_2D_ARRAY?n.texImage3D(K,0,be,E.width,E.height,E.depth,0,he,ye,null):n.texImage2D(K,0,be,E.width,E.height,0,he,ye,null)),n.bindFramebuffer(t.FRAMEBUFFER,R),oe(E)?h.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,j,K,i.get(B).__webglTexture,0,me(E)):(K===t.TEXTURE_2D||K>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&K<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,j,K,i.get(B).__webglTexture,0),n.bindFramebuffer(t.FRAMEBUFFER,null)}function Pe(R,E,B){if(t.bindRenderbuffer(t.RENDERBUFFER,R),E.depthBuffer&&!E.stencilBuffer){let j=t.DEPTH_COMPONENT16;if(B||oe(E)){const K=E.depthTexture;K&&K.isDepthTexture&&(K.type===xs?j=t.DEPTH_COMPONENT32F:K.type===vs&&(j=t.DEPTH_COMPONENT24));const he=me(E);oe(E)?h.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,he,j,E.width,E.height):t.renderbufferStorageMultisample(t.RENDERBUFFER,he,j,E.width,E.height)}else t.renderbufferStorage(t.RENDERBUFFER,j,E.width,E.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,R)}else if(E.depthBuffer&&E.stencilBuffer){const j=me(E);B&&oe(E)===!1?t.renderbufferStorageMultisample(t.RENDERBUFFER,j,t.DEPTH24_STENCIL8,E.width,E.height):oe(E)?h.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,j,t.DEPTH24_STENCIL8,E.width,E.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,E.width,E.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,R)}else{const j=E.isWebGLMultipleRenderTargets===!0?E.texture:[E.texture];for(let K=0;K<j.length;K++){const he=j[K],ye=r.convert(he.format,he.colorSpace),be=r.convert(he.type),Y=L(he.internalFormat,ye,be,he.colorSpace),Te=me(E);B&&oe(E)===!1?t.renderbufferStorageMultisample(t.RENDERBUFFER,Te,Y,E.width,E.height):oe(E)?h.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,Te,Y,E.width,E.height):t.renderbufferStorage(t.RENDERBUFFER,Y,E.width,E.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function P(R,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,R),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),te(E.depthTexture,0);const j=i.get(E.depthTexture).__webglTexture,K=me(E);if(E.depthTexture.format===Ms)oe(E)?h.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,j,0,K):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,j,0);else if(E.depthTexture.format===br)oe(E)?h.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,j,0,K):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,j,0);else throw new Error("Unknown depthTexture format")}function D(R){const E=i.get(R),B=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!E.__autoAllocateDepthBuffer){if(B)throw new Error("target.depthTexture not supported in Cube render targets");P(E.__webglFramebuffer,R)}else if(B){E.__webglDepthbuffer=[];for(let j=0;j<6;j++)n.bindFramebuffer(t.FRAMEBUFFER,E.__webglFramebuffer[j]),E.__webglDepthbuffer[j]=t.createRenderbuffer(),Pe(E.__webglDepthbuffer[j],R,!1)}else n.bindFramebuffer(t.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer=t.createRenderbuffer(),Pe(E.__webglDepthbuffer,R,!1);n.bindFramebuffer(t.FRAMEBUFFER,null)}function z(R,E,B){const j=i.get(R);E!==void 0&&de(j.__webglFramebuffer,R,R.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),B!==void 0&&D(R)}function se(R){const E=R.texture,B=i.get(R),j=i.get(E);R.addEventListener("dispose",U),R.isWebGLMultipleRenderTargets!==!0&&(j.__webglTexture===void 0&&(j.__webglTexture=t.createTexture()),j.__version=E.version,o.memory.textures++);const K=R.isWebGLCubeRenderTarget===!0,he=R.isWebGLMultipleRenderTargets===!0,ye=x(R)||a;if(K){B.__webglFramebuffer=[];for(let be=0;be<6;be++)B.__webglFramebuffer[be]=t.createFramebuffer()}else{if(B.__webglFramebuffer=t.createFramebuffer(),he)if(s.drawBuffers){const be=R.texture;for(let Y=0,Te=be.length;Y<Te;Y++){const Re=i.get(be[Y]);Re.__webglTexture===void 0&&(Re.__webglTexture=t.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&R.samples>0&&oe(R)===!1){const be=he?E:[E];B.__webglMultisampledFramebuffer=t.createFramebuffer(),B.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,B.__webglMultisampledFramebuffer);for(let Y=0;Y<be.length;Y++){const Te=be[Y];B.__webglColorRenderbuffer[Y]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,B.__webglColorRenderbuffer[Y]);const Re=r.convert(Te.format,Te.colorSpace),De=r.convert(Te.type),Ae=L(Te.internalFormat,Re,De,Te.colorSpace,R.isXRRenderTarget===!0),Me=me(R);t.renderbufferStorageMultisample(t.RENDERBUFFER,Me,Ae,R.width,R.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+Y,t.RENDERBUFFER,B.__webglColorRenderbuffer[Y])}t.bindRenderbuffer(t.RENDERBUFFER,null),R.depthBuffer&&(B.__webglDepthRenderbuffer=t.createRenderbuffer(),Pe(B.__webglDepthRenderbuffer,R,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(K){n.bindTexture(t.TEXTURE_CUBE_MAP,j.__webglTexture),_e(t.TEXTURE_CUBE_MAP,E,ye);for(let be=0;be<6;be++)de(B.__webglFramebuffer[be],R,E,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+be);M(E,ye)&&T(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(he){const be=R.texture;for(let Y=0,Te=be.length;Y<Te;Y++){const Re=be[Y],De=i.get(Re);n.bindTexture(t.TEXTURE_2D,De.__webglTexture),_e(t.TEXTURE_2D,Re,ye),de(B.__webglFramebuffer,R,Re,t.COLOR_ATTACHMENT0+Y,t.TEXTURE_2D),M(Re,ye)&&T(t.TEXTURE_2D)}n.unbindTexture()}else{let be=t.TEXTURE_2D;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(a?be=R.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(be,j.__webglTexture),_e(be,E,ye),de(B.__webglFramebuffer,R,E,t.COLOR_ATTACHMENT0,be),M(E,ye)&&T(be),n.unbindTexture()}R.depthBuffer&&D(R)}function ee(R){const E=x(R)||a,B=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let j=0,K=B.length;j<K;j++){const he=B[j];if(M(he,E)){const ye=R.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,be=i.get(he).__webglTexture;n.bindTexture(ye,be),T(ye),n.unbindTexture()}}}function ie(R){if(a&&R.samples>0&&oe(R)===!1){const E=R.isWebGLMultipleRenderTargets?R.texture:[R.texture],B=R.width,j=R.height;let K=t.COLOR_BUFFER_BIT;const he=[],ye=R.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,be=i.get(R),Y=R.isWebGLMultipleRenderTargets===!0;if(Y)for(let Te=0;Te<E.length;Te++)n.bindFramebuffer(t.FRAMEBUFFER,be.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+Te,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,be.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+Te,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,be.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,be.__webglFramebuffer);for(let Te=0;Te<E.length;Te++){he.push(t.COLOR_ATTACHMENT0+Te),R.depthBuffer&&he.push(ye);const Re=be.__ignoreDepthValues!==void 0?be.__ignoreDepthValues:!1;if(Re===!1&&(R.depthBuffer&&(K|=t.DEPTH_BUFFER_BIT),R.stencilBuffer&&(K|=t.STENCIL_BUFFER_BIT)),Y&&t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,be.__webglColorRenderbuffer[Te]),Re===!0&&(t.invalidateFramebuffer(t.READ_FRAMEBUFFER,[ye]),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[ye])),Y){const De=i.get(E[Te]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,De,0)}t.blitFramebuffer(0,0,B,j,0,0,B,j,K,t.NEAREST),d&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,he)}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),Y)for(let Te=0;Te<E.length;Te++){n.bindFramebuffer(t.FRAMEBUFFER,be.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+Te,t.RENDERBUFFER,be.__webglColorRenderbuffer[Te]);const Re=i.get(E[Te]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,be.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+Te,t.TEXTURE_2D,Re,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,be.__webglMultisampledFramebuffer)}}function me(R){return Math.min(f,R.samples)}function oe(R){const E=i.get(R);return a&&R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function ue(R){const E=o.render.frame;m.get(R)!==E&&(m.set(R,E),R.update())}function le(R,E){const B=R.colorSpace,j=R.format,K=R.type;return R.isCompressedTexture===!0||R.format===Iu||B!==si&&B!==Es&&(B===He?a===!1?e.has("EXT_sRGB")===!0&&j===zn?(R.format=Iu,R.minFilter=Tn,R.generateMipmaps=!1):E=O0.sRGBToLinear(E):(j!==zn||K!==ws)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",B)),E}this.allocateTextureUnit=W,this.resetTextureUnits=$,this.setTexture2D=te,this.setTexture2DArray=Ee,this.setTexture3D=ce,this.setTextureCube=Z,this.rebindTextures=z,this.setupRenderTarget=se,this.updateRenderTargetMipmap=ee,this.updateMultisampleRenderTarget=ie,this.setupDepthRenderbuffer=D,this.setupFrameBufferTexture=de,this.useMultisampledRTT=oe}function kT(t,e,n){const i=n.isWebGL2;function s(r,o=Es){let a;if(r===ws)return t.UNSIGNED_BYTE;if(r===mb)return t.UNSIGNED_SHORT_4_4_4_4;if(r===gb)return t.UNSIGNED_SHORT_5_5_5_1;if(r===hb)return t.BYTE;if(r===db)return t.SHORT;if(r===L0)return t.UNSIGNED_SHORT;if(r===pb)return t.INT;if(r===vs)return t.UNSIGNED_INT;if(r===xs)return t.FLOAT;if(r===Eo)return i?t.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===_b)return t.ALPHA;if(r===zn)return t.RGBA;if(r===vb)return t.LUMINANCE;if(r===xb)return t.LUMINANCE_ALPHA;if(r===Ms)return t.DEPTH_COMPONENT;if(r===br)return t.DEPTH_STENCIL;if(r===Iu)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===yb)return t.RED;if(r===bb)return t.RED_INTEGER;if(r===Mb)return t.RG;if(r===Sb)return t.RG_INTEGER;if(r===Eb)return t.RGBA_INTEGER;if(r===oc||r===ac||r===lc||r===cc)if(o===He)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===oc)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===ac)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===lc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===cc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===oc)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===ac)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===lc)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===cc)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===zh||r===Vh||r===$h||r===Gh)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===zh)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Vh)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===$h)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Gh)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===wb)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Wh||r===Xh)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(r===Wh)return o===He?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===Xh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===qh||r===jh||r===Yh||r===Zh||r===Kh||r===Jh||r===Qh||r===ed||r===td||r===nd||r===id||r===sd||r===rd||r===od)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(r===qh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===jh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Yh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Zh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Kh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Jh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Qh)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===ed)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===td)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===nd)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===id)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===sd)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===rd)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===od)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===uc)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(r===uc)return o===He?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===Tb||r===ad||r===ld||r===cd)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(r===uc)return a.COMPRESSED_RED_RGTC1_EXT;if(r===ad)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===ld)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===cd)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===mr?i?t.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):t[r]!==void 0?t[r]:null}return{convert:s}}class BT extends Rn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ca extends Nt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const HT={type:"move"};class Dc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ca,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ca,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new V,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new V),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ca,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new V,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new V),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let s=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const _ of e.hand.values()){const g=n.getJointPose(_,i),p=this._getHandJoint(c,_);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const u=c.joints["index-finger-tip"],f=c.joints["thumb-tip"],h=u.position.distanceTo(f.position),d=.02,m=.005;c.inputState.pinching&&h>d+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&h<=d-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=n.getPose(e.gripSpace,i),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(s=n.getPose(e.targetRaySpace,i),s===null&&r!==null&&(s=r),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(HT)))}return a!==null&&(a.visible=s!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new ca;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}class zT extends bn{constructor(e,n,i,s,r,o,a,l,c,u){if(u=u!==void 0?u:Ms,u!==Ms&&u!==br)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&u===Ms&&(i=vs),i===void 0&&u===br&&(i=mr),super(null,s,r,o,a,l,u,i,c),this.isDepthTexture=!0,this.image={width:e,height:n},this.magFilter=a!==void 0?a:Kt,this.minFilter=l!==void 0?l:Kt,this.flipY=!1,this.generateMipmaps=!1}}class VT extends Ps{constructor(e,n){super();const i=this;let s=null,r=1,o=null,a="local-floor",l=1,c=null,u=null,f=null,h=null,d=null,m=null;const _=n.getContextAttributes();let g=null,p=null;const S=[],y=[],x=new Set,b=new Map,M=new Rn;M.layers.enable(1),M.viewport=new It;const T=new Rn;T.layers.enable(2),T.viewport=new It;const L=[M,T],v=new BT;v.layers.enable(1),v.layers.enable(2);let w=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Z){let re=S[Z];return re===void 0&&(re=new Dc,S[Z]=re),re.getTargetRaySpace()},this.getControllerGrip=function(Z){let re=S[Z];return re===void 0&&(re=new Dc,S[Z]=re),re.getGripSpace()},this.getHand=function(Z){let re=S[Z];return re===void 0&&(re=new Dc,S[Z]=re),re.getHandSpace()};function U(Z){const re=y.indexOf(Z.inputSource);if(re===-1)return;const ge=S[re];ge!==void 0&&(ge.update(Z.inputSource,Z.frame,c||o),ge.dispatchEvent({type:Z.type,data:Z.inputSource}))}function I(){s.removeEventListener("select",U),s.removeEventListener("selectstart",U),s.removeEventListener("selectend",U),s.removeEventListener("squeeze",U),s.removeEventListener("squeezestart",U),s.removeEventListener("squeezeend",U),s.removeEventListener("end",I),s.removeEventListener("inputsourceschange",F);for(let Z=0;Z<S.length;Z++){const re=y[Z];re!==null&&(y[Z]=null,S[Z].disconnect(re))}w=null,N=null,e.setRenderTarget(g),d=null,h=null,f=null,s=null,p=null,ce.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Z){r=Z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Z){a=Z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(Z){c=Z},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return f},this.getFrame=function(){return m},this.getSession=function(){return s},this.setSession=async function(Z){if(s=Z,s!==null){if(g=e.getRenderTarget(),s.addEventListener("select",U),s.addEventListener("selectstart",U),s.addEventListener("selectend",U),s.addEventListener("squeeze",U),s.addEventListener("squeezestart",U),s.addEventListener("squeezeend",U),s.addEventListener("end",I),s.addEventListener("inputsourceschange",F),_.xrCompatible!==!0&&await n.makeXRCompatible(),s.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const re={antialias:s.renderState.layers===void 0?_.antialias:!0,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(s,n,re),s.updateRenderState({baseLayer:d}),p=new Ts(d.framebufferWidth,d.framebufferHeight,{format:zn,type:ws,colorSpace:e.outputColorSpace,stencilBuffer:_.stencil})}else{let re=null,ge=null,_e=null;_.depth&&(_e=_.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,re=_.stencil?br:Ms,ge=_.stencil?mr:vs);const A={colorFormat:n.RGBA8,depthFormat:_e,scaleFactor:r};f=new XRWebGLBinding(s,n),h=f.createProjectionLayer(A),s.updateRenderState({layers:[h]}),p=new Ts(h.textureWidth,h.textureHeight,{format:zn,type:ws,depthTexture:new zT(h.textureWidth,h.textureHeight,ge,void 0,void 0,void 0,void 0,void 0,void 0,re),stencilBuffer:_.stencil,colorSpace:e.outputColorSpace,samples:_.antialias?4:0});const fe=e.properties.get(p);fe.__ignoreDepthValues=h.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await s.requestReferenceSpace(a),ce.setContext(s),ce.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode};function F(Z){for(let re=0;re<Z.removed.length;re++){const ge=Z.removed[re],_e=y.indexOf(ge);_e>=0&&(y[_e]=null,S[_e].disconnect(ge))}for(let re=0;re<Z.added.length;re++){const ge=Z.added[re];let _e=y.indexOf(ge);if(_e===-1){for(let fe=0;fe<S.length;fe++)if(fe>=y.length){y.push(ge),_e=fe;break}else if(y[fe]===null){y[fe]=ge,_e=fe;break}if(_e===-1)break}const A=S[_e];A&&A.connect(ge)}}const k=new V,H=new V;function $(Z,re,ge){k.setFromMatrixPosition(re.matrixWorld),H.setFromMatrixPosition(ge.matrixWorld);const _e=k.distanceTo(H),A=re.projectionMatrix.elements,fe=ge.projectionMatrix.elements,Se=A[14]/(A[10]-1),de=A[14]/(A[10]+1),Pe=(A[9]+1)/A[5],P=(A[9]-1)/A[5],D=(A[8]-1)/A[0],z=(fe[8]+1)/fe[0],se=Se*D,ee=Se*z,ie=_e/(-D+z),me=ie*-D;re.matrixWorld.decompose(Z.position,Z.quaternion,Z.scale),Z.translateX(me),Z.translateZ(ie),Z.matrixWorld.compose(Z.position,Z.quaternion,Z.scale),Z.matrixWorldInverse.copy(Z.matrixWorld).invert();const oe=Se+ie,ue=de+ie,le=se-me,R=ee+(_e-me),E=Pe*de/ue*oe,B=P*de/ue*oe;Z.projectionMatrix.makePerspective(le,R,E,B,oe,ue),Z.projectionMatrixInverse.copy(Z.projectionMatrix).invert()}function W(Z,re){re===null?Z.matrixWorld.copy(Z.matrix):Z.matrixWorld.multiplyMatrices(re.matrixWorld,Z.matrix),Z.matrixWorldInverse.copy(Z.matrixWorld).invert()}this.updateCamera=function(Z){if(s===null)return;v.near=T.near=M.near=Z.near,v.far=T.far=M.far=Z.far,(w!==v.near||N!==v.far)&&(s.updateRenderState({depthNear:v.near,depthFar:v.far}),w=v.near,N=v.far);const re=Z.parent,ge=v.cameras;W(v,re);for(let _e=0;_e<ge.length;_e++)W(ge[_e],re);ge.length===2?$(v,M,T):v.projectionMatrix.copy(M.projectionMatrix),ae(Z,v,re)};function ae(Z,re,ge){ge===null?Z.matrix.copy(re.matrixWorld):(Z.matrix.copy(ge.matrixWorld),Z.matrix.invert(),Z.matrix.multiply(re.matrixWorld)),Z.matrix.decompose(Z.position,Z.quaternion,Z.scale),Z.updateMatrixWorld(!0);const _e=Z.children;for(let A=0,fe=_e.length;A<fe;A++)_e[A].updateMatrixWorld(!0);Z.projectionMatrix.copy(re.projectionMatrix),Z.projectionMatrixInverse.copy(re.projectionMatrixInverse),Z.isPerspectiveCamera&&(Z.fov=wo*2*Math.atan(1/Z.projectionMatrix.elements[5]),Z.zoom=1)}this.getCamera=function(){return v},this.getFoveation=function(){if(!(h===null&&d===null))return l},this.setFoveation=function(Z){l=Z,h!==null&&(h.fixedFoveation=Z),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=Z)},this.getPlanes=function(){return x};let te=null;function Ee(Z,re){if(u=re.getViewerPose(c||o),m=re,u!==null){const ge=u.views;d!==null&&(e.setRenderTargetFramebuffer(p,d.framebuffer),e.setRenderTarget(p));let _e=!1;ge.length!==v.cameras.length&&(v.cameras.length=0,_e=!0);for(let A=0;A<ge.length;A++){const fe=ge[A];let Se=null;if(d!==null)Se=d.getViewport(fe);else{const Pe=f.getViewSubImage(h,fe);Se=Pe.viewport,A===0&&(e.setRenderTargetTextures(p,Pe.colorTexture,h.ignoreDepthValues?void 0:Pe.depthStencilTexture),e.setRenderTarget(p))}let de=L[A];de===void 0&&(de=new Rn,de.layers.enable(A),de.viewport=new It,L[A]=de),de.matrix.fromArray(fe.transform.matrix),de.matrix.decompose(de.position,de.quaternion,de.scale),de.projectionMatrix.fromArray(fe.projectionMatrix),de.projectionMatrixInverse.copy(de.projectionMatrix).invert(),de.viewport.set(Se.x,Se.y,Se.width,Se.height),A===0&&(v.matrix.copy(de.matrix),v.matrix.decompose(v.position,v.quaternion,v.scale)),_e===!0&&v.cameras.push(de)}}for(let ge=0;ge<S.length;ge++){const _e=y[ge],A=S[ge];_e!==null&&A!==void 0&&A.update(_e,re,c||o)}if(te&&te(Z,re),re.detectedPlanes){i.dispatchEvent({type:"planesdetected",data:re.detectedPlanes});let ge=null;for(const _e of x)re.detectedPlanes.has(_e)||(ge===null&&(ge=[]),ge.push(_e));if(ge!==null)for(const _e of ge)x.delete(_e),b.delete(_e),i.dispatchEvent({type:"planeremoved",data:_e});for(const _e of re.detectedPlanes)if(!x.has(_e))x.add(_e),b.set(_e,re.lastChangedTime),i.dispatchEvent({type:"planeadded",data:_e});else{const A=b.get(_e);_e.lastChangedTime>A&&(b.set(_e,_e.lastChangedTime),i.dispatchEvent({type:"planechanged",data:_e}))}}m=null}const ce=new Y0;ce.setAnimationLoop(Ee),this.setAnimationLoop=function(Z){te=Z},this.dispose=function(){}}}function $T(t,e){function n(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function i(g,p){p.color.getRGB(g.fogColor.value,X0(t)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function s(g,p,S,y,x){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(g,p):p.isMeshToonMaterial?(r(g,p),f(g,p)):p.isMeshPhongMaterial?(r(g,p),u(g,p)):p.isMeshStandardMaterial?(r(g,p),h(g,p),p.isMeshPhysicalMaterial&&d(g,p,x)):p.isMeshMatcapMaterial?(r(g,p),m(g,p)):p.isMeshDepthMaterial?r(g,p):p.isMeshDistanceMaterial?(r(g,p),_(g,p)):p.isMeshNormalMaterial?r(g,p):p.isLineBasicMaterial?(o(g,p),p.isLineDashedMaterial&&a(g,p)):p.isPointsMaterial?l(g,p,S,y):p.isSpriteMaterial?c(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,n(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,n(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,n(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===un&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,n(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===un&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,n(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,n(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,n(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const S=e.get(p).envMap;if(S&&(g.envMap.value=S,g.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap){g.lightMap.value=p.lightMap;const y=t.useLegacyLights===!0?Math.PI:1;g.lightMapIntensity.value=p.lightMapIntensity*y,n(p.lightMap,g.lightMapTransform)}p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,n(p.aoMap,g.aoMapTransform))}function o(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,n(p.map,g.mapTransform))}function a(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function l(g,p,S,y){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*S,g.scale.value=y*.5,p.map&&(g.map.value=p.map,n(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function c(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,n(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function u(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function f(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function h(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,n(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,n(p.roughnessMap,g.roughnessMapTransform)),e.get(p).envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function d(g,p,S){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,n(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,n(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,n(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,n(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,n(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===un&&g.clearcoatNormalScale.value.negate())),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,n(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,n(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=S.texture,g.transmissionSamplerSize.value.set(S.width,S.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,n(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,n(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,n(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,n(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function _(g,p){const S=e.get(p).light;g.referencePosition.value.setFromMatrixPosition(S.matrixWorld),g.nearDistance.value=S.shadow.camera.near,g.farDistance.value=S.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:s}}function GT(t,e,n,i){let s={},r={},o=[];const a=n.isWebGL2?t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(S,y){const x=y.program;i.uniformBlockBinding(S,x)}function c(S,y){let x=s[S.id];x===void 0&&(m(S),x=u(S),s[S.id]=x,S.addEventListener("dispose",g));const b=y.program;i.updateUBOMapping(S,b);const M=e.render.frame;r[S.id]!==M&&(h(S),r[S.id]=M)}function u(S){const y=f();S.__bindingPointIndex=y;const x=t.createBuffer(),b=S.__size,M=S.usage;return t.bindBuffer(t.UNIFORM_BUFFER,x),t.bufferData(t.UNIFORM_BUFFER,b,M),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,y,x),x}function f(){for(let S=0;S<a;S++)if(o.indexOf(S)===-1)return o.push(S),S;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(S){const y=s[S.id],x=S.uniforms,b=S.__cache;t.bindBuffer(t.UNIFORM_BUFFER,y);for(let M=0,T=x.length;M<T;M++){const L=x[M];if(d(L,M,b)===!0){const v=L.__offset,w=Array.isArray(L.value)?L.value:[L.value];let N=0;for(let U=0;U<w.length;U++){const I=w[U],F=_(I);typeof I=="number"?(L.__data[0]=I,t.bufferSubData(t.UNIFORM_BUFFER,v+N,L.__data)):I.isMatrix3?(L.__data[0]=I.elements[0],L.__data[1]=I.elements[1],L.__data[2]=I.elements[2],L.__data[3]=I.elements[0],L.__data[4]=I.elements[3],L.__data[5]=I.elements[4],L.__data[6]=I.elements[5],L.__data[7]=I.elements[0],L.__data[8]=I.elements[6],L.__data[9]=I.elements[7],L.__data[10]=I.elements[8],L.__data[11]=I.elements[0]):(I.toArray(L.__data,N),N+=F.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,v,L.__data)}}t.bindBuffer(t.UNIFORM_BUFFER,null)}function d(S,y,x){const b=S.value;if(x[y]===void 0){if(typeof b=="number")x[y]=b;else{const M=Array.isArray(b)?b:[b],T=[];for(let L=0;L<M.length;L++)T.push(M[L].clone());x[y]=T}return!0}else if(typeof b=="number"){if(x[y]!==b)return x[y]=b,!0}else{const M=Array.isArray(x[y])?x[y]:[x[y]],T=Array.isArray(b)?b:[b];for(let L=0;L<M.length;L++){const v=M[L];if(v.equals(T[L])===!1)return v.copy(T[L]),!0}}return!1}function m(S){const y=S.uniforms;let x=0;const b=16;let M=0;for(let T=0,L=y.length;T<L;T++){const v=y[T],w={boundary:0,storage:0},N=Array.isArray(v.value)?v.value:[v.value];for(let U=0,I=N.length;U<I;U++){const F=N[U],k=_(F);w.boundary+=k.boundary,w.storage+=k.storage}if(v.__data=new Float32Array(w.storage/Float32Array.BYTES_PER_ELEMENT),v.__offset=x,T>0){M=x%b;const U=b-M;M!==0&&U-w.boundary<0&&(x+=b-M,v.__offset=x)}x+=w.storage}return M=x%b,M>0&&(x+=b-M),S.__size=x,S.__cache={},this}function _(S){const y={boundary:0,storage:0};return typeof S=="number"?(y.boundary=4,y.storage=4):S.isVector2?(y.boundary=8,y.storage=8):S.isVector3||S.isColor?(y.boundary=16,y.storage=12):S.isVector4?(y.boundary=16,y.storage=16):S.isMatrix3?(y.boundary=48,y.storage=48):S.isMatrix4?(y.boundary=64,y.storage=64):S.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",S),y}function g(S){const y=S.target;y.removeEventListener("dispose",g);const x=o.indexOf(y.__bindingPointIndex);o.splice(x,1),t.deleteBuffer(s[y.id]),delete s[y.id],delete r[y.id]}function p(){for(const S in s)t.deleteBuffer(s[S]);o=[],s={},r={}}return{bind:l,update:c,dispose:p}}function WT(){const t=Ja("canvas");return t.style.display="block",t}class t_{constructor(e={}){const{canvas:n=WT(),context:i=null,depth:s=!0,stencil:r=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:f=!1}=e;this.isWebGLRenderer=!0;let h;i!==null?h=i.getContextAttributes().alpha:h=o;let d=null,m=null;const _=[],g=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=He,this.useLegacyLights=!0,this.toneMapping=Ti,this.toneMappingExposure=1;const p=this;let S=!1,y=0,x=0,b=null,M=-1,T=null;const L=new It,v=new It;let w=null,N=n.width,U=n.height,I=1,F=null,k=null;const H=new It(0,0,N,U),$=new It(0,0,N,U);let W=!1;const ae=new mf;let te=!1,Ee=!1,ce=null;const Z=new At,re=new V,ge={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function _e(){return b===null?I:1}let A=i;function fe(C,X){for(let Q=0;Q<C.length;Q++){const G=C[Q],ne=n.getContext(G,X);if(ne!==null)return ne}return null}try{const C={alpha:!0,depth:s,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:f};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${df}`),n.addEventListener("webglcontextlost",Me,!1),n.addEventListener("webglcontextrestored",Fe,!1),n.addEventListener("webglcontextcreationerror",Qe,!1),A===null){const X=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&X.shift(),A=fe(X,C),A===null)throw fe(X)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}A.getShaderPrecisionFormat===void 0&&(A.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Se,de,Pe,P,D,z,se,ee,ie,me,oe,ue,le,R,E,B,j,K,he,ye,be,Y,Te,Re;function De(){Se=new nw(A),de=new ZE(A,Se,e),Se.init(de),Y=new kT(A,Se,de),Pe=new FT(A,Se,de),P=new rw(A),D=new MT,z=new OT(A,Se,Pe,D,de,Y,P),se=new JE(p),ee=new tw(p),ie=new _M(A,de),Te=new jE(A,Se,ie,de),me=new iw(A,ie,P,Te),oe=new cw(A,me,ie,P),he=new lw(A,de,z),B=new KE(D),ue=new bT(p,se,ee,Se,de,Te,B),le=new $T(p,D),R=new ET,E=new PT(Se,de),K=new qE(p,se,ee,Pe,oe,h,l),j=new NT(p,oe,de),Re=new GT(A,P,de,Pe),ye=new YE(A,Se,P,de),be=new sw(A,Se,P,de),P.programs=ue.programs,p.capabilities=de,p.extensions=Se,p.properties=D,p.renderLists=R,p.shadowMap=j,p.state=Pe,p.info=P}De();const Ae=new VT(p,A);this.xr=Ae,this.getContext=function(){return A},this.getContextAttributes=function(){return A.getContextAttributes()},this.forceContextLoss=function(){const C=Se.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Se.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(C){C!==void 0&&(I=C,this.setSize(N,U,!1))},this.getSize=function(C){return C.set(N,U)},this.setSize=function(C,X,Q=!0){if(Ae.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}N=C,U=X,n.width=Math.floor(C*I),n.height=Math.floor(X*I),Q===!0&&(n.style.width=C+"px",n.style.height=X+"px"),this.setViewport(0,0,C,X)},this.getDrawingBufferSize=function(C){return C.set(N*I,U*I).floor()},this.setDrawingBufferSize=function(C,X,Q){N=C,U=X,I=Q,n.width=Math.floor(C*Q),n.height=Math.floor(X*Q),this.setViewport(0,0,C,X)},this.getCurrentViewport=function(C){return C.copy(L)},this.getViewport=function(C){return C.copy(H)},this.setViewport=function(C,X,Q,G){C.isVector4?H.set(C.x,C.y,C.z,C.w):H.set(C,X,Q,G),Pe.viewport(L.copy(H).multiplyScalar(I).floor())},this.getScissor=function(C){return C.copy($)},this.setScissor=function(C,X,Q,G){C.isVector4?$.set(C.x,C.y,C.z,C.w):$.set(C,X,Q,G),Pe.scissor(v.copy($).multiplyScalar(I).floor())},this.getScissorTest=function(){return W},this.setScissorTest=function(C){Pe.setScissorTest(W=C)},this.setOpaqueSort=function(C){F=C},this.setTransparentSort=function(C){k=C},this.getClearColor=function(C){return C.copy(K.getClearColor())},this.setClearColor=function(){K.setClearColor.apply(K,arguments)},this.getClearAlpha=function(){return K.getClearAlpha()},this.setClearAlpha=function(){K.setClearAlpha.apply(K,arguments)},this.clear=function(C=!0,X=!0,Q=!0){let G=0;C&&(G|=A.COLOR_BUFFER_BIT),X&&(G|=A.DEPTH_BUFFER_BIT),Q&&(G|=A.STENCIL_BUFFER_BIT),A.clear(G)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",Me,!1),n.removeEventListener("webglcontextrestored",Fe,!1),n.removeEventListener("webglcontextcreationerror",Qe,!1),R.dispose(),E.dispose(),D.dispose(),se.dispose(),ee.dispose(),oe.dispose(),Te.dispose(),Re.dispose(),ue.dispose(),Ae.dispose(),Ae.removeEventListener("sessionstart",Le),Ae.removeEventListener("sessionend",at),ce&&(ce.dispose(),ce=null),lt.stop()};function Me(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function Fe(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const C=P.autoReset,X=j.enabled,Q=j.autoUpdate,G=j.needsUpdate,ne=j.type;De(),P.autoReset=C,j.enabled=X,j.autoUpdate=Q,j.needsUpdate=G,j.type=ne}function Qe(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function _t(C){const X=C.target;X.removeEventListener("dispose",_t),O(X)}function O(C){J(C),D.remove(C)}function J(C){const X=D.get(C).programs;X!==void 0&&(X.forEach(function(Q){ue.releaseProgram(Q)}),C.isShaderMaterial&&ue.releaseShaderCache(C))}this.renderBufferDirect=function(C,X,Q,G,ne,Ue){X===null&&(X=ge);const Ne=ne.isMesh&&ne.matrixWorld.determinant()<0,Oe=Av(C,X,Q,G,ne);Pe.setMaterial(G,Ne);let ze=Q.index,Xe=1;G.wireframe===!0&&(ze=me.getWireframeAttribute(Q),Xe=2);const qe=Q.drawRange,je=Q.attributes.position;let ot=qe.start*Xe,Gt=(qe.start+qe.count)*Xe;Ue!==null&&(ot=Math.max(ot,Ue.start*Xe),Gt=Math.min(Gt,(Ue.start+Ue.count)*Xe)),ze!==null?(ot=Math.max(ot,0),Gt=Math.min(Gt,ze.count)):je!=null&&(ot=Math.max(ot,0),Gt=Math.min(Gt,je.count));const Un=Gt-ot;if(Un<0||Un===1/0)return;Te.setup(ne,G,Oe,Q,ze);let Ki,bt=ye;if(ze!==null&&(Ki=ie.get(ze),bt=be,bt.setIndex(Ki)),ne.isMesh)G.wireframe===!0?(Pe.setLineWidth(G.wireframeLinewidth*_e()),bt.setMode(A.LINES)):bt.setMode(A.TRIANGLES);else if(ne.isLine){let Ke=G.linewidth;Ke===void 0&&(Ke=1),Pe.setLineWidth(Ke*_e()),ne.isLineSegments?bt.setMode(A.LINES):ne.isLineLoop?bt.setMode(A.LINE_LOOP):bt.setMode(A.LINE_STRIP)}else ne.isPoints?bt.setMode(A.POINTS):ne.isSprite&&bt.setMode(A.TRIANGLES);if(ne.isInstancedMesh)bt.renderInstances(ot,Un,ne.count);else if(Q.isInstancedBufferGeometry){const Ke=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,zl=Math.min(Q.instanceCount,Ke);bt.renderInstances(ot,Un,zl)}else bt.render(ot,Un)},this.compile=function(C,X){function Q(G,ne,Ue){G.transparent===!0&&G.side===Mi&&G.forceSinglePass===!1?(G.side=un,G.needsUpdate=!0,Oo(G,ne,Ue),G.side=Xi,G.needsUpdate=!0,Oo(G,ne,Ue),G.side=Mi):Oo(G,ne,Ue)}m=E.get(C),m.init(),g.push(m),C.traverseVisible(function(G){G.isLight&&G.layers.test(X.layers)&&(m.pushLight(G),G.castShadow&&m.pushShadow(G))}),m.setupLights(p.useLegacyLights),C.traverse(function(G){const ne=G.material;if(ne)if(Array.isArray(ne))for(let Ue=0;Ue<ne.length;Ue++){const Ne=ne[Ue];Q(Ne,C,G)}else Q(ne,C,G)}),g.pop(),m=null};let pe=null;function we(C){pe&&pe(C)}function Le(){lt.stop()}function at(){lt.start()}const lt=new Y0;lt.setAnimationLoop(we),typeof self<"u"&&lt.setContext(self),this.setAnimationLoop=function(C){pe=C,Ae.setAnimationLoop(C),C===null?lt.stop():lt.start()},Ae.addEventListener("sessionstart",Le),Ae.addEventListener("sessionend",at),this.render=function(C,X){if(X!==void 0&&X.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),X.parent===null&&X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),Ae.enabled===!0&&Ae.isPresenting===!0&&(Ae.cameraAutoUpdate===!0&&Ae.updateCamera(X),X=Ae.getCamera()),C.isScene===!0&&C.onBeforeRender(p,C,X,b),m=E.get(C,g.length),m.init(),g.push(m),Z.multiplyMatrices(X.projectionMatrix,X.matrixWorldInverse),ae.setFromProjectionMatrix(Z),Ee=this.localClippingEnabled,te=B.init(this.clippingPlanes,Ee),d=R.get(C,_.length),d.init(),_.push(d),Ht(C,X,0,p.sortObjects),d.finish(),p.sortObjects===!0&&d.sort(F,k),te===!0&&B.beginShadows();const Q=m.state.shadowsArray;if(j.render(Q,C,X),te===!0&&B.endShadows(),this.info.autoReset===!0&&this.info.reset(),K.render(d,C),m.setupLights(p.useLegacyLights),X.isArrayCamera){const G=X.cameras;for(let ne=0,Ue=G.length;ne<Ue;ne++){const Ne=G[ne];Ri(d,C,Ne,Ne.viewport)}}else Ri(d,C,X);b!==null&&(z.updateMultisampleRenderTarget(b),z.updateRenderTargetMipmap(b)),C.isScene===!0&&C.onAfterRender(p,C,X),Te.resetDefaultState(),M=-1,T=null,g.pop(),g.length>0?m=g[g.length-1]:m=null,_.pop(),_.length>0?d=_[_.length-1]:d=null};function Ht(C,X,Q,G){if(C.visible===!1)return;if(C.layers.test(X.layers)){if(C.isGroup)Q=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(X);else if(C.isLight)m.pushLight(C),C.castShadow&&m.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||ae.intersectsSprite(C)){G&&re.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Z);const Ne=oe.update(C),Oe=C.material;Oe.visible&&d.push(C,Ne,Oe,Q,re.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||ae.intersectsObject(C))){C.isSkinnedMesh&&C.skeleton.frame!==P.render.frame&&(C.skeleton.update(),C.skeleton.frame=P.render.frame);const Ne=oe.update(C),Oe=C.material;if(G&&(Ne.boundingSphere===null&&Ne.computeBoundingSphere(),re.copy(Ne.boundingSphere.center).applyMatrix4(C.matrixWorld).applyMatrix4(Z)),Array.isArray(Oe)){const ze=Ne.groups;for(let Xe=0,qe=ze.length;Xe<qe;Xe++){const je=ze[Xe],ot=Oe[je.materialIndex];ot&&ot.visible&&d.push(C,Ne,ot,Q,re.z,je)}}else Oe.visible&&d.push(C,Ne,Oe,Q,re.z,null)}}const Ue=C.children;for(let Ne=0,Oe=Ue.length;Ne<Oe;Ne++)Ht(Ue[Ne],X,Q,G)}function Ri(C,X,Q,G){const ne=C.opaque,Ue=C.transmissive,Ne=C.transparent;m.setupLightsView(Q),te===!0&&B.setGlobalState(p.clippingPlanes,Q),Ue.length>0&&vt(ne,Ue,X,Q),G&&Pe.viewport(L.copy(G)),ne.length>0&&Sn(ne,X,Q),Ue.length>0&&Sn(Ue,X,Q),Ne.length>0&&Sn(Ne,X,Q),Pe.buffers.depth.setTest(!0),Pe.buffers.depth.setMask(!0),Pe.buffers.color.setMask(!0),Pe.setPolygonOffset(!1)}function vt(C,X,Q,G){if(ce===null){const Oe=de.isWebGL2;ce=new Ts(1024,1024,{generateMipmaps:!0,type:Se.has("EXT_color_buffer_half_float")?Eo:ws,minFilter:So,samples:Oe&&a===!0?4:0})}const ne=p.getRenderTarget();p.setRenderTarget(ce),p.clear();const Ue=p.toneMapping;p.toneMapping=Ti,Sn(C,Q,G),z.updateMultisampleRenderTarget(ce),z.updateRenderTargetMipmap(ce);let Ne=!1;for(let Oe=0,ze=X.length;Oe<ze;Oe++){const Xe=X[Oe],qe=Xe.object,je=Xe.geometry,ot=Xe.material,Gt=Xe.group;if(ot.side===Mi&&qe.layers.test(G.layers)){const Un=ot.side;ot.side=un,ot.needsUpdate=!0,Xn(qe,Q,G,je,ot,Gt),ot.side=Un,ot.needsUpdate=!0,Ne=!0}}Ne===!0&&(z.updateMultisampleRenderTarget(ce),z.updateRenderTargetMipmap(ce)),p.setRenderTarget(ne),p.toneMapping=Ue}function Sn(C,X,Q){const G=X.isScene===!0?X.overrideMaterial:null;for(let ne=0,Ue=C.length;ne<Ue;ne++){const Ne=C[ne],Oe=Ne.object,ze=Ne.geometry,Xe=G===null?Ne.material:G,qe=Ne.group;Oe.layers.test(Q.layers)&&Xn(Oe,X,Q,ze,Xe,qe)}}function Xn(C,X,Q,G,ne,Ue){C.onBeforeRender(p,X,Q,G,ne,Ue),C.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),ne.onBeforeRender(p,X,Q,G,C,Ue),ne.transparent===!0&&ne.side===Mi&&ne.forceSinglePass===!1?(ne.side=un,ne.needsUpdate=!0,p.renderBufferDirect(Q,X,G,ne,C,Ue),ne.side=Xi,ne.needsUpdate=!0,p.renderBufferDirect(Q,X,G,ne,C,Ue),ne.side=Mi):p.renderBufferDirect(Q,X,G,ne,C,Ue),C.onAfterRender(p,X,Q,G,ne,Ue)}function Oo(C,X,Q){X.isScene!==!0&&(X=ge);const G=D.get(C),ne=m.state.lights,Ue=m.state.shadowsArray,Ne=ne.state.version,Oe=ue.getParameters(C,ne.state,Ue,X,Q),ze=ue.getProgramCacheKey(Oe);let Xe=G.programs;G.environment=C.isMeshStandardMaterial?X.environment:null,G.fog=X.fog,G.envMap=(C.isMeshStandardMaterial?ee:se).get(C.envMap||G.environment),Xe===void 0&&(C.addEventListener("dispose",_t),Xe=new Map,G.programs=Xe);let qe=Xe.get(ze);if(qe!==void 0){if(G.currentProgram===qe&&G.lightsStateVersion===Ne)return jf(C,Oe),qe}else Oe.uniforms=ue.getUniforms(C),C.onBuild(Q,Oe,p),C.onBeforeCompile(Oe,p),qe=ue.acquireProgram(Oe,ze),Xe.set(ze,qe),G.uniforms=Oe.uniforms;const je=G.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(je.clippingPlanes=B.uniform),jf(C,Oe),G.needsLights=Cv(C),G.lightsStateVersion=Ne,G.needsLights&&(je.ambientLightColor.value=ne.state.ambient,je.lightProbe.value=ne.state.probe,je.directionalLights.value=ne.state.directional,je.directionalLightShadows.value=ne.state.directionalShadow,je.spotLights.value=ne.state.spot,je.spotLightShadows.value=ne.state.spotShadow,je.rectAreaLights.value=ne.state.rectArea,je.ltc_1.value=ne.state.rectAreaLTC1,je.ltc_2.value=ne.state.rectAreaLTC2,je.pointLights.value=ne.state.point,je.pointLightShadows.value=ne.state.pointShadow,je.hemisphereLights.value=ne.state.hemi,je.directionalShadowMap.value=ne.state.directionalShadowMap,je.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,je.spotShadowMap.value=ne.state.spotShadowMap,je.spotLightMatrix.value=ne.state.spotLightMatrix,je.spotLightMap.value=ne.state.spotLightMap,je.pointShadowMap.value=ne.state.pointShadowMap,je.pointShadowMatrix.value=ne.state.pointShadowMatrix);const ot=qe.getUniforms(),Gt=ka.seqWithValue(ot.seq,je);return G.currentProgram=qe,G.uniformsList=Gt,qe}function jf(C,X){const Q=D.get(C);Q.outputColorSpace=X.outputColorSpace,Q.instancing=X.instancing,Q.skinning=X.skinning,Q.morphTargets=X.morphTargets,Q.morphNormals=X.morphNormals,Q.morphColors=X.morphColors,Q.morphTargetsCount=X.morphTargetsCount,Q.numClippingPlanes=X.numClippingPlanes,Q.numIntersection=X.numClipIntersection,Q.vertexAlphas=X.vertexAlphas,Q.vertexTangents=X.vertexTangents,Q.toneMapping=X.toneMapping}function Av(C,X,Q,G,ne){X.isScene!==!0&&(X=ge),z.resetTextureUnits();const Ue=X.fog,Ne=G.isMeshStandardMaterial?X.environment:null,Oe=b===null?p.outputColorSpace:b.isXRRenderTarget===!0?b.texture.colorSpace:si,ze=(G.isMeshStandardMaterial?ee:se).get(G.envMap||Ne),Xe=G.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,qe=!!G.normalMap&&!!Q.attributes.tangent,je=!!Q.morphAttributes.position,ot=!!Q.morphAttributes.normal,Gt=!!Q.morphAttributes.color,Un=G.toneMapped?p.toneMapping:Ti,Ki=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,bt=Ki!==void 0?Ki.length:0,Ke=D.get(G),zl=m.state.lights;if(te===!0&&(Ee===!0||C!==T)){const fn=C===T&&G.id===M;B.setState(G,C,fn)}let Lt=!1;G.version===Ke.__version?(Ke.needsLights&&Ke.lightsStateVersion!==zl.state.version||Ke.outputColorSpace!==Oe||ne.isInstancedMesh&&Ke.instancing===!1||!ne.isInstancedMesh&&Ke.instancing===!0||ne.isSkinnedMesh&&Ke.skinning===!1||!ne.isSkinnedMesh&&Ke.skinning===!0||Ke.envMap!==ze||G.fog===!0&&Ke.fog!==Ue||Ke.numClippingPlanes!==void 0&&(Ke.numClippingPlanes!==B.numPlanes||Ke.numIntersection!==B.numIntersection)||Ke.vertexAlphas!==Xe||Ke.vertexTangents!==qe||Ke.morphTargets!==je||Ke.morphNormals!==ot||Ke.morphColors!==Gt||Ke.toneMapping!==Un||de.isWebGL2===!0&&Ke.morphTargetsCount!==bt)&&(Lt=!0):(Lt=!0,Ke.__version=G.version);let Ji=Ke.currentProgram;Lt===!0&&(Ji=Oo(G,X,ne));let Yf=!1,Ur=!1,Vl=!1;const Wt=Ji.getUniforms(),Qi=Ke.uniforms;if(Pe.useProgram(Ji.program)&&(Yf=!0,Ur=!0,Vl=!0),G.id!==M&&(M=G.id,Ur=!0),Yf||T!==C){if(Wt.setValue(A,"projectionMatrix",C.projectionMatrix),de.logarithmicDepthBuffer&&Wt.setValue(A,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),T!==C&&(T=C,Ur=!0,Vl=!0),G.isShaderMaterial||G.isMeshPhongMaterial||G.isMeshToonMaterial||G.isMeshStandardMaterial||G.envMap){const fn=Wt.map.cameraPosition;fn!==void 0&&fn.setValue(A,re.setFromMatrixPosition(C.matrixWorld))}(G.isMeshPhongMaterial||G.isMeshToonMaterial||G.isMeshLambertMaterial||G.isMeshBasicMaterial||G.isMeshStandardMaterial||G.isShaderMaterial)&&Wt.setValue(A,"isOrthographic",C.isOrthographicCamera===!0),(G.isMeshPhongMaterial||G.isMeshToonMaterial||G.isMeshLambertMaterial||G.isMeshBasicMaterial||G.isMeshStandardMaterial||G.isShaderMaterial||G.isShadowMaterial||ne.isSkinnedMesh)&&Wt.setValue(A,"viewMatrix",C.matrixWorldInverse)}if(ne.isSkinnedMesh){Wt.setOptional(A,ne,"bindMatrix"),Wt.setOptional(A,ne,"bindMatrixInverse");const fn=ne.skeleton;fn&&(de.floatVertexTextures?(fn.boneTexture===null&&fn.computeBoneTexture(),Wt.setValue(A,"boneTexture",fn.boneTexture,z),Wt.setValue(A,"boneTextureSize",fn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const $l=Q.morphAttributes;if(($l.position!==void 0||$l.normal!==void 0||$l.color!==void 0&&de.isWebGL2===!0)&&he.update(ne,Q,Ji),(Ur||Ke.receiveShadow!==ne.receiveShadow)&&(Ke.receiveShadow=ne.receiveShadow,Wt.setValue(A,"receiveShadow",ne.receiveShadow)),G.isMeshGouraudMaterial&&G.envMap!==null&&(Qi.envMap.value=ze,Qi.flipEnvMap.value=ze.isCubeTexture&&ze.isRenderTargetTexture===!1?-1:1),Ur&&(Wt.setValue(A,"toneMappingExposure",p.toneMappingExposure),Ke.needsLights&&Rv(Qi,Vl),Ue&&G.fog===!0&&le.refreshFogUniforms(Qi,Ue),le.refreshMaterialUniforms(Qi,G,I,U,ce),ka.upload(A,Ke.uniformsList,Qi,z)),G.isShaderMaterial&&G.uniformsNeedUpdate===!0&&(ka.upload(A,Ke.uniformsList,Qi,z),G.uniformsNeedUpdate=!1),G.isSpriteMaterial&&Wt.setValue(A,"center",ne.center),Wt.setValue(A,"modelViewMatrix",ne.modelViewMatrix),Wt.setValue(A,"normalMatrix",ne.normalMatrix),Wt.setValue(A,"modelMatrix",ne.matrixWorld),G.isShaderMaterial||G.isRawShaderMaterial){const fn=G.uniformsGroups;for(let Gl=0,Pv=fn.length;Gl<Pv;Gl++)if(de.isWebGL2){const Zf=fn[Gl];Re.update(Zf,Ji),Re.bind(Zf,Ji)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Ji}function Rv(C,X){C.ambientLightColor.needsUpdate=X,C.lightProbe.needsUpdate=X,C.directionalLights.needsUpdate=X,C.directionalLightShadows.needsUpdate=X,C.pointLights.needsUpdate=X,C.pointLightShadows.needsUpdate=X,C.spotLights.needsUpdate=X,C.spotLightShadows.needsUpdate=X,C.rectAreaLights.needsUpdate=X,C.hemisphereLights.needsUpdate=X}function Cv(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(C,X,Q){D.get(C.texture).__webglTexture=X,D.get(C.depthTexture).__webglTexture=Q;const G=D.get(C);G.__hasExternalTextures=!0,G.__hasExternalTextures&&(G.__autoAllocateDepthBuffer=Q===void 0,G.__autoAllocateDepthBuffer||Se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),G.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,X){const Q=D.get(C);Q.__webglFramebuffer=X,Q.__useDefaultFramebuffer=X===void 0},this.setRenderTarget=function(C,X=0,Q=0){b=C,y=X,x=Q;let G=!0,ne=null,Ue=!1,Ne=!1;if(C){const ze=D.get(C);ze.__useDefaultFramebuffer!==void 0?(Pe.bindFramebuffer(A.FRAMEBUFFER,null),G=!1):ze.__webglFramebuffer===void 0?z.setupRenderTarget(C):ze.__hasExternalTextures&&z.rebindTextures(C,D.get(C.texture).__webglTexture,D.get(C.depthTexture).__webglTexture);const Xe=C.texture;(Xe.isData3DTexture||Xe.isDataArrayTexture||Xe.isCompressedArrayTexture)&&(Ne=!0);const qe=D.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(ne=qe[X],Ue=!0):de.isWebGL2&&C.samples>0&&z.useMultisampledRTT(C)===!1?ne=D.get(C).__webglMultisampledFramebuffer:ne=qe,L.copy(C.viewport),v.copy(C.scissor),w=C.scissorTest}else L.copy(H).multiplyScalar(I).floor(),v.copy($).multiplyScalar(I).floor(),w=W;if(Pe.bindFramebuffer(A.FRAMEBUFFER,ne)&&de.drawBuffers&&G&&Pe.drawBuffers(C,ne),Pe.viewport(L),Pe.scissor(v),Pe.setScissorTest(w),Ue){const ze=D.get(C.texture);A.framebufferTexture2D(A.FRAMEBUFFER,A.COLOR_ATTACHMENT0,A.TEXTURE_CUBE_MAP_POSITIVE_X+X,ze.__webglTexture,Q)}else if(Ne){const ze=D.get(C.texture),Xe=X||0;A.framebufferTextureLayer(A.FRAMEBUFFER,A.COLOR_ATTACHMENT0,ze.__webglTexture,Q||0,Xe)}M=-1},this.readRenderTargetPixels=function(C,X,Q,G,ne,Ue,Ne){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Oe=D.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ne!==void 0&&(Oe=Oe[Ne]),Oe){Pe.bindFramebuffer(A.FRAMEBUFFER,Oe);try{const ze=C.texture,Xe=ze.format,qe=ze.type;if(Xe!==zn&&Y.convert(Xe)!==A.getParameter(A.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const je=qe===Eo&&(Se.has("EXT_color_buffer_half_float")||de.isWebGL2&&Se.has("EXT_color_buffer_float"));if(qe!==ws&&Y.convert(qe)!==A.getParameter(A.IMPLEMENTATION_COLOR_READ_TYPE)&&!(qe===xs&&(de.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!je){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}X>=0&&X<=C.width-G&&Q>=0&&Q<=C.height-ne&&A.readPixels(X,Q,G,ne,Y.convert(Xe),Y.convert(qe),Ue)}finally{const ze=b!==null?D.get(b).__webglFramebuffer:null;Pe.bindFramebuffer(A.FRAMEBUFFER,ze)}}},this.copyFramebufferToTexture=function(C,X,Q=0){const G=Math.pow(2,-Q),ne=Math.floor(X.image.width*G),Ue=Math.floor(X.image.height*G);z.setTexture2D(X,0),A.copyTexSubImage2D(A.TEXTURE_2D,Q,0,0,C.x,C.y,ne,Ue),Pe.unbindTexture()},this.copyTextureToTexture=function(C,X,Q,G=0){const ne=X.image.width,Ue=X.image.height,Ne=Y.convert(Q.format),Oe=Y.convert(Q.type);z.setTexture2D(Q,0),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,Q.flipY),A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Q.premultiplyAlpha),A.pixelStorei(A.UNPACK_ALIGNMENT,Q.unpackAlignment),X.isDataTexture?A.texSubImage2D(A.TEXTURE_2D,G,C.x,C.y,ne,Ue,Ne,Oe,X.image.data):X.isCompressedTexture?A.compressedTexSubImage2D(A.TEXTURE_2D,G,C.x,C.y,X.mipmaps[0].width,X.mipmaps[0].height,Ne,X.mipmaps[0].data):A.texSubImage2D(A.TEXTURE_2D,G,C.x,C.y,Ne,Oe,X.image),G===0&&Q.generateMipmaps&&A.generateMipmap(A.TEXTURE_2D),Pe.unbindTexture()},this.copyTextureToTexture3D=function(C,X,Q,G,ne=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ue=C.max.x-C.min.x+1,Ne=C.max.y-C.min.y+1,Oe=C.max.z-C.min.z+1,ze=Y.convert(G.format),Xe=Y.convert(G.type);let qe;if(G.isData3DTexture)z.setTexture3D(G,0),qe=A.TEXTURE_3D;else if(G.isDataArrayTexture)z.setTexture2DArray(G,0),qe=A.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,G.flipY),A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL,G.premultiplyAlpha),A.pixelStorei(A.UNPACK_ALIGNMENT,G.unpackAlignment);const je=A.getParameter(A.UNPACK_ROW_LENGTH),ot=A.getParameter(A.UNPACK_IMAGE_HEIGHT),Gt=A.getParameter(A.UNPACK_SKIP_PIXELS),Un=A.getParameter(A.UNPACK_SKIP_ROWS),Ki=A.getParameter(A.UNPACK_SKIP_IMAGES),bt=Q.isCompressedTexture?Q.mipmaps[0]:Q.image;A.pixelStorei(A.UNPACK_ROW_LENGTH,bt.width),A.pixelStorei(A.UNPACK_IMAGE_HEIGHT,bt.height),A.pixelStorei(A.UNPACK_SKIP_PIXELS,C.min.x),A.pixelStorei(A.UNPACK_SKIP_ROWS,C.min.y),A.pixelStorei(A.UNPACK_SKIP_IMAGES,C.min.z),Q.isDataTexture||Q.isData3DTexture?A.texSubImage3D(qe,ne,X.x,X.y,X.z,Ue,Ne,Oe,ze,Xe,bt.data):Q.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),A.compressedTexSubImage3D(qe,ne,X.x,X.y,X.z,Ue,Ne,Oe,ze,bt.data)):A.texSubImage3D(qe,ne,X.x,X.y,X.z,Ue,Ne,Oe,ze,Xe,bt),A.pixelStorei(A.UNPACK_ROW_LENGTH,je),A.pixelStorei(A.UNPACK_IMAGE_HEIGHT,ot),A.pixelStorei(A.UNPACK_SKIP_PIXELS,Gt),A.pixelStorei(A.UNPACK_SKIP_ROWS,Un),A.pixelStorei(A.UNPACK_SKIP_IMAGES,Ki),ne===0&&G.generateMipmaps&&A.generateMipmap(qe),Pe.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?z.setTextureCube(C,0):C.isData3DTexture?z.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?z.setTexture2DArray(C,0):z.setTexture2D(C,0),Pe.unbindTexture()},this.resetState=function(){y=0,x=0,b=null,Pe.reset(),Te.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===He?Ss:D0}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Ss?He:si}}class XT extends t_{}XT.prototype.isWebGL1Renderer=!0;class qT extends Nt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class Ou extends Rr{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new st(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Kd=new V,Jd=new V,Qd=new At,Uc=new H0,ua=new yl;class jT extends Nt{constructor(e=new Wn,n=new Ou){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[0];for(let s=1,r=n.count;s<r;s++)Kd.fromBufferAttribute(n,s-1),Jd.fromBufferAttribute(n,s),i[s]=i[s-1],i[s]+=Kd.distanceTo(Jd);e.setAttribute("lineDistance",new Cn(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,n){const i=this.geometry,s=this.matrixWorld,r=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),ua.copy(i.boundingSphere),ua.applyMatrix4(s),ua.radius+=r,e.ray.intersectsSphere(ua)===!1)return;Qd.copy(s).invert(),Uc.copy(e.ray).applyMatrix4(Qd);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new V,u=new V,f=new V,h=new V,d=this.isLineSegments?2:1,m=i.index,g=i.attributes.position;if(m!==null){const p=Math.max(0,o.start),S=Math.min(m.count,o.start+o.count);for(let y=p,x=S-1;y<x;y+=d){const b=m.getX(y),M=m.getX(y+1);if(c.fromBufferAttribute(g,b),u.fromBufferAttribute(g,M),Uc.distanceSqToSegment(c,u,h,f)>l)continue;h.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(h);L<e.near||L>e.far||n.push({distance:L,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const p=Math.max(0,o.start),S=Math.min(g.count,o.start+o.count);for(let y=p,x=S-1;y<x;y+=d){if(c.fromBufferAttribute(g,y),u.fromBufferAttribute(g,y+1),Uc.distanceSqToSegment(c,u,h,f)>l)continue;h.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(h);M<e.near||M>e.far||n.push({distance:M,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}const ep=new V,tp=new V;class np extends jT{constructor(e,n){super(e,n),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[];for(let s=0,r=n.count;s<r;s+=2)ep.fromBufferAttribute(n,s),tp.fromBufferAttribute(n,s+1),i[s]=s===0?0:i[s-1],i[s+1]=i[s]+ep.distanceTo(tp);e.setAttribute("lineDistance",new Cn(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}const fa=new V,ha=new V,Ic=new V,da=new An;class ip extends Wn{constructor(e=null,n=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:n},e!==null){const s=Math.pow(10,4),r=Math.cos(gr*n),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],f=new Array(3),h={},d=[];for(let m=0;m<l;m+=3){o?(c[0]=o.getX(m),c[1]=o.getX(m+1),c[2]=o.getX(m+2)):(c[0]=m,c[1]=m+1,c[2]=m+2);const{a:_,b:g,c:p}=da;if(_.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),p.fromBufferAttribute(a,c[2]),da.getNormal(Ic),f[0]=`${Math.round(_.x*s)},${Math.round(_.y*s)},${Math.round(_.z*s)}`,f[1]=`${Math.round(g.x*s)},${Math.round(g.y*s)},${Math.round(g.z*s)}`,f[2]=`${Math.round(p.x*s)},${Math.round(p.y*s)},${Math.round(p.z*s)}`,!(f[0]===f[1]||f[1]===f[2]||f[2]===f[0]))for(let S=0;S<3;S++){const y=(S+1)%3,x=f[S],b=f[y],M=da[u[S]],T=da[u[y]],L=`${x}_${b}`,v=`${b}_${x}`;v in h&&h[v]?(Ic.dot(h[v].normal)<=r&&(d.push(M.x,M.y,M.z),d.push(T.x,T.y,T.z)),h[v]=null):L in h||(h[L]={index0:c[S],index1:c[y],normal:Ic.clone()})}}for(const m in h)if(h[m]){const{index0:_,index1:g}=h[m];fa.fromBufferAttribute(a,_),ha.fromBufferAttribute(a,g),d.push(fa.x,fa.y,fa.z),d.push(ha.x,ha.y,ha.z)}this.setAttribute("position",new Cn(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class YT extends Rr{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new st(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=U0,this.normalScale=new Ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}const sp={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class ZT{constructor(e,n,i){const s=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.itemStart=function(u){a++,r===!1&&s.onStart!==void 0&&s.onStart(u,o,a),r=!0},this.itemEnd=function(u){o++,s.onProgress!==void 0&&s.onProgress(u,o,a),o===a&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(u){s.onError!==void 0&&s.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,f){return c.push(u,f),this},this.removeHandler=function(u){const f=c.indexOf(u);return f!==-1&&c.splice(f,2),this},this.getHandler=function(u){for(let f=0,h=c.length;f<h;f+=2){const d=c[f],m=c[f+1];if(d.global&&(d.lastIndex=0),d.test(u))return m}return null}}}const KT=new ZT;class n_{constructor(e){this.manager=e!==void 0?e:KT,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(s,r){i.load(e,s,n,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const di={};class JT extends Error{constructor(e,n){super(e),this.response=n}}class QT extends n_{constructor(e){super(e)}load(e,n,i,s){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=sp.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{n&&n(r),this.manager.itemEnd(e)},0),r;if(di[e]!==void 0){di[e].push({onLoad:n,onProgress:i,onError:s});return}di[e]=[],di[e].push({onLoad:n,onProgress:i,onError:s});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=di[e],f=c.body.getReader(),h=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=h?parseInt(h):0,m=d!==0;let _=0;const g=new ReadableStream({start(p){S();function S(){f.read().then(({done:y,value:x})=>{if(y)p.close();else{_+=x.byteLength;const b=new ProgressEvent("progress",{lengthComputable:m,loaded:_,total:d});for(let M=0,T=u.length;M<T;M++){const L=u[M];L.onProgress&&L.onProgress(b)}p.enqueue(x),S()}})}}});return new Response(g)}else throw new JT(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a===void 0)return c.text();{const f=/charset="?([^;"\s]*)"?/i.exec(a),h=f&&f[1]?f[1].toLowerCase():void 0,d=new TextDecoder(h);return c.arrayBuffer().then(m=>d.decode(m))}}}).then(c=>{sp.add(e,c);const u=di[e];delete di[e];for(let f=0,h=u.length;f<h;f++){const d=u[f];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=di[e];if(u===void 0)throw this.manager.itemError(e),c;delete di[e];for(let f=0,h=u.length;f<h;f++){const d=u[f];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class vf extends Nt{constructor(e,n=1){super(),this.isLight=!0,this.type="Light",this.color=new st(e),this.intensity=n}dispose(){}copy(e,n){return super.copy(e,n),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}}class eA extends vf{constructor(e,n,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new st(n)}copy(e,n){return super.copy(e,n),this.groundColor.copy(e.groundColor),this}}const Nc=new At,rp=new V,op=new V;class tA{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ge(512,512),this.map=null,this.mapPass=null,this.matrix=new At,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new mf,this._frameExtents=new Ge(1,1),this._viewportCount=1,this._viewports=[new It(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;rp.setFromMatrixPosition(e.matrixWorld),n.position.copy(rp),op.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(op),n.updateMatrixWorld(),Nc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Nc),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Nc)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class nA extends tA{constructor(){super(new Z0(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ap extends vf{constructor(e,n){super(e,n),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.target=new Nt,this.shadow=new nA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class iA extends vf{constructor(e,n){super(e,n),this.isAmbientLight=!0,this.type="AmbientLight"}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:df}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=df);class lp extends n_{constructor(e){super(e)}load(e,n,i,s){const r=this,o=new QT(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{n(r.parse(a))}catch(l){s?s(l):console.error(l),r.manager.itemError(e)}},i,s)}parse(e){function n(c){const u=new DataView(c),f=32/8*3+32/8*3*3+16/8,h=u.getUint32(80,!0);if(80+32/8+h*f===u.byteLength)return!0;const m=[115,111,108,105,100];for(let _=0;_<5;_++)if(i(m,u,_))return!1;return!0}function i(c,u,f){for(let h=0,d=c.length;h<d;h++)if(c[h]!==u.getUint8(f+h))return!1;return!0}function s(c){const u=new DataView(c),f=u.getUint32(80,!0);let h,d,m,_=!1,g,p,S,y,x;for(let w=0;w<70;w++)u.getUint32(w,!1)==1129270351&&u.getUint8(w+4)==82&&u.getUint8(w+5)==61&&(_=!0,g=new Float32Array(f*3*3),p=u.getUint8(w+6)/255,S=u.getUint8(w+7)/255,y=u.getUint8(w+8)/255,x=u.getUint8(w+9)/255);const b=84,M=12*4+2,T=new Wn,L=new Float32Array(f*3*3),v=new Float32Array(f*3*3);for(let w=0;w<f;w++){const N=b+w*M,U=u.getFloat32(N,!0),I=u.getFloat32(N+4,!0),F=u.getFloat32(N+8,!0);if(_){const k=u.getUint16(N+48,!0);k&32768?(h=p,d=S,m=y):(h=(k&31)/31,d=(k>>5&31)/31,m=(k>>10&31)/31)}for(let k=1;k<=3;k++){const H=N+k*12,$=w*3*3+(k-1)*3;L[$]=u.getFloat32(H,!0),L[$+1]=u.getFloat32(H+4,!0),L[$+2]=u.getFloat32(H+8,!0),v[$]=U,v[$+1]=I,v[$+2]=F,_&&(g[$]=h,g[$+1]=d,g[$+2]=m)}}return T.setAttribute("position",new Mn(L,3)),T.setAttribute("normal",new Mn(v,3)),_&&(T.setAttribute("color",new Mn(g,3)),T.hasColors=!0,T.alpha=x),T}function r(c){const u=new Wn,f=/solid([\s\S]*?)endsolid/g,h=/facet([\s\S]*?)endfacet/g;let d=0;const m=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,_=new RegExp("vertex"+m+m+m,"g"),g=new RegExp("normal"+m+m+m,"g"),p=[],S=[],y=new V;let x,b=0,M=0,T=0;for(;(x=f.exec(c))!==null;){M=T;const L=x[0];for(;(x=h.exec(L))!==null;){let N=0,U=0;const I=x[0];for(;(x=g.exec(I))!==null;)y.x=parseFloat(x[1]),y.y=parseFloat(x[2]),y.z=parseFloat(x[3]),U++;for(;(x=_.exec(I))!==null;)p.push(parseFloat(x[1]),parseFloat(x[2]),parseFloat(x[3])),S.push(y.x,y.y,y.z),N++,T++;U!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+d),N!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+d),d++}const v=M,w=T-M;u.addGroup(v,w,b),b++}return u.setAttribute("position",new Cn(p,3)),u.setAttribute("normal",new Cn(S,3)),u}function o(c){return typeof c!="string"?new TextDecoder().decode(c):c}function a(c){if(typeof c=="string"){const u=new Uint8Array(c.length);for(let f=0;f<c.length;f++)u[f]=c.charCodeAt(f)&255;return u.buffer||u}else return c}const l=a(e);return n(l)?s(l):r(o(e))}}const Fc={type:"change"},Oc={type:"start"},kc={type:"end"};class sA extends Ps{constructor(e,n){super();const i=this,s={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=e,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:sc.ROTATE,MIDDLE:sc.DOLLY,RIGHT:sc.PAN},this.target=new V;const r=1e-6,o=new V;let a=1,l=s.NONE,c=s.NONE,u=0,f=0,h=0;const d=new V,m=new Ge,_=new Ge,g=new V,p=new Ge,S=new Ge,y=new Ge,x=new Ge,b=[],M={};this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.zoom0=this.object.zoom,this.handleResize=function(){const A=i.domElement.getBoundingClientRect(),fe=i.domElement.ownerDocument.documentElement;i.screen.left=A.left+window.pageXOffset-fe.clientLeft,i.screen.top=A.top+window.pageYOffset-fe.clientTop,i.screen.width=A.width,i.screen.height=A.height};const T=function(){const A=new Ge;return function(Se,de){return A.set((Se-i.screen.left)/i.screen.width,(de-i.screen.top)/i.screen.height),A}}(),L=function(){const A=new Ge;return function(Se,de){return A.set((Se-i.screen.width*.5-i.screen.left)/(i.screen.width*.5),(i.screen.height+2*(i.screen.top-de))/i.screen.width),A}}();this.rotateCamera=function(){const A=new V,fe=new Ar,Se=new V,de=new V,Pe=new V,P=new V;return function(){P.set(_.x-m.x,_.y-m.y,0);let z=P.length();z?(d.copy(i.object.position).sub(i.target),Se.copy(d).normalize(),de.copy(i.object.up).normalize(),Pe.crossVectors(de,Se).normalize(),de.setLength(_.y-m.y),Pe.setLength(_.x-m.x),P.copy(de.add(Pe)),A.crossVectors(P,d).normalize(),z*=i.rotateSpeed,fe.setFromAxisAngle(A,z),d.applyQuaternion(fe),i.object.up.applyQuaternion(fe),g.copy(A),h=z):!i.staticMoving&&h&&(h*=Math.sqrt(1-i.dynamicDampingFactor),d.copy(i.object.position).sub(i.target),fe.setFromAxisAngle(g,h),d.applyQuaternion(fe),i.object.up.applyQuaternion(fe)),m.copy(_)}}(),this.zoomCamera=function(){let A;l===s.TOUCH_ZOOM_PAN?(A=u/f,u=f,i.object.isPerspectiveCamera?d.multiplyScalar(A):i.object.isOrthographicCamera?(i.object.zoom=dd.clamp(i.object.zoom/A,i.minZoom,i.maxZoom),a!==i.object.zoom&&i.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(A=1+(S.y-p.y)*i.zoomSpeed,A!==1&&A>0&&(i.object.isPerspectiveCamera?d.multiplyScalar(A):i.object.isOrthographicCamera?(i.object.zoom=dd.clamp(i.object.zoom/A,i.minZoom,i.maxZoom),a!==i.object.zoom&&i.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),i.staticMoving?p.copy(S):p.y+=(S.y-p.y)*this.dynamicDampingFactor)},this.panCamera=function(){const A=new Ge,fe=new V,Se=new V;return function(){if(A.copy(x).sub(y),A.lengthSq()){if(i.object.isOrthographicCamera){const Pe=(i.object.right-i.object.left)/i.object.zoom/i.domElement.clientWidth,P=(i.object.top-i.object.bottom)/i.object.zoom/i.domElement.clientWidth;A.x*=Pe,A.y*=P}A.multiplyScalar(d.length()*i.panSpeed),Se.copy(d).cross(i.object.up).setLength(A.x),Se.add(fe.copy(i.object.up).setLength(A.y)),i.object.position.add(Se),i.target.add(Se),i.staticMoving?y.copy(x):y.add(A.subVectors(x,y).multiplyScalar(i.dynamicDampingFactor))}}}(),this.checkDistances=function(){(!i.noZoom||!i.noPan)&&(d.lengthSq()>i.maxDistance*i.maxDistance&&(i.object.position.addVectors(i.target,d.setLength(i.maxDistance)),p.copy(S)),d.lengthSq()<i.minDistance*i.minDistance&&(i.object.position.addVectors(i.target,d.setLength(i.minDistance)),p.copy(S)))},this.update=function(){d.subVectors(i.object.position,i.target),i.noRotate||i.rotateCamera(),i.noZoom||i.zoomCamera(),i.noPan||i.panCamera(),i.object.position.addVectors(i.target,d),i.object.isPerspectiveCamera?(i.checkDistances(),i.object.lookAt(i.target),o.distanceToSquared(i.object.position)>r&&(i.dispatchEvent(Fc),o.copy(i.object.position))):i.object.isOrthographicCamera?(i.object.lookAt(i.target),(o.distanceToSquared(i.object.position)>r||a!==i.object.zoom)&&(i.dispatchEvent(Fc),o.copy(i.object.position),a=i.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")},this.reset=function(){l=s.NONE,c=s.NONE,i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.up.copy(i.up0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),d.subVectors(i.object.position,i.target),i.object.lookAt(i.target),i.dispatchEvent(Fc),o.copy(i.object.position),a=i.object.zoom};function v(A){i.enabled!==!1&&(b.length===0&&(i.domElement.setPointerCapture(A.pointerId),i.domElement.addEventListener("pointermove",w),i.domElement.addEventListener("pointerup",N)),Z(A),A.pointerType==="touch"?ae(A):k(A))}function w(A){i.enabled!==!1&&(A.pointerType==="touch"?te(A):H(A))}function N(A){i.enabled!==!1&&(A.pointerType==="touch"?Ee(A):$(),re(A),b.length===0&&(i.domElement.releasePointerCapture(A.pointerId),i.domElement.removeEventListener("pointermove",w),i.domElement.removeEventListener("pointerup",N)))}function U(A){re(A)}function I(A){i.enabled!==!1&&(window.removeEventListener("keydown",I),c===s.NONE&&(A.code===i.keys[s.ROTATE]&&!i.noRotate?c=s.ROTATE:A.code===i.keys[s.ZOOM]&&!i.noZoom?c=s.ZOOM:A.code===i.keys[s.PAN]&&!i.noPan&&(c=s.PAN)))}function F(){i.enabled!==!1&&(c=s.NONE,window.addEventListener("keydown",I))}function k(A){if(l===s.NONE)switch(A.button){case i.mouseButtons.LEFT:l=s.ROTATE;break;case i.mouseButtons.MIDDLE:l=s.ZOOM;break;case i.mouseButtons.RIGHT:l=s.PAN;break}const fe=c!==s.NONE?c:l;fe===s.ROTATE&&!i.noRotate?(_.copy(L(A.pageX,A.pageY)),m.copy(_)):fe===s.ZOOM&&!i.noZoom?(p.copy(T(A.pageX,A.pageY)),S.copy(p)):fe===s.PAN&&!i.noPan&&(y.copy(T(A.pageX,A.pageY)),x.copy(y)),i.dispatchEvent(Oc)}function H(A){const fe=c!==s.NONE?c:l;fe===s.ROTATE&&!i.noRotate?(m.copy(_),_.copy(L(A.pageX,A.pageY))):fe===s.ZOOM&&!i.noZoom?S.copy(T(A.pageX,A.pageY)):fe===s.PAN&&!i.noPan&&x.copy(T(A.pageX,A.pageY))}function $(){l=s.NONE,i.dispatchEvent(kc)}function W(A){if(i.enabled!==!1&&i.noZoom!==!0){switch(A.preventDefault(),A.deltaMode){case 2:p.y-=A.deltaY*.025;break;case 1:p.y-=A.deltaY*.01;break;default:p.y-=A.deltaY*25e-5;break}i.dispatchEvent(Oc),i.dispatchEvent(kc)}}function ae(A){switch(ge(A),b.length){case 1:l=s.TOUCH_ROTATE,_.copy(L(b[0].pageX,b[0].pageY)),m.copy(_);break;default:l=s.TOUCH_ZOOM_PAN;const fe=b[0].pageX-b[1].pageX,Se=b[0].pageY-b[1].pageY;f=u=Math.sqrt(fe*fe+Se*Se);const de=(b[0].pageX+b[1].pageX)/2,Pe=(b[0].pageY+b[1].pageY)/2;y.copy(T(de,Pe)),x.copy(y);break}i.dispatchEvent(Oc)}function te(A){switch(ge(A),b.length){case 1:m.copy(_),_.copy(L(A.pageX,A.pageY));break;default:const fe=_e(A),Se=A.pageX-fe.x,de=A.pageY-fe.y;f=Math.sqrt(Se*Se+de*de);const Pe=(A.pageX+fe.x)/2,P=(A.pageY+fe.y)/2;x.copy(T(Pe,P));break}}function Ee(A){switch(b.length){case 0:l=s.NONE;break;case 1:l=s.TOUCH_ROTATE,_.copy(L(A.pageX,A.pageY)),m.copy(_);break;case 2:l=s.TOUCH_ZOOM_PAN;for(let fe=0;fe<b.length;fe++)if(b[fe].pointerId!==A.pointerId){const Se=M[b[fe].pointerId];_.copy(L(Se.x,Se.y)),m.copy(_);break}break}i.dispatchEvent(kc)}function ce(A){i.enabled!==!1&&A.preventDefault()}function Z(A){b.push(A)}function re(A){delete M[A.pointerId];for(let fe=0;fe<b.length;fe++)if(b[fe].pointerId==A.pointerId){b.splice(fe,1);return}}function ge(A){let fe=M[A.pointerId];fe===void 0&&(fe=new Ge,M[A.pointerId]=fe),fe.set(A.pageX,A.pageY)}function _e(A){const fe=A.pointerId===b[0].pointerId?b[1]:b[0];return M[fe.pointerId]}this.dispose=function(){i.domElement.removeEventListener("contextmenu",ce),i.domElement.removeEventListener("pointerdown",v),i.domElement.removeEventListener("pointercancel",U),i.domElement.removeEventListener("wheel",W),i.domElement.removeEventListener("pointermove",w),i.domElement.removeEventListener("pointerup",N),window.removeEventListener("keydown",I),window.removeEventListener("keyup",F)},this.domElement.addEventListener("contextmenu",ce),this.domElement.addEventListener("pointerdown",v),this.domElement.addEventListener("pointercancel",U),this.domElement.addEventListener("wheel",W,{passive:!1}),window.addEventListener("keydown",I),window.addEventListener("keyup",F),this.handleResize(),this.update()}}function rA(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}const oA=1e-5,aA=1e-13,lA=Math.PI*2;var Ye={EPS:oA,NEPS:aA,TAU:lA};const cA=(t,e)=>(t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t);var uA=cA;const fA=(t,e,n)=>(t[0]=e[0]+n[0],t[1]=e[1]+n[1],t);var hA=fA;const dA=t=>Math.atan2(t[1],t[0]);var xf=dA,pA=xf;const mA=xf,gA=t=>mA(t)*57.29577951308232;var _A=gA;const vA=()=>[0,0];var Sl=vA;const xA=Sl,yA=t=>{const e=xA();return e[0]=t[0],e[1]=t[1],e};var bA=yA;const MA=(t,e)=>(t[0]=e[0],t[1]=e[1],t);var SA=MA;const EA=(t,e,n)=>(t[0]=0,t[1]=0,t[2]=e[0]*n[1]-e[1]*n[0],t);var wA=EA;const TA=(t,e)=>{const n=e[0]-t[0],i=e[1]-t[1];return Math.sqrt(n*n+i*i)};var AA=TA;const RA=(t,e,n)=>(t[0]=e[0]/n[0],t[1]=e[1]/n[1],t);var CA=RA;const PA=(t,e)=>t[0]*e[0]+t[1]*e[1];var LA=PA;const DA=(t,e)=>t[0]===e[0]&&t[1]===e[1];var UA=DA;const{NEPS:IA}=Ye,i_=t=>Math.abs(t)<IA?0:t,NA=t=>i_(Math.sin(t)),FA=t=>i_(Math.cos(t));var Bt={sin:NA,cos:FA};const{sin:OA,cos:kA}=Bt,BA=(t,e)=>(t[0]=kA(e),t[1]=OA(e),t);var s_=BA;const HA=s_,zA=(t,e)=>HA(t,e*.017453292519943295);var VA=zA;const $A=(t,e)=>(t[0]=e,t[1]=e,t);var GA=$A;const WA=Sl,XA=(t,e)=>{const n=WA();return n[0]=t,n[1]=e,n};var qA=XA;const jA=t=>Math.sqrt(t[0]*t[0]+t[1]*t[1]);var YA=jA;const ZA=(t,e,n,i)=>{const s=e[0],r=e[1];return t[0]=s+i*(n[0]-s),t[1]=r+i*(n[1]-r),t};var KA=ZA;const JA=(t,e,n)=>(t[0]=Math.max(e[0],n[0]),t[1]=Math.max(e[1],n[1]),t);var QA=JA;const e2=(t,e,n)=>(t[0]=Math.min(e[0],n[0]),t[1]=Math.min(e[1],n[1]),t);var t2=e2;const n2=(t,e,n)=>(t[0]=e[0]*n[0],t[1]=e[1]*n[1],t);var i2=n2;const s2=(t,e)=>(t[0]=-e[0],t[1]=-e[1],t);var r2=s2;const o2=(t,e,n,i)=>{const s=e[0]-n[0],r=e[1]-n[1],o=Math.cos(i),a=Math.sin(i);return t[0]=s*o-r*a+n[0],t[1]=s*a+r*o+n[1],t};var r_=o2;const{TAU:a2}=Ye,l2=Sl,c2=r_,u2=(t,e)=>c2(t,e,l2(),a2/4);var f2=u2;const h2=(t,e)=>{const n=e[0],i=e[1];let s=n*n+i*i;return s>0&&(s=1/Math.sqrt(s)),t[0]=n*s,t[1]=i*s,t};var d2=h2;const p2=(t,e,n)=>(t[0]=e[0]*n,t[1]=e[1]*n,t);var m2=p2;const g2=(t,e,n)=>(t[0]=Math.round(e[0]/n)*n+0,t[1]=Math.round(e[1]/n)*n+0,t);var _2=g2;const v2=(t,e)=>{const n=e[0]-t[0],i=e[1]-t[1];return n*n+i*i};var x2=v2;const y2=t=>{const e=t[0],n=t[1];return e*e+n*n};var b2=y2;const M2=(t,e,n)=>(t[0]=e[0]-n[0],t[1]=e[1]-n[1],t);var S2=M2;const E2=t=>`[${t[0].toFixed(7)}, ${t[1].toFixed(7)}]`;var w2=E2;const T2=(t,e,n)=>{const i=e[0],s=e[1];return t[0]=n[0]*i+n[4]*s+n[12],t[1]=n[1]*i+n[5]*s+n[13],t};var A2=T2,We={abs:uA,add:hA,angle:pA,angleDegrees:_A,angleRadians:xf,clone:bA,copy:SA,create:Sl,cross:wA,distance:AA,divide:CA,dot:LA,equals:UA,fromAngleDegrees:VA,fromAngleRadians:s_,fromScalar:GA,fromValues:qA,length:YA,lerp:KA,max:QA,min:t2,multiply:i2,negate:r2,normal:f2,normalize:d2,rotate:r_,scale:m2,snap:_2,squaredDistance:x2,squaredLength:b2,subtract:S2,toString:w2,transform:A2};const R2=t=>Object.assign({},t);var yf=R2;const{EPS:cp}=Ye,C2=We,P2=yf,L2=t=>{if(t.isClosed)return t;const e=P2(t);if(e.isClosed=!0,e.points.length>1){const n=e.points,i=n[0];let s=n[n.length-1];for(;C2.distance(i,s)<cp*cp&&(n.pop(),n.length!==1);)s=n[n.length-1]}return e};var o_=L2;const D2=(t,e,n)=>(t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t[3]=e[3]+n[3],t[4]=e[4]+n[4],t[5]=e[5]+n[5],t[6]=e[6]+n[6],t[7]=e[7]+n[7],t[8]=e[8]+n[8],t[9]=e[9]+n[9],t[10]=e[10]+n[10],t[11]=e[11]+n[11],t[12]=e[12]+n[12],t[13]=e[13]+n[13],t[14]=e[14]+n[14],t[15]=e[15]+n[15],t);var U2=D2;const I2=()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];var bf=I2;const N2=bf,F2=t=>{const e=N2();return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e};var O2=F2;const k2=(t,e)=>(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t);var a_=k2;const B2=(t,e)=>{const n=e[0],i=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=e[9],h=e[10],d=e[11],m=e[12],_=e[13],g=e[14],p=e[15],S=n*a-i*o,y=n*l-s*o,x=n*c-r*o,b=i*l-s*a,M=i*c-r*a,T=s*c-r*l,L=u*_-f*m,v=u*g-h*m,w=u*p-d*m,N=f*g-h*_,U=f*p-d*_,I=h*p-d*g;let F=S*I-y*U+x*N+b*w-M*v+T*L;return F?(F=1/F,t[0]=(a*I-l*U+c*N)*F,t[1]=(s*U-i*I-r*N)*F,t[2]=(_*T-g*M+p*b)*F,t[3]=(h*M-f*T-d*b)*F,t[4]=(l*w-o*I-c*v)*F,t[5]=(n*I-s*w+r*v)*F,t[6]=(g*x-m*T-p*y)*F,t[7]=(u*T-h*x+d*y)*F,t[8]=(o*U-a*w+c*L)*F,t[9]=(i*w-n*U-r*L)*F,t[10]=(m*M-_*x+p*S)*F,t[11]=(f*x-u*M-d*S)*F,t[12]=(a*v-o*N-l*L)*F,t[13]=(n*N-i*v+s*L)*F,t[14]=(_*y-m*b-g*S)*F,t[15]=(u*b-f*y+h*S)*F,t):null};var H2=B2;const z2=(t,e)=>t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[7]===e[7]&&t[8]===e[8]&&t[9]===e[9]&&t[10]===e[10]&&t[11]===e[11]&&t[12]===e[12]&&t[13]===e[13]&&t[14]===e[14]&&t[15]===e[15];var V2=z2;const $2=t=>(t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t);var l_=$2;const{EPS:G2}=Ye,{sin:W2,cos:X2}=Bt,q2=l_,j2=(t,e,n)=>{let[i,s,r]=n;const o=i*i+s*s+r*r;if(Math.abs(o)<G2)return q2(t);const a=1/Math.sqrt(o);i*=a,s*=a,r*=a;const l=W2(e),c=X2(e),u=1-c;return t[0]=i*i*u+c,t[1]=s*i*u+r*l,t[2]=r*i*u-s*l,t[3]=0,t[4]=i*s*u-r*l,t[5]=s*s*u+c,t[6]=r*s*u+i*l,t[7]=0,t[8]=i*r*u+s*l,t[9]=s*r*u-i*l,t[10]=r*r*u+c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t};var c_=j2;const Y2=(t,e)=>(t[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t);var Z2=Y2;const{sin:Bc,cos:Hc}=Bt,K2=(t,e,n,i)=>{const s=Bc(e),r=Hc(e),o=Bc(n),a=Hc(n),l=Bc(i),c=Hc(i);return t[0]=a*r,t[1]=a*s,t[2]=-o,t[3]=0,t[4]=l*o*r-c*s,t[5]=c*r+l*o*s,t[6]=l*a,t[7]=0,t[8]=l*s+c*o*r,t[9]=c*o*s-l*r,t[10]=c*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t};var J2=K2;const Q2=(t,e)=>(t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t);var eR=Q2;const tR=bf,nR=(t,e,n,i,s,r,o,a,l,c,u,f,h,d,m,_)=>{const g=tR();return g[0]=t,g[1]=e,g[2]=n,g[3]=i,g[4]=s,g[5]=r,g[6]=o,g[7]=a,g[8]=l,g[9]=c,g[10]=u,g[11]=f,g[12]=h,g[13]=d,g[14]=m,g[15]=_,g};var iR=nR;const sR=(t,e)=>(t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t);var u_=sR;const rR=(t,e,n)=>(t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t);var f_=rR;const oR=(t,e)=>t[0]*e[0]+t[1]*e[1]+t[2]*e[2];var El=oR;const aR=El,lR=(t,e)=>{const n=t[0],i=t[1],s=t[2],r=e[0],o=e[1],a=e[2],l=Math.sqrt(n*n+i*i+s*s),c=Math.sqrt(r*r+o*o+a*a),u=l*c,f=u&&aR(t,e)/u;return Math.acos(Math.min(Math.max(f,-1),1))};var cR=lR;const uR=()=>[0,0,0];var wl=uR;const fR=wl,hR=t=>{const e=fR();return e[0]=t[0],e[1]=t[1],e[2]=t[2],e};var dR=hR;const pR=(t,e)=>(t[0]=e[0],t[1]=e[1],t[2]=e[2],t);var h_=pR;const mR=(t,e,n)=>{const i=e[0],s=e[1],r=e[2],o=n[0],a=n[1],l=n[2];return t[0]=s*l-r*a,t[1]=r*o-i*l,t[2]=i*a-s*o,t};var Uo=mR;const gR=(t,e)=>{const n=e[0]-t[0],i=e[1]-t[1],s=e[2]-t[2];return Math.sqrt(n*n+i*i+s*s)};var d_=gR;const _R=(t,e,n)=>(t[0]=e[0]/n[0],t[1]=e[1]/n[1],t[2]=e[2]/n[2],t);var vR=_R;const xR=(t,e)=>t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2];var yR=xR;const bR=(t,e)=>(t[0]=e,t[1]=e,t[2]=e,t);var MR=bR;const SR=wl,ER=(t,e,n)=>{const i=SR();return i[0]=t,i[1]=e,i[2]=n,i};var wR=ER;const TR=(t,e,n=0)=>(t[0]=e[0],t[1]=e[1],t[2]=n,t);var AR=TR;const RR=t=>{const e=t[0],n=t[1],i=t[2];return Math.sqrt(e*e+n*n+i*i)};var p_=RR;const CR=(t,e,n,i)=>(t[0]=e[0]+i*(n[0]-e[0]),t[1]=e[1]+i*(n[1]-e[1]),t[2]=e[2]+i*(n[2]-e[2]),t);var PR=CR;const LR=(t,e,n)=>(t[0]=Math.max(e[0],n[0]),t[1]=Math.max(e[1],n[1]),t[2]=Math.max(e[2],n[2]),t);var DR=LR;const UR=(t,e,n)=>(t[0]=Math.min(e[0],n[0]),t[1]=Math.min(e[1],n[1]),t[2]=Math.min(e[2],n[2]),t);var IR=UR;const NR=(t,e,n)=>(t[0]=e[0]*n[0],t[1]=e[1]*n[1],t[2]=e[2]*n[2],t);var FR=NR;const OR=(t,e)=>(t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t);var kR=OR;const BR=(t,e)=>{const n=e[0],i=e[1],s=e[2];let r=n*n+i*i+s*s;return r>0&&(r=1/Math.sqrt(r)),t[0]=n*r,t[1]=i*r,t[2]=s*r,t};var Mf=BR;const HR=u_,zR=wl,VR=Uo,$R=(t,e)=>{const n=HR(zR(),e),i=0+(n[0]<n[1]&&n[0]<n[2]),s=0+(n[1]<=n[0]&&n[1]<n[2]),r=0+(n[2]<=n[0]&&n[2]<=n[1]);return VR(t,e,[i,s,r])};var GR=$R;const WR=(t,e,n,i)=>{const s=[],r=[];return s[0]=e[0]-n[0],s[1]=e[1]-n[1],s[2]=e[2]-n[2],r[0]=s[0],r[1]=s[1]*Math.cos(i)-s[2]*Math.sin(i),r[2]=s[1]*Math.sin(i)+s[2]*Math.cos(i),t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t};var XR=WR;const qR=(t,e,n,i)=>{const s=[],r=[];return s[0]=e[0]-n[0],s[1]=e[1]-n[1],s[2]=e[2]-n[2],r[0]=s[2]*Math.sin(i)+s[0]*Math.cos(i),r[1]=s[1],r[2]=s[2]*Math.cos(i)-s[0]*Math.sin(i),t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t};var jR=qR;const YR=(t,e,n,i)=>{const s=[],r=[];return s[0]=e[0]-n[0],s[1]=e[1]-n[1],r[0]=s[0]*Math.cos(i)-s[1]*Math.sin(i),r[1]=s[0]*Math.sin(i)+s[1]*Math.cos(i),t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=e[2],t};var ZR=YR;const KR=(t,e,n)=>(t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t);var m_=KR;const JR=(t,e,n)=>(t[0]=Math.round(e[0]/n)*n+0,t[1]=Math.round(e[1]/n)*n+0,t[2]=Math.round(e[2]/n)*n+0,t);var QR=JR;const eC=(t,e)=>{const n=e[0]-t[0],i=e[1]-t[1],s=e[2]-t[2];return n*n+i*i+s*s};var g_=eC;const tC=t=>{const e=t[0],n=t[1],i=t[2];return e*e+n*n+i*i};var __=tC;const nC=(t,e,n)=>(t[0]=e[0]-n[0],t[1]=e[1]-n[1],t[2]=e[2]-n[2],t);var Tl=nC;const iC=t=>`[${t[0].toFixed(7)}, ${t[1].toFixed(7)}, ${t[2].toFixed(7)}]`;var sC=iC;const rC=(t,e,n)=>{const i=e[0],s=e[1],r=e[2];let o=n[3]*i+n[7]*s+n[11]*r+n[15];return o=o||1,t[0]=(n[0]*i+n[4]*s+n[8]*r+n[12])/o,t[1]=(n[1]*i+n[5]*s+n[9]*r+n[13])/o,t[2]=(n[2]*i+n[6]*s+n[10]*r+n[14])/o,t};var oC=rC,Be={abs:u_,add:f_,angle:cR,clone:dR,copy:h_,create:wl,cross:Uo,distance:d_,divide:vR,dot:El,equals:yR,fromScalar:MR,fromValues:wR,fromVec2:AR,length:p_,lerp:PR,max:DR,min:IR,multiply:FR,negate:kR,normalize:Mf,orthogonal:GR,rotateX:XR,rotateY:jR,rotateZ:ZR,scale:m_,snap:QR,squaredDistance:g_,squaredLength:__,subtract:Tl,toString:sC,transform:oC};const Ii=Be,aC=c_,lC=(t,e,n)=>{const i=Ii.normalize(Ii.create(),e),s=Ii.normalize(Ii.create(),n),r=Ii.cross(Ii.create(),s,i),o=Ii.dot(s,i);if(o===-1)return aC(t,Math.PI,Ii.orthogonal(r,i));const a=1/(1+o);return t[0]=r[0]*r[0]*a+o,t[1]=r[1]*r[0]*a-r[2],t[2]=r[2]*r[0]*a+r[1],t[3]=0,t[4]=r[0]*r[1]*a+r[2],t[5]=r[1]*r[1]*a+o,t[6]=r[2]*r[1]*a-r[0],t[7]=0,t[8]=r[0]*r[2]*a-r[1],t[9]=r[1]*r[2]*a+r[0],t[10]=r[2]*r[2]*a+o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t};var cC=lC;const{sin:uC,cos:fC}=Bt,hC=(t,e)=>{const n=uC(e),i=fC(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=i,t[6]=n,t[7]=0,t[8]=0,t[9]=-n,t[10]=i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t};var dC=hC;const{sin:pC,cos:mC}=Bt,gC=(t,e)=>{const n=pC(e),i=mC(e);return t[0]=i,t[1]=0,t[2]=-n,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=n,t[9]=0,t[10]=i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t};var _C=gC;const{sin:vC,cos:xC}=Bt,yC=(t,e)=>{const n=vC(e),i=xC(e);return t[0]=i,t[1]=n,t[2]=0,t[3]=0,t[4]=-n,t[5]=i,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t};var bC=yC;const MC=t=>t[0]===1&&t[1]===0&&t[2]===0&&t[3]===0&&t[4]===0&&t[5]===1&&t[6]===0&&t[7]===0&&t[8]===0&&t[9]===0&&t[10]===1&&t[11]===0&&t[12]===0&&t[13]===0&&t[14]===0&&t[15]===1;var SC=MC;const EC=t=>pi(t[1])&&pi(t[2])&&pi(t[3])&&pi(t[4])&&pi(t[6])&&pi(t[7])&&pi(t[8])&&pi(t[9])&&pi(t[11])&&t[15]===1,pi=t=>Math.abs(t)<Number.EPSILON;var wC=EC;const TC=t=>{const e=t[4]*t[9]-t[8]*t[5],n=t[8]*t[1]-t[0]*t[9],i=t[0]*t[5]-t[4]*t[1];return e*t[2]+n*t[6]+i*t[10]<0};var AC=TC;const RC=(t,e)=>{const[n,i,s,r]=e;return t[0]=1-2*n*n,t[1]=-2*i*n,t[2]=-2*s*n,t[3]=0,t[4]=-2*n*i,t[5]=1-2*i*i,t[6]=-2*s*i,t[7]=0,t[8]=-2*n*s,t[9]=-2*i*s,t[10]=1-2*s*s,t[11]=0,t[12]=2*n*r,t[13]=2*i*r,t[14]=2*s*r,t[15]=1,t};var CC=RC;const PC=(t,e,n)=>{const i=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],c=e[6],u=e[7],f=e[8],h=e[9],d=e[10],m=e[11],_=e[12],g=e[13],p=e[14],S=e[15];let y=n[0],x=n[1],b=n[2],M=n[3];return t[0]=y*i+x*a+b*f+M*_,t[1]=y*s+x*l+b*h+M*g,t[2]=y*r+x*c+b*d+M*p,t[3]=y*o+x*u+b*m+M*S,y=n[4],x=n[5],b=n[6],M=n[7],t[4]=y*i+x*a+b*f+M*_,t[5]=y*s+x*l+b*h+M*g,t[6]=y*r+x*c+b*d+M*p,t[7]=y*o+x*u+b*m+M*S,y=n[8],x=n[9],b=n[10],M=n[11],t[8]=y*i+x*a+b*f+M*_,t[9]=y*s+x*l+b*h+M*g,t[10]=y*r+x*c+b*d+M*p,t[11]=y*o+x*u+b*m+M*S,y=n[12],x=n[13],b=n[14],M=n[15],t[12]=y*i+x*a+b*f+M*_,t[13]=y*s+x*l+b*h+M*g,t[14]=y*r+x*c+b*d+M*p,t[15]=y*o+x*u+b*m+M*S,t};var LC=PC;const{EPS:DC}=Ye,{sin:UC,cos:IC}=Bt,NC=a_,FC=(t,e,n,i)=>{let[s,r,o]=i;const a=s*s+r*r+o*o;if(Math.abs(a)<DC)return NC(t,e);const l=1/Math.sqrt(a);s*=l,r*=l,o*=l;const c=UC(n),u=IC(n),f=1-u,h=e[0],d=e[1],m=e[2],_=e[3],g=e[4],p=e[5],S=e[6],y=e[7],x=e[8],b=e[9],M=e[10],T=e[11],L=s*s*f+u,v=r*s*f+o*c,w=o*s*f-r*c,N=s*r*f-o*c,U=r*r*f+u,I=o*r*f+s*c,F=s*o*f+r*c,k=r*o*f-s*c,H=o*o*f+u;return t[0]=h*L+g*v+x*w,t[1]=d*L+p*v+b*w,t[2]=m*L+S*v+M*w,t[3]=_*L+y*v+T*w,t[4]=h*N+g*U+x*I,t[5]=d*N+p*U+b*I,t[6]=m*N+S*U+M*I,t[7]=_*N+y*U+T*I,t[8]=h*F+g*k+x*H,t[9]=d*F+p*k+b*H,t[10]=m*F+S*k+M*H,t[11]=_*F+y*k+T*H,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t};var OC=FC;const{sin:kC,cos:BC}=Bt,HC=(t,e,n)=>{const i=kC(n),s=BC(n),r=e[4],o=e[5],a=e[6],l=e[7],c=e[8],u=e[9],f=e[10],h=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=r*s+c*i,t[5]=o*s+u*i,t[6]=a*s+f*i,t[7]=l*s+h*i,t[8]=c*s-r*i,t[9]=u*s-o*i,t[10]=f*s-a*i,t[11]=h*s-l*i,t};var zC=HC;const{sin:VC,cos:$C}=Bt,GC=(t,e,n)=>{const i=VC(n),s=$C(n),r=e[0],o=e[1],a=e[2],l=e[3],c=e[8],u=e[9],f=e[10],h=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=r*s-c*i,t[1]=o*s-u*i,t[2]=a*s-f*i,t[3]=l*s-h*i,t[8]=r*i+c*s,t[9]=o*i+u*s,t[10]=a*i+f*s,t[11]=l*i+h*s,t};var WC=GC;const{sin:XC,cos:qC}=Bt,jC=(t,e,n)=>{const i=XC(n),s=qC(n),r=e[0],o=e[1],a=e[2],l=e[3],c=e[4],u=e[5],f=e[6],h=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=r*s+c*i,t[1]=o*s+u*i,t[2]=a*s+f*i,t[3]=l*s+h*i,t[4]=c*s-r*i,t[5]=u*s-o*i,t[6]=f*s-a*i,t[7]=h*s-l*i,t};var YC=jC;const ZC=(t,e,n)=>{const i=n[0],s=n[1],r=n[2];return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*s,t[5]=e[5]*s,t[6]=e[6]*s,t[7]=e[7]*s,t[8]=e[8]*r,t[9]=e[9]*r,t[10]=e[10]*r,t[11]=e[11]*r,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t};var KC=ZC;const JC=(t,e,n)=>(t[0]=e[0]-n[0],t[1]=e[1]-n[1],t[2]=e[2]-n[2],t[3]=e[3]-n[3],t[4]=e[4]-n[4],t[5]=e[5]-n[5],t[6]=e[6]-n[6],t[7]=e[7]-n[7],t[8]=e[8]-n[8],t[9]=e[9]-n[9],t[10]=e[10]-n[10],t[11]=e[11]-n[11],t[12]=e[12]-n[12],t[13]=e[13]-n[13],t[14]=e[14]-n[14],t[15]=e[15]-n[15],t);var QC=JC;const eP=t=>t.map(e=>e.toFixed(7)).toString();var tP=eP;const nP=(t,e,n)=>{const i=n[0],s=n[1],r=n[2];let o,a,l,c,u,f,h,d,m,_,g,p;return e===t?(t[12]=e[0]*i+e[4]*s+e[8]*r+e[12],t[13]=e[1]*i+e[5]*s+e[9]*r+e[13],t[14]=e[2]*i+e[6]*s+e[10]*r+e[14],t[15]=e[3]*i+e[7]*s+e[11]*r+e[15]):(o=e[0],a=e[1],l=e[2],c=e[3],u=e[4],f=e[5],h=e[6],d=e[7],m=e[8],_=e[9],g=e[10],p=e[11],t[0]=o,t[1]=a,t[2]=l,t[3]=c,t[4]=u,t[5]=f,t[6]=h,t[7]=d,t[8]=m,t[9]=_,t[10]=g,t[11]=p,t[12]=o*i+u*s+m*r+e[12],t[13]=a*i+f*s+_*r+e[13],t[14]=l*i+h*s+g*r+e[14],t[15]=c*i+d*s+p*r+e[15]),t};var iP=nP,gt={add:U2,clone:O2,copy:a_,create:bf,invert:H2,equals:V2,fromRotation:c_,fromScaling:Z2,fromTaitBryanRotation:J2,fromTranslation:eR,fromValues:iR,fromVectorRotation:cC,fromXRotation:dC,fromYRotation:_C,fromZRotation:bC,identity:l_,isIdentity:SC,isOnlyTransformScale:wC,isMirroring:AC,mirrorByPlane:CC,multiply:LC,rotate:OC,rotateX:zC,rotateY:WC,rotateZ:YC,scale:KC,subtract:QC,toString:tP,translate:iP};const sP=gt,rP=t=>(t===void 0&&(t=[]),{points:t,isClosed:!1,transforms:sP.create()});var Al=rP;const{EPS:up}=Ye,fp=We,oP=o_,aP=Al,lP=(t,e)=>{const n={closed:!1};let{closed:i}=Object.assign({},n,t),s=aP();if(s.points=e.map(r=>fp.clone(r)),s.points.length>1){const r=s.points[0],o=s.points[s.points.length-1];fp.distance(r,o)<up*up&&(i=!0)}return i===!0&&(s=oP(s)),s};var Sf=lP;const hp=gt,dp=We,cP=t=>(hp.isIdentity(t.transforms)||(t.points=t.points.map(e=>dp.transform(dp.create(),e,t.transforms)),t.transforms=hp.create()),t);var uP=cP;const fP=uP,hP=t=>fP(t).points;var Pr=hP;const{TAU:pa}=Ye,St=We,dP=Sf,pP=Pr,mP=(t,e)=>{const n={radius:[0,0],xaxisrotation:0,clockwise:!1,large:!1,segments:16};let{endpoint:i,radius:s,xaxisrotation:r,clockwise:o,large:a,segments:l}=Object.assign({},n,t);if(!Array.isArray(i))throw new Error("endpoint must be an array of X and Y values");if(i.length<2)throw new Error("endpoint must contain X and Y values");if(i=St.clone(i),!Array.isArray(s))throw new Error("radius must be an array of X and Y values");if(s.length<2)throw new Error("radius must contain X and Y values");if(l<4)throw new Error("segments must be four or more");const c=1e5;if(e.isClosed)throw new Error("the given path cannot be closed");const u=pP(e);if(u.length<1)throw new Error("the given path must contain one or more points (as the starting point for the arc)");let f=s[0],h=s[1];const d=u[u.length-1];f=Math.round(f*c)/c,h=Math.round(h*c)/c,i=St.fromValues(Math.round(i[0]*c)/c,Math.round(i[1]*c)/c);const m=!o;let _=[];if(f===0||h===0)_.push(i);else{f=Math.abs(f),h=Math.abs(h);const p=r,S=Math.cos(p),y=Math.sin(p),x=St.subtract(St.create(),d,i);St.scale(x,x,.5);const b=Math.round((S*x[0]+y*x[1])*c)/c,M=Math.round((-y*x[0]+S*x[1])*c)/c,T=St.fromValues(b,M),L=T[0]*T[0]/(f*f)+T[1]*T[1]/(h*h);if(L>1){const W=Math.sqrt(L);f*=W,h*=W,f=Math.round(f*c)/c,h=Math.round(h*c)/c}let v=Math.sqrt((f*f*h*h-f*f*T[1]*T[1]-h*h*T[0]*T[0])/(f*f*T[1]*T[1]+h*h*T[0]*T[0]));m===a&&(v=-v);const w=St.fromValues(f*T[1]/h,-h*T[0]/f);St.scale(w,w,v);let N=St.fromValues(S*w[0]-y*w[1],y*w[0]+S*w[1]);N=St.add(N,N,St.scale(St.create(),St.add(St.create(),d,i),.5));const U=St.fromValues((T[0]-w[0])/f,(T[1]-w[1])/h),I=St.fromValues((-T[0]-w[0])/f,(-T[1]-w[1])/h),F=St.angleRadians(U);let H=St.angleRadians(I)-F;H=H%pa,!m&&H>0?H-=pa:m&&H<0&&(H+=pa);let $=Math.ceil(Math.abs(H)/pa*l)+1;$<1&&($=1);for(let W=1;W<$;W++){const ae=F+W/$*H,te=Math.cos(ae),Ee=Math.sin(ae),ce=St.fromValues(S*f*te-y*h*Ee,y*f*te+S*h*Ee);St.add(ce,ce,N),_.push(ce)}$&&_.push(t.endpoint)}return _=u.concat(_),dP({},_)};var gP=mP;const _P=Sf,vP=Pr,{equals:xP}=We,yP=(...t)=>{let e=!1,n=[];return t.forEach((i,s)=>{const r=vP(i).slice();if(n.length>0&&r.length>0&&xP(r[0],n[n.length-1])&&r.shift(),r.length>0&&e)throw new Error(`Cannot concatenate to a closed path; check the ${s}th path`);e=i.isClosed,n=n.concat(r)}),_P({closed:e},n)};var v_=yP;const bP=v_,MP=Al,SP=(t,e)=>bP(e,MP(t));var x_=SP;const{TAU:EP}=Ye,pn=We,wP=We,TP=x_,AP=Pr,RP=(t,e)=>{const n={segments:16};let{controlPoints:i,segments:s}=Object.assign({},n,t);if(!Array.isArray(i))throw new Error("controlPoints must be an array of one or more points");if(i.length<1)throw new Error("controlPoints must be an array of one or more points");if(s<4)throw new Error("segments must be four or more");if(e.isClosed)throw new Error("the given geometry cannot be closed");const r=AP(e);if(r.length<1)throw new Error("the given path must contain one or more points (as the starting point for the bezier curve)");if(i=i.slice(),i[0]===null){if(i.length<2)throw new Error("a null control point must be passed with one more control points");let M=r[r.length-2];if("lastBezierControlPoint"in e&&(M=e.lastBezierControlPoint),!Array.isArray(M))throw new Error("the given path must contain TWO or more points if given a null control point");const T=pn.scale(pn.create(),r[r.length-1],2);pn.subtract(T,T,M),i[0]=T}i.unshift(r[r.length-1]);const a=i.length-1,l=[];let c=1;for(let M=0;M<=a;++M)M>0&&(c*=M),l.push(c);const u=[];for(let M=0;M<=a;++M){const T=l[a]/(l[M]*l[a-M]);u.push(T)}const f=pn.create(),h=pn.create(),d=wP.create(),m=M=>{let T=1,L=Math.pow(1-M,a);const v=M!==1?1/(1-M):1,w=pn.create();for(let N=0;N<=a;++N){N===a&&(L=1);const U=u[N]*T*L,I=pn.scale(f,i[N],U);pn.add(w,w,I),T*=M,L*=v}return w},_=[],g=[],p=a+1;for(let M=0;M<p;++M){const T=M/(p-1),L=m(T);_.push(L),g.push(T)}let S=1;const y=EP/s,x=Math.sin(y);for(;S<_.length-1;){const M=pn.subtract(f,_[S],_[S-1]);pn.normalize(M,M);const T=pn.subtract(h,_[S+1],_[S]);pn.normalize(T,T);const L=pn.cross(d,M,T);if(Math.abs(L[2])>x){const v=g[S-1],w=g[S+1],N=v+(w-v)*1/3,U=v+(w-v)*2/3,I=m(N),F=m(U);_.splice(S,1,I,F),g.splice(S,1,N,U),S--,S<1&&(S=1)}else++S}_.shift();const b=TP(_,e);return b.lastBezierControlPoint=i[i.length-2],b};var CP=RP;const PP=We,pp=Pr,LP=(t,e)=>{if(t.isClosed!==e.isClosed||t.points.length!==e.points.length)return!1;const n=pp(t),i=pp(e),s=n.length;let r=0;do{let o=!1;for(let a=0;a<s;a++)if(!PP.equals(n[a],i[(a+r)%s])){o=!0;break}if(o===!1)return!0;if(!t.isClosed)return!1}while(++r<s);return!1};var DP=LP;const UP=gt,IP=We,NP=Al,FP=t=>{if(t[0]!==2)throw new Error("invalid compact binary data");const e=NP();e.transforms=UP.clone(t.slice(1,17)),e.isClosed=!!t[17];for(let n=22;n<t.length;n+=2){const i=IP.fromValues(t[n],t[n+1]);e.points.push(i)}return t[18]>=0&&(e.color=[t[18],t[19],t[20],t[21]]),e};var OP=FP;const kP=t=>!!(t&&typeof t=="object"&&"points"in t&&"transforms"in t&&"isClosed"in t&&Array.isArray(t.points)&&"length"in t.transforms);var y_=kP;const BP=yf,HP=t=>{const e=BP(t);return e.points=t.points.slice().reverse(),e};var zP=HP;const VP=We,$P=Pr,GP=t=>{const e=$P(t);let n="path ("+e.length+" points, "+t.isClosed+`):
[
`;return e.forEach(i=>{n+="  "+VP.toString(i)+`,
`}),n+=`]
`,n};var WP=GP;const XP=t=>{const e=t.points,n=t.transforms;let i=[-1,-1,-1,-1];t.color&&(i=t.color);const s=new Float32Array(22+e.length*2);s[0]=2,s[1]=n[0],s[2]=n[1],s[3]=n[2],s[4]=n[3],s[5]=n[4],s[6]=n[5],s[7]=n[6],s[8]=n[7],s[9]=n[8],s[10]=n[9],s[11]=n[10],s[12]=n[11],s[13]=n[12],s[14]=n[13],s[15]=n[14],s[16]=n[15],s[17]=t.isClosed?1:0,s[18]=i[0],s[19]=i[1],s[20]=i[2],s[21]=i[3];for(let r=0;r<e.length;r++){const o=r*2+22,a=e[r];s[o]=a[0],s[o+1]=a[1]}return s};var qP=XP;const mp=gt,jP=(t,e)=>{const n=mp.multiply(mp.create(),t,e.transforms);return Object.assign({},e,{transforms:n})};var YP=jP;const ZP=We,KP=y_,JP=t=>{if(!KP(t))throw new Error("invalid path2 structure");if(t.points.length>1){for(let e=0;e<t.points.length;e++)if(ZP.equals(t.points[e],t.points[(e+1)%t.points.length]))throw new Error(`path2 duplicate points ${t.points[e]}`)}if(t.points.forEach(e=>{if(!e.every(Number.isFinite))throw new Error(`path2 invalid point ${e}`)}),!t.transforms.every(Number.isFinite))throw new Error(`path2 invalid transforms ${t.transforms}`)};var QP=JP,Ln={appendArc:gP,appendBezier:CP,appendPoints:x_,clone:yf,close:o_,concat:v_,create:Al,equals:DP,fromPoints:Sf,fromCompactBinary:OP,isA:y_,reverse:zP,toPoints:Pr,toString:WP,toCompactBinary:qP,transform:YP,validate:QP};const eL=(t,e)=>Array.isArray(t)&&t.length>=e?t.every(n=>Number.isFinite(n)):!1,tL=(t,e)=>Number.isFinite(t)&&t>e,nL=(t,e)=>Number.isFinite(t)&&t>=e;var Pt={isNumberArray:eL,isGT:tL,isGTE:nL};const{EPS:gp,TAU:Ks}=Ye,mi=We,iL=Ln,{isGT:sL,isGTE:zc,isNumberArray:rL}=Pt,oL=t=>{const e={center:[0,0],radius:1,startAngle:0,endAngle:Ks,makeTangent:!1,segments:32};let{center:n,radius:i,startAngle:s,endAngle:r,makeTangent:o,segments:a}=Object.assign({},e,t);if(!rL(n,2))throw new Error("center must be an array of X and Y values");if(!sL(i,0))throw new Error("radius must be greater than zero");if(!zc(s,0))throw new Error("startAngle must be positive");if(!zc(r,0))throw new Error("endAngle must be positive");if(!zc(a,4))throw new Error("segments must be four or more");s=s%Ks,r=r%Ks;let l=Ks;s<r&&(l=r-s),s>r&&(l=r+(Ks-s));const c=Math.acos((i*i+i*i-gp*gp)/(2*i*i)),u=mi.clone(n);let f;const h=[];if(l<c)f=mi.fromAngleRadians(mi.create(),s),mi.scale(f,f,i),mi.add(f,f,u),h.push(f);else{const d=Math.max(1,Math.floor(a*(l/Ks)))+1;let m=d*.5/l;m>.25&&(m=.25);const _=o?d+2:d;for(let g=0;g<=_;g++){let p=g;o&&(p=(g-1)*(d-2*m)/d+m,p<0&&(p=0),p>d&&(p=d));const S=s+p*(l/d);f=mi.fromAngleRadians(mi.create(),S),mi.scale(f,f,i),mi.add(f,f,u),h.push(f)}}return iL.fromPoints({closed:!1},h)};var aL=oL;const lL=t=>Object.assign({},t);var cL=lL;const uL=gt,fL=t=>(t===void 0&&(t=[]),{sides:t,transforms:uL.create()});var Rl=fL;const Vc=We,hL=Rl,dL=t=>{if(!Array.isArray(t))throw new Error("the given points must be an array");let e=t.length;if(e<3)throw new Error("the given points must define a closed geometry with three or more points");Vc.equals(t[0],t[e-1])&&--e;const n=[];let i=t[e-1];for(let s=0;s<e;s++){const r=t[s];n.push([Vc.clone(i),Vc.clone(r)]),i=r}return hL(n)};var pL=dL;const mL=gt,_p=We,gL=Rl,_L=t=>{if(t[0]!==0)throw new Error("invalid compact binary data");const e=gL();e.transforms=mL.clone(t.slice(1,17));for(let n=21;n<t.length;n+=4){const i=_p.fromValues(t[n+0],t[n+1]),s=_p.fromValues(t[n+2],t[n+3]);e.sides.push([i,s])}return t[17]>=0&&(e.color=[t[17],t[18],t[19],t[20]]),e};var vL=_L;const xL=t=>!!(t&&typeof t=="object"&&"sides"in t&&"transforms"in t&&Array.isArray(t.sides)&&"length"in t.transforms);var b_=xL;const vp=gt,ma=We,yL=t=>(vp.isIdentity(t.transforms)||(t.sides=t.sides.map(e=>{const n=ma.transform(ma.create(),e[0],t.transforms),i=ma.transform(ma.create(),e[1],t.transforms);return[n,i]}),t.transforms=vp.create()),t);var bL=yL;const ML=bL,SL=t=>ML(t).sides;var Io=SL;const EL=Rl,wL=Io,TL=t=>{const n=wL(t).map(i=>[i[1],i[0]]);return n.reverse(),EL(n)};var M_=TL;const zr=We,AL=Io,RL=t=>{const e=new Map,n=i=>{const s=i.toString();return e.has(s)?e.get(s):(e.set(s,i),i)};return t.map(i=>i.map(n))},CL=t=>{const e=new Map;return RL(t).forEach(i=>{e.has(i[0])?e.get(i[0]).push(i):e.set(i[0],[i])}),e},PL=t=>{const e=CL(AL(t)),n=[];for(;;){let i;for(const[o,a]of e){if(i=a.shift(),!i){e.delete(o);continue}break}if(i===void 0)break;const s=[],r=i[0];for(;;){s.push(i[0]);const o=i[1];if(o===r)break;const a=e.get(o);if(!a)throw new Error(`geometry is not closed at vertex ${o}`);const l=LL(i,a);a.length===0&&e.delete(o),i=l}s.length>0&&s.push(s.shift()),n.push(s)}return e.clear(),n},LL=(t,e)=>{if(e.length===1)return e.pop();const n=zr.create(),i=zr.angleDegrees(zr.subtract(n,t[1],t[0]));let s,r;e.forEach((a,l)=>{let u=zr.angleDegrees(zr.subtract(n,a[1],a[0]))-i;u<-180&&(u+=360),u>=180&&(u-=360),(r===void 0||u>s)&&(r=l,s=u)});const o=e[r];return e.splice(r,1),o};var S_=PL;const DL=Io,UL=t=>{const n=DL(t).map(i=>i[0]);return n.length>0&&n.push(n.shift()),n};var IL=UL;const xp=We,NL=Io,FL=t=>{const e=NL(t);let n="geom2 ("+e.length+` sides):
[
`;return e.forEach(i=>{n+="  ["+xp.toString(i[0])+", "+xp.toString(i[1])+`]
`}),n+=`]
`,n};var OL=FL;const kL=t=>{const e=t.sides,n=t.transforms;let i=[-1,-1,-1,-1];t.color&&(i=t.color);const s=new Float32Array(21+e.length*4);s[0]=0,s[1]=n[0],s[2]=n[1],s[3]=n[2],s[4]=n[3],s[5]=n[4],s[6]=n[5],s[7]=n[6],s[8]=n[7],s[9]=n[8],s[10]=n[9],s[11]=n[10],s[12]=n[11],s[13]=n[12],s[14]=n[13],s[15]=n[14],s[16]=n[15],s[17]=i[0],s[18]=i[1],s[19]=i[2],s[20]=i[3];for(let r=0;r<e.length;r++){const o=r*4+21,a=e[r][0],l=e[r][1];s[o+0]=a[0],s[o+1]=a[1],s[o+2]=l[0],s[o+3]=l[1]}return s};var BL=kL;const yp=gt,HL=M_,zL=(t,e)=>{const n=yp.multiply(yp.create(),t,e.transforms),i=Object.assign({},e,{transforms:n});return t[0]*t[5]-t[4]*t[1]<0?HL(i):i};var VL=zL;const $L=We,GL=b_,WL=S_,XL=t=>{if(!GL(t))throw new Error("invalid geom2 structure");if(WL(t),t.sides.forEach(e=>{if($L.equals(e[0],e[1]))throw new Error(`geom2 self-edge ${e[0]}`)}),!t.transforms.every(Number.isFinite))throw new Error(`geom2 invalid transforms ${t.transforms}`)};var qL=XL,mt={clone:cL,create:Rl,fromPoints:pL,fromCompactBinary:vL,isA:b_,reverse:M_,toOutlines:S_,toPoints:IL,toSides:Io,toString:OL,toCompactBinary:BL,transform:VL,validate:qL};const{EPS:bp,TAU:Ni}=Ye,$c=We,Mp=mt,{sin:jL,cos:YL}=Bt,{isGTE:Gc,isNumberArray:Sp}=Pt,ZL=t=>{const e={center:[0,0],radius:[1,1],startAngle:0,endAngle:Ni,segments:32};let{center:n,radius:i,startAngle:s,endAngle:r,segments:o}=Object.assign({},e,t);if(!Sp(n,2))throw new Error("center must be an array of X and Y values");if(!Sp(i,2))throw new Error("radius must be an array of X and Y values");if(!i.every(d=>d>=0))throw new Error("radius values must be positive");if(!Gc(s,0))throw new Error("startAngle must be positive");if(!Gc(r,0))throw new Error("endAngle must be positive");if(!Gc(o,3))throw new Error("segments must be three or more");if(i[0]===0||i[1]===0)return Mp.create();s=s%Ni,r=r%Ni;let a=Ni;s<r&&(a=r-s),s>r&&(a=r+(Ni-s));const l=Math.min(i[0],i[1]),c=Math.acos((l*l+l*l-bp*bp)/(2*l*l));if(a<c)throw new Error("startAngle and endAngle do not define a significant rotation");o=Math.floor(o*(a/Ni));const u=$c.clone(n),f=a/o,h=[];o=a<Ni?o+1:o;for(let d=0;d<o;d++){const m=f*d+s,_=$c.fromValues(i[0]*YL(m),i[1]*jL(m));$c.add(_,u,_),h.push(_)}return a<Ni&&h.push(u),Mp.fromPoints(h)};var E_=ZL;const{TAU:KL}=Ye,JL=E_,{isGTE:QL}=Pt,e3=t=>{const e={center:[0,0],radius:1,startAngle:0,endAngle:KL,segments:32};let{center:n,radius:i,startAngle:s,endAngle:r,segments:o}=Object.assign({},e,t);if(!QL(i,0))throw new Error("radius must be positive");return i=[i,i],JL({center:n,radius:i,startAngle:s,endAngle:r,segments:o})};var w_=e3;const t3=t=>Object.assign({},t);var n3=t3;const i3=gt,s3=t=>(t===void 0&&(t=[]),{polygons:t,transforms:i3.create()});var No=s3;const r3=Uo,Ep=Tl,wp=__,o3=(t,e,n)=>{const i=[],s=[],r=[];Ep(i,n,e),Ep(s,t,e);const o=wp(r3(r,s,i)),a=wp(i);if(a===0)throw Error("a and b are the same point");return o/a},a3=(t,e,n)=>Math.sqrt(o3(t,e,n));var l3=a3;const c3=Uo,u3=Mf,Tp=Tl,f3=(t,e,n,i)=>{const s=[0,0,0];return Tp(t,e,n),Tp(s,n,i),c3(t,t,s),u3(t,t)};var h3=f3;let d3=class{constructor(){this.head=null,this.tail=null}clear(){this.head=this.tail=null}insertBefore(e,n){n.prev=e.prev,n.next=e,n.prev?n.prev.next=n:this.head=n,e.prev=n}insertAfter(e,n){n.prev=e,n.next=e.next,n.next?n.next.prev=n:this.tail=n,e.next=n}add(e){this.head?this.tail.next=e:this.head=e,e.prev=this.tail,e.next=null,this.tail=e}addAll(e){for(this.head?this.tail.next=e:this.head=e,e.prev=this.tail;e.next;)e=e.next;this.tail=e}remove(e){e.prev?e.prev.next=e.next:this.head=e.next,e.next?e.next.prev=e.prev:this.tail=e.prev}removeChain(e,n){e.prev?e.prev.next=n.next:this.head=n.next,n.next?n.next.prev=e.prev:this.tail=e.prev}first(){return this.head}isEmpty(){return!this.head}};var p3=d3;let m3=class{constructor(e,n){this.point=e,this.index=n,this.next=null,this.prev=null,this.face=null}};var g3=m3;const _3=d_,v3=g_;let x3=class{constructor(e,n){this.vertex=e,this.face=n,this.next=null,this.prev=null,this.opposite=null}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){return this.tail()?_3(this.tail().point,this.head().point):-1}lengthSquared(){return this.tail()?v3(this.tail().point,this.head().point):-1}setOpposite(e){this.opposite=e,e.opposite=this}};var y3=x3;const Wc=f_,b3=h_,M3=Uo,Xc=El,S3=p_,E3=Mf,ga=m_,qc=Tl,jc=y3,T_=0,w3=1,ku=2;let T3=class A_{constructor(){this.normal=[],this.centroid=[],this.offset=0,this.outside=null,this.mark=T_,this.edge=null,this.nVertices=0}getEdge(e){if(typeof e!="number")throw Error("requires a number");let n=this.edge;for(;e>0;)n=n.next,e-=1;for(;e<0;)n=n.prev,e+=1;return n}computeNormal(){const e=this.edge,n=e.next;let i=n.next;const s=qc([],n.head().point,e.head().point),r=[],o=[];for(this.nVertices=2,this.normal=[0,0,0];i!==e;)b3(o,s),qc(s,i.head().point,e.head().point),Wc(this.normal,this.normal,M3(r,o,s)),i=i.next,this.nVertices+=1;this.area=S3(this.normal),this.normal=ga(this.normal,this.normal,1/this.area)}computeNormalMinArea(e){if(this.computeNormal(),this.area<e){let n,i=0,s=this.edge;do{const u=s.lengthSquared();u>i&&(n=s,i=u),s=s.next}while(s!==this.edge);const r=n.tail().point,o=n.head().point,a=qc([],o,r),l=Math.sqrt(i);ga(a,a,1/l);const c=Xc(this.normal,a);ga(a,a,-c),Wc(this.normal,this.normal,a),E3(this.normal,this.normal)}}computeCentroid(){this.centroid=[0,0,0];let e=this.edge;do Wc(this.centroid,this.centroid,e.head().point),e=e.next;while(e!==this.edge);ga(this.centroid,this.centroid,1/this.nVertices)}computeNormalAndCentroid(e){typeof e<"u"?this.computeNormalMinArea(e):this.computeNormal(),this.computeCentroid(),this.offset=Xc(this.normal,this.centroid)}distanceToPlane(e){return Xc(this.normal,e)-this.offset}connectHalfEdges(e,n){let i;if(e.opposite.face===n.opposite.face){const s=n.opposite.face;let r;e===this.edge&&(this.edge=n),s.nVertices===3?(r=n.opposite.prev.opposite,s.mark=ku,i=s):(r=n.opposite.next,s.edge===r.prev&&(s.edge=r),r.prev=r.prev.prev,r.prev.next=r),n.prev=e.prev,n.prev.next=n,n.setOpposite(r),s.computeNormalAndCentroid()}else e.next=n,n.prev=e;return i}mergeAdjacentFaces(e,n){const i=e.opposite,s=i.face;n.push(s),s.mark=ku;let r=e.prev,o=e.next,a=i.prev,l=i.next;for(;r.opposite.face===s;)r=r.prev,l=l.next;for(;o.opposite.face===s;)o=o.next,a=a.prev;let c;for(c=l;c!==a.next;c=c.next)c.face=this;this.edge=o;let u;return u=this.connectHalfEdges(a,o),u&&n.push(u),u=this.connectHalfEdges(r,l),u&&n.push(u),this.computeNormalAndCentroid(),n}collectIndices(){const e=[];let n=this.edge;do e.push(n.head().index),n=n.next;while(n!==this.edge);return e}static createTriangle(e,n,i,s=0){const r=new A_,o=new jc(e,r),a=new jc(n,r),l=new jc(i,r);return o.next=l.prev=a,a.next=o.prev=l,l.next=a.prev=o,r.edge=o,r.computeNormalAndCentroid(s),r}};var A3={VISIBLE:T_,NON_CONVEX:w3,DELETED:ku,Face:T3};const Yc=El,R3=l3,C3=h3,Ap=p3,P3=g3,{Face:gi,VISIBLE:Js,NON_CONVEX:Rp,DELETED:L3}=A3,D3=1,Cp=2;let U3=class{constructor(e){if(!Array.isArray(e))throw TypeError("input is not a valid array");if(e.length<4)throw Error("cannot build a simplex out of <4 points");this.tolerance=-1,this.nFaces=0,this.nPoints=e.length,this.faces=[],this.newFaces=[],this.claimed=new Ap,this.unclaimed=new Ap,this.vertices=[];for(let n=0;n<e.length;n+=1)this.vertices.push(new P3(e[n],n));this.discardedFaces=[],this.vertexPointIndices=[]}addVertexToFace(e,n){e.face=n,n.outside?this.claimed.insertBefore(n.outside,e):this.claimed.add(e),n.outside=e}removeVertexFromFace(e,n){e===n.outside&&(e.next&&e.next.face===n?n.outside=e.next:n.outside=null),this.claimed.remove(e)}removeAllVerticesFromFace(e){if(e.outside){let n=e.outside;for(;n.next&&n.next.face===e;)n=n.next;return this.claimed.removeChain(e.outside,n),n.next=null,e.outside}}deleteFaceVertices(e,n){const i=this.removeAllVerticesFromFace(e);if(i)if(!n)this.unclaimed.addAll(i);else{let s;for(let r=i;r;r=s)s=r.next,n.distanceToPlane(r.point)>this.tolerance?this.addVertexToFace(r,n):this.unclaimed.add(r)}}resolveUnclaimedPoints(e){let n=this.unclaimed.first();for(let i=n;i;i=n){n=i.next;let s=this.tolerance,r;for(let o=0;o<e.length;o+=1){const a=e[o];if(a.mark===Js){const l=a.distanceToPlane(i.point);if(l>s&&(s=l,r=a),s>1e3*this.tolerance)break}}r&&this.addVertexToFace(i,r)}}computeExtremes(){const e=[],n=[],i=[],s=[];let r,o;for(r=0;r<3;r+=1)i[r]=s[r]=this.vertices[0];for(r=0;r<3;r+=1)e[r]=n[r]=this.vertices[0].point[r];for(r=1;r<this.vertices.length;r+=1){const a=this.vertices[r],l=a.point;for(o=0;o<3;o+=1)l[o]<e[o]&&(e[o]=l[o],i[o]=a);for(o=0;o<3;o+=1)l[o]>n[o]&&(n[o]=l[o],s[o]=a)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(e[0]),Math.abs(n[0]))+Math.max(Math.abs(e[1]),Math.abs(n[1]))+Math.max(Math.abs(e[2]),Math.abs(n[2]))),[i,s]}createInitialSimplex(){const e=this.vertices,[n,i]=this.computeExtremes();let s,r,o,a,l=0,c=0;for(o=0;o<3;o+=1){const _=i[o].point[o]-n[o].point[o];_>l&&(l=_,c=o)}const u=n[c],f=i[c];for(l=0,o=0;o<this.vertices.length;o+=1){const _=this.vertices[o];if(_!==u&&_!==f){const g=R3(_.point,u.point,f.point);g>l&&(l=g,s=_)}}const h=C3([],u.point,f.point,s.point),d=Yc(u.point,h);for(l=-1,o=0;o<this.vertices.length;o+=1){const _=this.vertices[o];if(_!==u&&_!==f&&_!==s){const g=Math.abs(Yc(h,_.point)-d);g>l&&(l=g,r=_)}}const m=[];if(Yc(r.point,h)-d<0)for(m.push(gi.createTriangle(u,f,s),gi.createTriangle(r,f,u),gi.createTriangle(r,s,f),gi.createTriangle(r,u,s)),o=0;o<3;o+=1){const _=(o+1)%3;m[o+1].getEdge(2).setOpposite(m[0].getEdge(_)),m[o+1].getEdge(1).setOpposite(m[_+1].getEdge(0))}else for(m.push(gi.createTriangle(u,s,f),gi.createTriangle(r,u,f),gi.createTriangle(r,f,s),gi.createTriangle(r,s,u)),o=0;o<3;o+=1){const _=(o+1)%3;m[o+1].getEdge(2).setOpposite(m[0].getEdge((3-o)%3)),m[o+1].getEdge(0).setOpposite(m[_+1].getEdge(1))}for(o=0;o<4;o+=1)this.faces.push(m[o]);for(o=0;o<e.length;o+=1){const _=e[o];if(_!==u&&_!==f&&_!==s&&_!==r){l=this.tolerance;let g;for(a=0;a<4;a+=1){const p=m[a].distanceToPlane(_.point);p>l&&(l=p,g=m[a])}g&&this.addVertexToFace(_,g)}}}reindexFaceAndVertices(){const e=[];for(let n=0;n<this.faces.length;n+=1){const i=this.faces[n];i.mark===Js&&e.push(i)}this.faces=e}collectFaces(e){const n=[];for(let i=0;i<this.faces.length;i+=1){if(this.faces[i].mark!==Js)throw Error("attempt to include a destroyed face in the hull");const s=this.faces[i].collectIndices();if(e)n.push(s);else for(let r=0;r<s.length-2;r+=1)n.push([s[0],s[r+1],s[r+2]])}return n}nextVertexToAdd(){if(!this.claimed.isEmpty()){let e,n,i=0;const s=this.claimed.first().face;for(n=s.outside;n&&n.face===s;n=n.next){const r=s.distanceToPlane(n.point);r>i&&(i=r,e=n)}return e}}computeHorizon(e,n,i,s){this.deleteFaceVertices(i),i.mark=L3;let r;n?r=n.next:r=n=i.getEdge(0);do{const o=r.opposite,a=o.face;a.mark===Js&&(a.distanceToPlane(e)>this.tolerance?this.computeHorizon(e,o,a,s):s.push(r)),r=r.next}while(r!==n)}addAdjoiningFace(e,n){const i=gi.createTriangle(e,n.tail(),n.head());return this.faces.push(i),i.getEdge(-1).setOpposite(n.opposite),i.getEdge(0)}addNewFaces(e,n){this.newFaces=[];let i,s;for(let r=0;r<n.length;r+=1){const o=n[r],a=this.addAdjoiningFace(e,o);i?a.next.setOpposite(s):i=a,this.newFaces.push(a.face),s=a}i.next.setOpposite(s)}oppositeFaceDistance(e){return e.face.distanceToPlane(e.opposite.face.centroid)}doAdjacentMerge(e,n){let i=e.edge,s=!0,r=0;do{if(r>=e.nVertices)throw Error("merge recursion limit exceeded");const o=i.opposite.face;let a=!1;if(n===Cp?(this.oppositeFaceDistance(i)>-this.tolerance||this.oppositeFaceDistance(i.opposite)>-this.tolerance)&&(a=!0):e.area>o.area?this.oppositeFaceDistance(i)>-this.tolerance?a=!0:this.oppositeFaceDistance(i.opposite)>-this.tolerance&&(s=!1):this.oppositeFaceDistance(i.opposite)>-this.tolerance?a=!0:this.oppositeFaceDistance(i)>-this.tolerance&&(s=!1),a){const l=e.mergeAdjacentFaces(i,[]);for(let c=0;c<l.length;c+=1)this.deleteFaceVertices(l[c],e);return!0}i=i.next,r+=1}while(i!==e.edge);return s||(e.mark=Rp),!1}addVertexToHull(e){const n=[];this.unclaimed.clear(),this.removeVertexFromFace(e,e.face),this.computeHorizon(e.point,null,e.face,n),this.addNewFaces(e,n);for(let i=0;i<this.newFaces.length;i+=1){const s=this.newFaces[i];if(s.mark===Js)for(;this.doAdjacentMerge(s,D3););}for(let i=0;i<this.newFaces.length;i+=1){const s=this.newFaces[i];if(s.mark===Rp)for(s.mark=Js;this.doAdjacentMerge(s,Cp););}this.resolveUnclaimedPoints(this.newFaces)}build(){let e;for(this.createInitialSimplex();e=this.nextVertexToAdd();)this.addVertexToHull(e);this.reindexFaceAndVertices()}};var I3=U3;const N3=I3,F3=(t,e={})=>{const n=new N3(t);return n.build(),n.collectFaces(e.skipTriangulation)};var O3=F3;const k3=t=>((t===void 0||t.length<3)&&(t=[]),{vertices:t});var Lr=k3;const B3=Lr,H3=Be,z3=(...t)=>{let e,n;return t.length===1?(e=B3(),n=t[0]):(e=t[0],n=t[1]),e.vertices=n.vertices.map(i=>H3.clone(i)),e};var V3=z3;const $3=Be,G3=Lr,W3=t=>{const e=t.map(n=>$3.clone(n));return G3(e)};var X3=W3;const q3=Lr,j3=(t,e)=>{const n=q3(t);return n.plane=e,n};var Y3=j3;const Z3=()=>[0,0,0,0];var Cl=Z3;const K3=Cl,J3=t=>{const e=K3();return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e};var R_=J3;const Q3=(t,e)=>(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t);var C_=Q3;const eD=(t,e)=>t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3];var P_=eD;const tD=(t,e)=>(t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t);var L_=tD;const Zc=Be,nD=(t,e,n)=>{const i=Zc.normalize(Zc.create(),e),s=Zc.dot(n,i);return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=s,t};var D_=nD;const iD=Cl,sD=(t,e,n,i)=>{const s=iD();return s[0]=t,s[1]=e,s[2]=n,s[3]=i,s};var U_=sD;const mn=Be,rD=D_,oD=(t,...e)=>{t[0]=0,t[1]=0,t[2]=0,t[3]=0;const n=e.length;e.forEach(d=>{mn.add(t,t,d)}),mn.scale(t,t,1/n);let i=0,s=0,r=0,o=0,a=0,l=0;const c=mn.create();e.forEach(d=>{mn.subtract(c,d,t),i+=c[0]*c[0],s+=c[0]*c[1],r+=c[0]*c[2],o+=c[1]*c[1],a+=c[1]*c[2],l+=c[2]*c[2]}),i/=n,s/=n,r/=n,o/=n,a/=n,l/=n,c[0]=0,c[1]=0,c[2]=0;const u=mn.create();let f=o*l-a*a;u[0]=f,u[1]=r*a-s*l,u[2]=s*a-r*o;let h=f*f;return mn.add(c,c,mn.scale(u,u,h)),f=i*l-r*r,u[0]=r*a-s*l,u[1]=f,u[2]=s*r-a*i,h=f*f,mn.dot(c,u)<0&&(h=-h),mn.add(c,c,mn.scale(u,u,h)),f=i*o-s*s,u[0]=s*a-r*o,u[1]=s*r-a*i,u[2]=f,h=f*f,mn.dot(c,u)<0&&(h=-h),mn.add(c,c,mn.scale(u,u,h)),rD(t,c,t)};var aD=oD;const Yn=Be,lD=(t,...e)=>{const n=e.length,i=Yn.create(),s=Yn.create(),r=o=>{const a=e[o],l=e[(o+1)%n],c=e[(o+2)%n];return Yn.subtract(i,l,a),Yn.subtract(s,c,a),Yn.cross(i,i,s),Yn.normalize(i,i),i};return t[0]=0,t[1]=0,t[2]=0,n===3?Yn.copy(t,r(0)):(e.forEach((o,a)=>{Yn.add(t,t,r(a))}),Yn.normalize(t,t)),t[3]=Yn.dot(t,e[0]),t};var I_=lD;const{EPS:Kc}=Ye,Xt=Be,cD=(t,e,n,i)=>{let s=Xt.subtract(Xt.create(),n,e),r=Xt.subtract(Xt.create(),i,e);Xt.length(s)<Kc&&(s=Xt.orthogonal(s,r)),Xt.length(r)<Kc&&(r=Xt.orthogonal(r,s));let o=Xt.cross(Xt.create(),s,r);Xt.length(o)<Kc&&(r=Xt.orthogonal(r,s),o=Xt.cross(o,s,r)),o=Xt.normalize(o,o);const a=Xt.dot(o,e);return t[0]=o[0],t[1]=o[1],t[2]=o[2],t[3]=a,t};var uD=cD;const fD=Be,hD=(t,e)=>{const n=e[0]*t[0]+e[1]*t[1]+e[2]*t[2]-t[3],i=e[0]-n*t[0],s=e[1]-n*t[1],r=e[2]-n*t[2];return fD.fromValues(i,s,r)};var dD=hD;const pD=Be,mD=(t,e)=>pD.dot(t,e)-t[3];var N_=mD;const gD=t=>`(${t[0].toFixed(9)}, ${t[1].toFixed(9)}, ${t[2].toFixed(9)}, ${t[3].toFixed(9)})`;var F_=gD;const _D=gt,qt=Be,vD=I_,xD=L_,yD=(t,e,n)=>{const i=_D.isMirroring(n),s=qt.orthogonal(qt.create(),e),r=qt.cross(s,e,s),o=qt.cross(qt.create(),e,r);let a=qt.fromScalar(qt.create(),e[3]);qt.multiply(a,a,e);let l=qt.add(qt.create(),a,r),c=qt.add(qt.create(),a,o);return a=qt.transform(a,a,n),l=qt.transform(l,l,n),c=qt.transform(c,c,n),vD(t,a,l,c),i&&xD(t,t),t};var bD=yD,Zi={clone:R_,copy:C_,create:Cl,equals:P_,flip:L_,fromNormalAndPoint:D_,fromValues:U_,fromNoisyPoints:aD,fromPoints:I_,fromPointsRandom:uD,projectionOfPoint:dD,signedDistanceToPoint:N_,toString:F_,transform:bD};const Pp=Zi,MD=Lr,SD=t=>{const e=t.vertices.slice().reverse(),n=MD(e);return t.plane&&(n.plane=Pp.flip(Pp.create(),t.plane)),n};var ED=SD;const wD=t=>!!(t&&typeof t=="object"&&"vertices"in t&&Array.isArray(t.vertices));var O_=wD;const Lp=Zi,as=Be,TD=t=>AD(t.vertices),AD=t=>{const e=t.length;if(e>2){const n=Lp.fromPoints(Lp.create(),...t);let i=t[e-2],s=t[e-1];for(let r=0;r<e;r++){const o=t[r];if(!RD(i,s,o,n))return!1;i=s,s=o}}return!0},RD=(t,e,n,i)=>{const s=as.cross(as.create(),as.subtract(as.create(),e,t),as.subtract(as.create(),n,e));return as.dot(s,i)>=0};var k_=TD;const Dp=Zi,CD=t=>(t.plane||(t.plane=Dp.fromPoints(Dp.create(),...t.vertices)),t.plane);var Ef=CD;const PD=Ef,LD=t=>{const e=t.vertices.length;if(e<3)return 0;const n=t.vertices,i=PD(t),s=Math.abs(i[0]),r=Math.abs(i[1]),o=Math.abs(i[2]);if(s+r+o===0)return 0;let a=3;s>r&&s>o?a=1:r>o&&(a=2);let l=0,c=0,u=1,f=2;switch(a){case 1:for(u=1;u<e;u++)c=u-1,f=(u+1)%e,l+=n[u][1]*(n[f][2]-n[c][2]);l+=n[0][1]*(n[1][2]-n[e-1][2]),l/=2*i[0];break;case 2:for(u=1;u<e;u++)c=u-1,f=(u+1)%e,l+=n[u][2]*(n[f][0]-n[c][0]);l+=n[0][2]*(n[1][0]-n[e-1][0]),l/=2*i[1];break;case 3:default:for(u=1;u<e;u++)c=u-1,f=(u+1)%e,l+=n[u][0]*(n[f][1]-n[c][1]);l+=n[0][0]*(n[1][1]-n[e-1][1]),l/=2*i[2];break}return l};var B_=LD;const Vr=Be,DD=t=>{const e=t.vertices,n=e.length,i=n===0?Vr.create():Vr.clone(e[0]),s=Vr.clone(i);for(let r=1;r<n;r++)Vr.min(i,i,e[r]),Vr.max(s,s,e[r]);return[i,s]};var UD=DD;const ID=(t,e)=>t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3];var ND=ID;const FD=(t,e)=>(t[0]=e,t[1]=e,t[2]=e,t[3]=e,t);var OD=FD;const kD=(t,e,n)=>{const[i,s,r,o]=e;return t[0]=n[0]*i+n[4]*s+n[8]*r+n[12]*o,t[1]=n[1]*i+n[5]*s+n[9]*r+n[13]*o,t[2]=n[2]*i+n[6]*s+n[10]*r+n[14]*o,t[3]=n[3]*i+n[7]*s+n[11]*r+n[15]*o,t};var BD=kD,HD={clone:R_,copy:C_,create:Cl,dot:ND,equals:P_,fromScalar:OD,fromValues:U_,toString:F_,transform:BD};const zD=HD,Up=new WeakMap,VD=t=>{const e=Up.get(t);if(e)return e;const n=t.vertices,i=zD.create();if(n.length===0)return i[0]=0,i[1]=0,i[2]=0,i[3]=0,i;let s=n[0],r=s,o=s,a=s,l=s,c=s;n.forEach(d=>{s[0]>d[0]&&(s=d),r[1]>d[1]&&(r=d),o[2]>d[2]&&(o=d),a[0]<d[0]&&(a=d),l[1]<d[1]&&(l=d),c[2]<d[2]&&(c=d)}),i[0]=(s[0]+a[0])*.5,i[1]=(r[1]+l[1])*.5,i[2]=(o[2]+c[2])*.5;const u=i[0]-a[0],f=i[1]-l[1],h=i[2]-c[2];return i[3]=Math.sqrt(u*u+f*f+h*h),Up.set(t,i),i};var $D=VD;const Jc=Be,GD=t=>{let e=0;const n=t.vertices,i=Jc.create();for(let s=0;s<n.length-2;s++)Jc.cross(i,n[s+1],n[s+2]),e+=Jc.dot(n[0],i);return e/=6,e};var WD=GD;const XD=t=>t.vertices;var qD=XD;const jD=Be,YD=t=>{let e="poly3: vertices: [";return t.vertices.forEach(n=>{e+=`${jD.toString(n)}, `}),e+="]",e};var ZD=YD;const KD=gt,Ip=Be,JD=Lr,QD=(t,e)=>{const n=e.vertices.map(i=>Ip.transform(Ip.create(),i,t));return KD.isMirroring(t)&&n.reverse(),JD(n)};var eU=QD;const tU=N_,{NEPS:nU}=Ye,iU=Be,sU=O_,rU=k_,oU=B_,aU=Ef,lU=t=>{if(!sU(t))throw new Error("invalid poly3 structure");if(t.vertices.length<3)throw new Error(`poly3 not enough vertices ${t.vertices.length}`);if(oU(t)<=0)throw new Error("poly3 area must be greater than zero");for(let e=0;e<t.vertices.length;e++)if(iU.equals(t.vertices[e],t.vertices[(e+1)%t.vertices.length]))throw new Error(`poly3 duplicate vertex ${t.vertices[e]}`);if(!rU(t))throw new Error("poly3 must be convex");if(t.vertices.forEach(e=>{if(!e.every(Number.isFinite))throw new Error(`poly3 invalid vertex ${e}`)}),t.vertices.length>3){const e=aU(t);t.vertices.forEach(n=>{const i=Math.abs(tU(e,n));if(i>nU)throw new Error(`poly3 must be coplanar: vertex ${n} distance ${i}`)})}};var cU=lU,nt={clone:V3,create:Lr,fromPoints:X3,fromPointsAndPlane:Y3,invert:ED,isA:O_,isConvex:k_,measureArea:B_,measureBoundingBox:UD,measureBoundingSphere:$D,measureSignedVolume:WD,plane:Ef,toPoints:qD,toString:ZD,transform:eU,validate:cU};const uU=O3,fU=No,hU=nt,dU=t=>{if(!Array.isArray(t))throw new Error("the given points must be an array");const n=uU(t,{skipTriangulation:!0}).map(i=>{const s=i.map(r=>t[r]);return hU.create(s)});return fU(n)};var pU=dU;const mU=nt,gU=No,_U=t=>{if(!Array.isArray(t))throw new Error("the given points must be an array");const e=t.map((i,s)=>mU.create(i));return gU(e)};var vU=_U;const xU=Be,yU=gt,bU=nt,MU=No,SU=t=>{if(t[0]!==1)throw new Error("invalid compact binary data");const e=MU();e.transforms=yU.clone(t.slice(1,17));const n=t[21];let i=22,s=t.length-n*3;for(;s<t.length;){const r=t[i];i++;const o=[];for(let a=0;a<r;a++)o.push(xU.fromValues(t[s],t[s+1],t[s+2])),s+=3;e.polygons.push(bU.create(o))}return t[17]>=0&&(e.color=[t[17],t[18],t[19],t[20]]),e};var EU=SU;const Np=gt,wU=nt,TU=t=>(Np.isIdentity(t.transforms)||(t.polygons=t.polygons.map(e=>wU.transform(t.transforms,e)),t.transforms=Np.create()),t);var AU=TU;const RU=AU,CU=t=>RU(t).polygons;var Pl=CU;const PU=nt,LU=No,DU=Pl,UU=t=>{const n=DU(t).map(i=>PU.invert(i));return LU(n)};var IU=UU;const NU=t=>!!(t&&typeof t=="object"&&"polygons"in t&&"transforms"in t&&Array.isArray(t.polygons)&&"length"in t.transforms);var H_=NU;const FU=nt,OU=Pl,kU=t=>OU(t).map(i=>FU.toPoints(i));var BU=kU;const HU=nt,zU=Pl,VU=t=>{const e=zU(t);let n="geom3 ("+e.length+` polygons):
`;return e.forEach(i=>{n+="  "+HU.toString(i)+`
`}),n};var $U=VU;const GU=nt,WU=t=>{const e=t.polygons,n=t.transforms,i=e.length,s=e.reduce((c,u)=>c+u.vertices.length,0);let r=[-1,-1,-1,-1];t.color&&(r=t.color);const o=new Float32Array(22+i+s*3);o[0]=1,o[1]=n[0],o[2]=n[1],o[3]=n[2],o[4]=n[3],o[5]=n[4],o[6]=n[5],o[7]=n[6],o[8]=n[7],o[9]=n[8],o[10]=n[9],o[11]=n[10],o[12]=n[11],o[13]=n[12],o[14]=n[13],o[15]=n[14],o[16]=n[15],o[17]=r[0],o[18]=r[1],o[19]=r[2],o[20]=r[3],o[21]=s;let a=22,l=a+i;return e.forEach(c=>{const u=GU.toPoints(c);o[a]=u.length,a++;for(let f=0;f<u.length;f++){const h=u[f];o[l+0]=h[0],o[l+1]=h[1],o[l+2]=h[2],l+=3}}),o};var XU=WU;const Fp=gt,qU=(t,e)=>{const n=Fp.multiply(Fp.create(),t,e.transforms);return Object.assign({},e,{transforms:n})};var jU=qU;const YU=nt,ZU=H_,KU=t=>{if(!ZU(t))throw new Error("invalid geom3 structure");if(t.polygons.forEach(YU.validate),JU(t),!t.transforms.every(Number.isFinite))throw new Error(`geom3 invalid transforms ${t.transforms}`)},JU=t=>{const e=new Map;t.polygons.forEach(({vertices:i})=>{i.forEach((s,r)=>{const o=`${s}`,a=`${i[(r+1)%i.length]}`,l=`${o}/${a}`,c=e.has(l)?e.get(l):0;e.set(l,c+1)})});const n=[];if(e.forEach((i,s)=>{const r=s.split("/").reverse().join("/"),o=e.get(r);i!==o&&n.push(s.replace("/"," -> "))}),n.length>0)throw new Error(`non-manifold edges ${n.length}
${n.join(`
`)}`)};var QU=KU,pt={clone:n3,create:No,fromPointsConvex:pU,fromPoints:vU,fromCompactBinary:EU,invert:IU,isA:H_,toPoints:BU,toPolygons:Pl,toString:$U,toCompactBinary:XU,transform:jU,validate:QU};const Op=pt,eI=nt,{isNumberArray:kp}=Pt,tI=t=>{const e={center:[0,0,0],size:[2,2,2]},{center:n,size:i}=Object.assign({},e,t);if(!kp(n,3))throw new Error("center must be an array of X, Y and Z values");if(!kp(i,3))throw new Error("size must be an array of width, depth and height values");if(!i.every(r=>r>=0))throw new Error("size values must be positive");return i[0]===0||i[1]===0||i[2]===0?Op.create():Op.create([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,1]]].map(r=>{const o=r[0].map(a=>[n[0]+i[0]/2*(2*!!(a&1)-1),n[1]+i[1]/2*(2*!!(a&2)-1),n[2]+i[2]/2*(2*!!(a&4)-1)]);return eI.create(o)}))};var wf=tI;const nI=wf,{isGTE:iI}=Pt,sI=t=>{const e={center:[0,0,0],size:2};let{center:n,size:i}=Object.assign({},e,t);if(!iI(i,0))throw new Error("size must be positive");return i=[i,i,i],nI({center:n,size:i})};var rI=sI;const{EPS:Bp,TAU:Fi}=Ye,Ut=Be,oI=pt,aI=nt,{sin:lI,cos:cI}=Bt,{isGT:uI,isGTE:Qc,isNumberArray:eu}=Pt,fI=t=>{const e={center:[0,0,0],height:2,startRadius:[1,1],startAngle:0,endRadius:[1,1],endAngle:Fi,segments:32};let{center:n,height:i,startRadius:s,startAngle:r,endRadius:o,endAngle:a,segments:l}=Object.assign({},e,t);if(!eu(n,3))throw new Error("center must be an array of X, Y and Z values");if(!uI(i,0))throw new Error("height must be greater then zero");if(!eu(s,2))throw new Error("startRadius must be an array of X and Y values");if(!s.every(v=>v>=0))throw new Error("startRadius values must be positive");if(!eu(o,2))throw new Error("endRadius must be an array of X and Y values");if(!o.every(v=>v>=0))throw new Error("endRadius values must be positive");if(o.every(v=>v===0)&&s.every(v=>v===0))throw new Error("at least one radius must be positive");if(!Qc(r,0))throw new Error("startAngle must be positive");if(!Qc(a,0))throw new Error("endAngle must be positive");if(!Qc(l,4))throw new Error("segments must be four or more");r=r%Fi,a=a%Fi;let c=Fi;r<a&&(c=a-r),r>a&&(c=a+(Fi-r));const u=Math.min(s[0],s[1],o[0],o[1]),f=Math.acos((u*u+u*u-Bp*Bp)/(2*u*u));if(c<f)throw new Error("startAngle and endAngle do not define a significant rotation");const h=Math.floor(l*(c/Fi)),d=Ut.fromValues(0,0,-(i/2)),m=Ut.fromValues(0,0,i/2),_=Ut.subtract(Ut.create(),m,d),g=Ut.fromValues(1,0,0),p=Ut.fromValues(0,1,0),S=Ut.create(),y=Ut.create(),x=Ut.create(),b=(v,w,N)=>{const U=w*c+r;return Ut.scale(S,g,N[0]*cI(U)),Ut.scale(y,p,N[1]*lI(U)),Ut.add(S,S,y),Ut.scale(x,_,v),Ut.add(x,x,d),Ut.add(Ut.create(),S,x)},M=(...v)=>{const w=v.map(N=>Ut.add(Ut.create(),N,n));return aI.create(w)},T=[];for(let v=0;v<h;v++){const w=v/h;let N=(v+1)/h;c===Fi&&v===h-1&&(N=0),o[0]===s[0]&&o[1]===s[1]?(T.push(M(d,b(0,N,o),b(0,w,o))),T.push(M(b(0,N,o),b(1,N,o),b(1,w,o),b(0,w,o))),T.push(M(m,b(1,w,o),b(1,N,o)))):(s[0]>0&&s[1]>0&&T.push(M(d,b(0,N,s),b(0,w,s))),(s[0]>0||s[1]>0)&&T.push(M(b(0,w,s),b(0,N,s),b(1,w,o))),o[0]>0&&o[1]>0&&T.push(M(m,b(1,w,o),b(1,N,o))),(o[0]>0||o[1]>0)&&T.push(M(b(1,w,o),b(0,N,s),b(1,N,o))))}return c<Fi&&(T.push(M(d,b(0,0,s),m)),T.push(M(b(0,0,s),b(1,0,o),m)),T.push(M(d,m,b(0,1,s))),T.push(M(b(0,1,s),m,b(1,1,o)))),oI.create(T)};var z_=fI;const hI=pt,dI=z_,{isGTE:pI}=Pt,mI=t=>{const e={center:[0,0,0],height:2,radius:1,segments:32},{center:n,height:i,radius:s,segments:r}=Object.assign({},e,t);if(!pI(s,0))throw new Error("radius must be positive");return i===0||s===0?hI.create():dI({center:n,height:i,startRadius:[s,s],endRadius:[s,s],segments:r})};var V_=mI;const{TAU:Hp}=Ye,Ce=Be,zp=pt,Vp=nt,{sin:$p,cos:Gp}=Bt,{isGTE:gI,isNumberArray:Wp}=Pt,_I=t=>{const e={center:[0,0,0],radius:[1,1,1],segments:32,axes:[[1,0,0],[0,-1,0],[0,0,1]]},{center:n,radius:i,segments:s,axes:r}=Object.assign({},e,t);if(!Wp(n,3))throw new Error("center must be an array of X, Y and Z values");if(!Wp(i,3))throw new Error("radius must be an array of X, Y and Z values");if(!i.every(m=>m>=0))throw new Error("radius values must be positive");if(!gI(s,4))throw new Error("segments must be four or more");if(i[0]===0||i[1]===0||i[2]===0)return zp.create();const o=Ce.scale(Ce.create(),Ce.normalize(Ce.create(),r[0]),i[0]),a=Ce.scale(Ce.create(),Ce.normalize(Ce.create(),r[1]),i[1]),l=Ce.scale(Ce.create(),Ce.normalize(Ce.create(),r[2]),i[2]),c=Math.round(s/4);let u;const f=[],h=Ce.create(),d=Ce.create();for(let m=0;m<=s;m++){const _=Hp*m/s,g=Ce.add(Ce.create(),Ce.scale(h,o,Gp(_)),Ce.scale(d,a,$p(_)));if(m>0){let p,S;for(let y=0;y<=c;y++){const x=Hp/4*y/c,b=Gp(x),M=$p(x);if(y>0){let T=[],L;L=Ce.subtract(Ce.create(),Ce.scale(h,u,p),Ce.scale(d,l,S)),T.push(Ce.add(L,L,n)),L=Ce.subtract(Ce.create(),Ce.scale(h,g,p),Ce.scale(d,l,S)),T.push(Ce.add(L,L,n)),y<c&&(L=Ce.subtract(Ce.create(),Ce.scale(h,g,b),Ce.scale(d,l,M)),T.push(Ce.add(L,L,n))),L=Ce.subtract(Ce.create(),Ce.scale(h,u,b),Ce.scale(d,l,M)),T.push(Ce.add(L,L,n)),f.push(Vp.create(T)),T=[],L=Ce.add(Ce.create(),Ce.scale(h,u,p),Ce.scale(d,l,S)),T.push(Ce.add(Ce.create(),n,L)),L=Ce.add(L,Ce.scale(h,g,p),Ce.scale(d,l,S)),T.push(Ce.add(Ce.create(),n,L)),y<c&&(L=Ce.add(L,Ce.scale(h,g,b),Ce.scale(d,l,M)),T.push(Ce.add(Ce.create(),n,L))),L=Ce.add(L,Ce.scale(h,u,b),Ce.scale(d,l,M)),T.push(Ce.add(Ce.create(),n,L)),T.reverse(),f.push(Vp.create(T))}p=b,S=M}}u=g}return zp.create(f)};var $_=_I;const vI=pt,xI=nt,{isNumberArray:Xp}=Pt,yI=t=>{const e={points:[],faces:[],colors:void 0,orientation:"outward"},{points:n,faces:i,colors:s,orientation:r}=Object.assign({},e,t);if(!(Array.isArray(n)&&Array.isArray(i)))throw new Error("points and faces must be arrays");if(n.length<3)throw new Error("three or more points are required");if(i.length<1)throw new Error("one or more faces are required");if(s){if(!Array.isArray(s))throw new Error("colors must be an array");if(s.length!==i.length)throw new Error("faces and colors must have the same length")}n.forEach((a,l)=>{if(!Xp(a,3))throw new Error(`point ${l} must be an array of X, Y, Z values`)}),i.forEach((a,l)=>{if(a.length<3)throw new Error(`face ${l} must contain 3 or more indexes`);if(!Xp(a,a.length))throw new Error(`face ${l} must be an array of numbers`)}),r!=="outward"&&i.forEach(a=>a.reverse());const o=i.map((a,l)=>{const c=xI.create(a.map(u=>n[u]));return s&&s[l]&&(c.color=s[l]),c});return vI.create(o)};var G_=yI;const qp=gt,jp=Be,Yp=pt,bI=G_,{isGTE:Zp}=Pt,MI=t=>{const e={radius:1,frequency:6};let{radius:n,frequency:i}=Object.assign({},e,t);if(!Zp(n,0))throw new Error("radius must be positive");if(!Zp(i,6))throw new Error("frequency must be six or more");if(n===0)return Yp.create();i=Math.floor(i/6);const s=[[.850651,0,-.525731],[.850651,-0,.525731],[-.850651,-0,.525731],[-.850651,0,-.525731],[0,-.525731,.850651],[0,.525731,.850651],[0,.525731,-.850651],[0,-.525731,-.850651],[-.525731,-.850651,-0],[.525731,-.850651,-0],[.525731,.850651,0],[-.525731,.850651,0]],r=[[0,9,1],[1,10,0],[6,7,0],[10,6,0],[7,9,0],[5,1,4],[4,1,9],[5,10,1],[2,8,3],[3,11,2],[2,5,4],[4,8,2],[2,11,5],[3,7,6],[6,11,3],[8,7,3],[9,8,4],[11,10,5],[10,11,6],[8,9,7]],o=(h,d,m)=>{const _=h[0],g=h[1],p=h[2];let S=m;const y=[],x=[];for(let b=0;b<d;b++)for(let M=0;M<d-b;M++){const T=b/d,L=(b+1)/d,v=M/(d-b),w=(M+1)/(d-b),N=d-b-1?M/(d-b-1):1,U=[];U[0]=a(a(_,g,v),p,T),U[1]=a(a(_,g,w),p,T),U[2]=a(a(_,g,N),p,L);for(let I=0;I<3;I++){const F=jp.length(U[I]);for(let k=0;k<3;k++)U[I][k]/=F}if(y.push(U[0],U[1],U[2]),x.push([S,S+1,S+2]),S+=3,M<d-b-1){const I=d-b-1?(M+1)/(d-b-1):1;U[0]=a(a(_,g,w),p,T),U[1]=a(a(_,g,I),p,L),U[2]=a(a(_,g,N),p,L);for(let F=0;F<3;F++){const k=jp.length(U[F]);for(let H=0;H<3;H++)U[F][H]/=k}y.push(U[0],U[1],U[2]),x.push([S,S+1,S+2]),S+=3}}return{points:y,triangles:x,offset:S}},a=(h,d,m)=>{const _=1-m,g=[];for(let p=0;p<3;p++)g[p]=h[p]*_+d[p]*m;return g};let l=[],c=[],u=0;for(let h=0;h<r.length;h++){const d=o([s[r[h][0]],s[r[h][1]],s[r[h][2]]],i,u);l=l.concat(d.points),c=c.concat(d.triangles),u=d.offset}let f=bI({points:l,faces:c,orientation:"inward"});return n!==1&&(f=Yp.transform(qp.fromScaling(qp.create(),[n,n,n]),f)),f};var SI=MI;const EI=Ln,wI=t=>{if(!Array.isArray(t))throw new Error("points must be an array");return EI.fromPoints({},t)};var TI=wI;const _a=mt,AI=t=>{const e={points:[],paths:[],orientation:"counterclockwise"},{points:n,paths:i,orientation:s}=Object.assign({},e,t);if(!(Array.isArray(n)&&Array.isArray(i)))throw new Error("points and paths must be arrays");let r=n;Array.isArray(n[0])&&(Array.isArray(n[0][0])||(r=[n])),r.forEach((u,f)=>{if(!Array.isArray(u))throw new Error("list of points "+f+" must be an array");if(u.length<3)throw new Error("list of points "+f+" must contain three or more points");u.forEach((h,d)=>{if(!Array.isArray(h))throw new Error("list of points "+f+", point "+d+" must be an array");if(h.length<2)throw new Error("list of points "+f+", point "+d+" must contain by X and Y values")})});let o=i;if(i.length===0){let u=0;o=r.map(f=>f.map(h=>u++))}const a=[];r.forEach(u=>u.forEach(f=>a.push(f)));let l=[];o.forEach(u=>{const f=u.map(d=>a[d]),h=_a.fromPoints(f);l=l.concat(_a.toSides(h))});let c=_a.create(l);return s==="clockwise"&&(c=_a.reverse(c)),c};var RI=AI;const Oi=We,Kp=mt,{isNumberArray:Jp}=Pt,CI=t=>{const e={center:[0,0],size:[2,2]},{center:n,size:i}=Object.assign({},e,t);if(!Jp(n,2))throw new Error("center must be an array of X and Y values");if(!Jp(i,2))throw new Error("size must be an array of X and Y values");if(!i.every(a=>a>=0))throw new Error("size values must be positive");if(i[0]===0||i[1]===0)return Kp.create();const s=[i[0]/2,i[1]/2],r=[s[0],-s[1]],o=[Oi.subtract(Oi.create(),n,s),Oi.add(Oi.create(),n,r),Oi.add(Oi.create(),n,s),Oi.subtract(Oi.create(),n,r)];return Kp.fromPoints(o)};var Tf=CI;const{EPS:Ba,TAU:$r}=Ye,tu=We,xt=Be,Qp=pt,Sr=nt,{sin:PI,cos:LI}=Bt,{isGTE:em,isNumberArray:tm}=Pt,DI=wf,nm=(t,e,n,i,s,r)=>{const o=$r/4*s/i,a=LI(o),l=PI(o),c=i-s;let u=n*a,f=e[2]-(n-n*l);r||(f=n-n*l-e[2]),u=u>Ba?u:0;const h=xt.add(xt.create(),t,[e[0]-n,e[1]-n,f]),d=xt.add(xt.create(),t,[n-e[0],e[1]-n,f]),m=xt.add(xt.create(),t,[n-e[0],n-e[1],f]),_=xt.add(xt.create(),t,[e[0]-n,n-e[1],f]),g=[],p=[],S=[],y=[];for(let x=0;x<=c;x++){const b=c>0?$r/4*x/c:0,M=tu.fromAngleRadians(tu.create(),b);tu.scale(M,M,u);const T=xt.fromVec2(xt.create(),M);g.push(xt.add(xt.create(),h,T)),xt.rotateZ(T,T,[0,0,0],$r/4),p.push(xt.add(xt.create(),d,T)),xt.rotateZ(T,T,[0,0,0],$r/4),S.push(xt.add(xt.create(),m,T)),xt.rotateZ(T,T,[0,0,0],$r/4),y.push(xt.add(xt.create(),_,T))}return r?[g,p,S,y]:(g.reverse(),p.reverse(),S.reverse(),y.reverse(),[y,S,p,g])},im=(t,e)=>{const n=[];for(let i=0;i<t.length;i++){const s=t[i],r=e[i];for(let o=0;o<s.length-1;o++)n.push(Sr.create([s[o],s[o+1],r[o]])),o<r.length-1&&n.push(Sr.create([r[o],s[o+1],r[o+1]]))}return n},sm=(t,e)=>{const n=[];for(let i=0;i<t.length;i++){let s=t[i],r=e[i];const o=s[s.length-1],a=r[r.length-1],l=(i+1)%t.length;s=t[l],r=e[l];const c=s[0],u=r[0];n.push(Sr.create([o,c,u,a]))}return n},UI=(t,e)=>{t=[t[3],t[2],t[1],t[0]],t=t.map(r=>r.slice().reverse());const n=[];t.forEach(r=>{r.forEach(o=>n.push(o))});const i=[];e.forEach(r=>{r.forEach(o=>i.push(o))});const s=[];for(let r=0;r<i.length;r++){const o=(r+1)%i.length;s.push(Sr.create([n[r],n[o],i[o],i[r]]))}return s},II=t=>{const e={center:[0,0,0],size:[2,2,2],roundRadius:.2,segments:32};let{center:n,size:i,roundRadius:s,segments:r}=Object.assign({},e,t);if(!tm(n,3))throw new Error("center must be an array of X, Y and Z values");if(!tm(i,3))throw new Error("size must be an array of X, Y and Z values");if(!i.every(c=>c>=0))throw new Error("size values must be positive");if(!em(s,0))throw new Error("roundRadius must be positive");if(!em(r,4))throw new Error("segments must be four or more");if(i[0]===0||i[1]===0||i[2]===0)return Qp.create();if(s===0)return DI({center:n,size:i});if(i=i.map(c=>c/2),s>i[0]-Ba||s>i[1]-Ba||s>i[2]-Ba)throw new Error("roundRadius must be smaller than the radius of all dimensions");r=Math.floor(r/4);let o=null,a=null,l=[];for(let c=0;c<=r;c++){const u=nm(n,i,s,r,c,!0),f=nm(n,i,s,r,c,!1);if(c===0&&(l=l.concat(UI(f,u))),o&&(l=l.concat(im(o,u),sm(o,u))),a&&(l=l.concat(im(a,f),sm(a,f))),c===r){let h=u.map(d=>d[0]);l.push(Sr.create(h)),h=f.map(d=>d[0]),l.push(Sr.create(h))}o=u,a=f}return Qp.create(l)};var NI=II;const{EPS:FI,TAU:rm}=Ye,ve=Be,om=pt,OI=nt,{sin:am,cos:lm}=Bt,{isGTE:va,isNumberArray:kI}=Pt,BI=V_,HI=t=>{const e={center:[0,0,0],height:2,radius:1,roundRadius:.2,segments:32},{center:n,height:i,radius:s,roundRadius:r,segments:o}=Object.assign({},e,t);if(!kI(n,3))throw new Error("center must be an array of X, Y and Z values");if(!va(i,0))throw new Error("height must be positive");if(!va(s,0))throw new Error("radius must be positive");if(!va(r,0))throw new Error("roundRadius must be positive");if(r>s)throw new Error("roundRadius must be smaller than the radius");if(!va(o,4))throw new Error("segments must be four or more");if(i===0||s===0)return om.create();if(r===0)return BI({center:n,height:i,radius:s});const a=[0,0,-(i/2)],l=[0,0,i/2],c=ve.subtract(ve.create(),l,a),u=ve.length(c);if(2*r>u-FI)throw new Error("height must be larger than twice roundRadius");let f;Math.abs(c[0])>Math.abs(c[1])?f=ve.fromValues(0,1,0):f=ve.fromValues(1,0,0);const h=ve.scale(ve.create(),ve.normalize(ve.create(),c),r),d=ve.scale(ve.create(),ve.normalize(ve.create(),ve.cross(ve.create(),h,f)),s),m=ve.scale(ve.create(),ve.normalize(ve.create(),ve.cross(ve.create(),d,h)),s);ve.add(a,a,h),ve.subtract(l,l,h);const _=Math.floor(.25*o),g=M=>{const T=M.map(L=>ve.add(L,L,n));return OI.create(T)},p=[],S=ve.create(),y=ve.create();let x;for(let M=0;M<=o;M++){const T=rm*M/o,L=ve.add(ve.create(),ve.scale(S,d,lm(T)),ve.scale(y,m,am(T)));if(M>0){let v=[];v.push(ve.add(ve.create(),a,L)),v.push(ve.add(ve.create(),a,x)),v.push(ve.add(ve.create(),l,x)),v.push(ve.add(ve.create(),l,L)),p.push(g(v));let w,N;for(let U=0;U<=_;U++){const I=rm/4*U/_,F=lm(I),k=am(I);if(U>0){v=[];let H;H=ve.add(ve.create(),a,ve.subtract(S,ve.scale(S,x,w),ve.scale(y,h,N))),v.push(H),H=ve.add(ve.create(),a,ve.subtract(S,ve.scale(S,L,w),ve.scale(y,h,N))),v.push(H),U<_&&(H=ve.add(ve.create(),a,ve.subtract(S,ve.scale(S,L,F),ve.scale(y,h,k))),v.push(H)),H=ve.add(ve.create(),a,ve.subtract(S,ve.scale(S,x,F),ve.scale(y,h,k))),v.push(H),p.push(g(v)),v=[],H=ve.add(ve.create(),ve.scale(S,x,w),ve.scale(y,h,N)),ve.add(H,H,l),v.push(H),H=ve.add(ve.create(),ve.scale(S,L,w),ve.scale(y,h,N)),ve.add(H,H,l),v.push(H),U<_&&(H=ve.add(ve.create(),ve.scale(S,L,F),ve.scale(y,h,k)),ve.add(H,H,l),v.push(H)),H=ve.add(ve.create(),ve.scale(S,x,F),ve.scale(y,h,k)),ve.add(H,H,l),v.push(H),v.reverse(),p.push(g(v))}w=F,N=k}}x=L}return om.create(p)};var zI=HI;const{EPS:cm,TAU:xa}=Ye,dt=We,um=mt,{isGTE:fm,isNumberArray:hm}=Pt,VI=Tf,$I=t=>{const e={center:[0,0],size:[2,2],roundRadius:.2,segments:32};let{center:n,size:i,roundRadius:s,segments:r}=Object.assign({},e,t);if(!hm(n,2))throw new Error("center must be an array of X and Y values");if(!hm(i,2))throw new Error("size must be an array of X and Y values");if(!i.every(_=>_>=0))throw new Error("size values must be positive");if(!fm(s,0))throw new Error("roundRadius must be positive");if(!fm(r,4))throw new Error("segments must be four or more");if(i[0]===0||i[1]===0)return um.create();if(s===0)return VI({center:n,size:i});if(i=i.map(_=>_/2),s>i[0]-cm||s>i[1]-cm)throw new Error("roundRadius must be smaller than the radius of all dimensions");const o=Math.floor(r/4),a=dt.add(dt.create(),n,[i[0]-s,i[1]-s]),l=dt.add(dt.create(),n,[s-i[0],i[1]-s]),c=dt.add(dt.create(),n,[s-i[0],s-i[1]]),u=dt.add(dt.create(),n,[i[0]-s,s-i[1]]),f=[],h=[],d=[],m=[];for(let _=0;_<=o;_++){const g=xa/4*_/o,p=dt.fromAngleRadians(dt.create(),g);dt.scale(p,p,s),f.push(dt.add(dt.create(),a,p)),dt.rotate(p,p,dt.create(),xa/4),h.push(dt.add(dt.create(),l,p)),dt.rotate(p,p,dt.create(),xa/4),d.push(dt.add(dt.create(),c,p)),dt.rotate(p,p,dt.create(),xa/4),m.push(dt.add(dt.create(),u,p))}return um.fromPoints(f.concat(h,d,m))};var GI=$I;const WI=$_,{isGTE:XI}=Pt,qI=t=>{const e={center:[0,0,0],radius:1,segments:32,axes:[[1,0,0],[0,-1,0],[0,0,1]]};let{center:n,radius:i,segments:s,axes:r}=Object.assign({},e,t);if(!XI(i,0))throw new Error("radius must be positive");return i=[i,i,i],WI({center:n,radius:i,segments:s,axes:r})};var jI=qI;const YI=Tf,{isGTE:ZI}=Pt,KI=t=>{const e={center:[0,0],size:2};let{center:n,size:i}=Object.assign({},e,t);if(!ZI(i,0))throw new Error("size must be positive");return i=[i,i],YI({center:n,size:i})};var JI=KI;const{TAU:W_}=Ye,to=We,QI=mt,{isGT:eN,isGTE:ya,isNumberArray:tN}=Pt,nN=(t,e)=>t>0&&e>1&&e<t/2?Math.cos(Math.PI*e/t)/Math.cos(Math.PI*(e-1)/t):0,dm=(t,e,n,i)=>{const s=W_/t,r=[];for(let o=0;o<t;o++){const a=to.fromAngleRadians(to.create(),s*o+n);to.scale(a,a,e),to.add(a,i,a),r.push(a)}return r},iN=t=>{const e={center:[0,0],vertices:5,outerRadius:1,innerRadius:0,density:2,startAngle:0};let{center:n,vertices:i,outerRadius:s,innerRadius:r,density:o,startAngle:a}=Object.assign({},e,t);if(!tN(n,2))throw new Error("center must be an array of X and Y values");if(!ya(i,2))throw new Error("vertices must be two or more");if(!eN(s,0))throw new Error("outerRadius must be greater than zero");if(!ya(r,0))throw new Error("innerRadius must be greater than zero");if(!ya(a,0))throw new Error("startAngle must be greater than zero");if(i=Math.floor(i),o=Math.floor(o),a=a%W_,r===0){if(!ya(o,2))throw new Error("density must be two or more");r=s*nN(i,o)}const l=to.clone(n),c=dm(i,s,a,l),u=dm(i,r,a+Math.PI/i,l),f=[];for(let h=0;h<i;h++)f.push(c[h]),f.push(u[h]);return QI.fromPoints(f)};var sN=iN;const X_=t=>t.reduce((e,n)=>Array.isArray(n)?e.concat(X_(n)):e.concat(n),[]);var Dn=X_;const rN=Dn,pm=gt,mm=Zi,gm=mt,_m=pt,vm=Ln,Ll=(t,...e)=>{const n={origin:[0,0,0],normal:[0,0,1]},{origin:i,normal:s}=Object.assign({},n,t);if(e=rN(e),e.length===0)throw new Error("wrong number of arguments");const r=mm.fromNormalAndPoint(mm.create(),s,i);if(Number.isNaN(r[0]))throw new Error("the given origin and normal do not define a proper plane");const o=pm.mirrorByPlane(pm.create(),r),a=e.map(l=>vm.isA(l)?vm.transform(o,l):gm.isA(l)?gm.transform(o,l):_m.isA(l)?_m.transform(o,l):l);return a.length===1?a[0]:a},oN=(...t)=>Ll({normal:[1,0,0]},t),aN=(...t)=>Ll({normal:[0,1,0]},t),lN=(...t)=>Ll({normal:[0,0,1]},t);var no={mirror:Ll,mirrorX:oN,mirrorY:aN,mirrorZ:lN};const xm=Zi,ls=Be,cN=t=>{const e=t.edges;if(e.length<3)throw new Error("slices must have 3 or more edges to calculate a plane");const n=e.reduce((o,a)=>ls.add(ls.create(),o,a[0]),ls.create());ls.scale(n,n,1/e.length);let i,s=0;e.forEach(o=>{if(!ls.equals(o[0],o[1])){const a=ls.squaredDistance(n,o[0]);a>s&&(i=o,s=a)}});const r=e.find(o=>ls.equals(o[1],i[0]));return xm.fromPoints(xm.create(),r[0],i[0],i[1])};var q_=cN;const uN=t=>(t||(t=[]),{edges:t});var Ls=uN;const fN=Ls,ym=Be,hN=(...t)=>{let e,n;return t.length===1?(e=fN(),n=t[0]):(e=t[0],n=t[1]),e.edges=n.edges.map(i=>[ym.clone(i[0]),ym.clone(i[1])]),e};var dN=hN;const pN=Be,mN=(t,e)=>{const n=t.edges,i=e.edges;return n.length!==i.length?!1:n.reduce((r,o,a)=>{const l=i[a],c=pN.squaredDistance(o[0],l[0]);return r&&c<Number.EPSILON},!0)};var gN=mN;const ba=Be,_N=Ls,vN=t=>{if(!Array.isArray(t))throw new Error("the given points must be an array");if(t.length<3)throw new Error("the given points must contain THREE or more points");const e=[];let n=t[t.length-1];return t.forEach(i=>{i.length===2&&e.push([ba.fromVec2(ba.create(),n),ba.fromVec2(ba.create(),i)]),i.length===3&&e.push([n,i]),n=i}),_N(e)};var xN=vN;const Ma=Be,yN=Ls,bN=t=>{if(!Array.isArray(t))throw new Error("the given sides must be an array");const e=[];return t.forEach(n=>{e.push([Ma.fromVec2(Ma.create(),n[0]),Ma.fromVec2(Ma.create(),n[1])])}),yN(e)};var MN=bN;const SN=t=>!!(t&&typeof t=="object"&&"edges"in t&&Array.isArray(t.edges));var EN=SN;const wN=Ls,TN=(...t)=>{let e,n;return t.length===1?(e=wN(),n=t[0]):(e=t[0],n=t[1]),e.edges=n.edges.map(i=>[i[1],i[0]]),e};var AN=TN;const RN=t=>t.edges;var CN=RN;const PN=(t,e)=>{let n,i,s,r,o,a=1;do{i=t,t=null;let l=null;for(o=0;i;){o++,s=i;let c=0;for(n=0;n<a&&(c++,s=s.nextZ,!!s);n++);let u=a;for(;c>0||u>0&&s;)c!==0&&(u===0||!s||e(i)<=e(s))?(r=i,i=i.nextZ,c--):(r=s,s=s.nextZ,u--),l?l.nextZ=r:t=r,r.prevZ=l,l=r;i=s}l.nextZ=null,a*=2}while(o>1);return t};var LN=PN;const DN=LN;let j_=class{constructor(e,n,i){this.i=e,this.x=n,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}};const UN=(t,e,n,i)=>{const s=new j_(t,e,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s},IN=t=>{t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)};var Y_={Node:j_,insertNode:UN,removeNode:IN,sortLinked:DN};const NN=(t,e,n,i,s,r,o,a)=>(s-o)*(e-a)-(t-o)*(r-a)>=0&&(t-o)*(i-a)-(n-o)*(e-a)>=0&&(n-o)*(r-a)-(s-o)*(i-a)>=0,FN=(t,e,n)=>(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y);var Af={area:FN,pointInTriangle:NN};const{Node:bm,insertNode:Mm,removeNode:Qa}=Y_,{area:ln}=Af,ON=(t,e,n,i,s)=>{let r;if(s===$N(t,e,n,i)>0)for(let o=e;o<n;o+=i)r=Mm(o,t[o],t[o+1],r);else for(let o=n-i;o>=e;o-=i)r=Mm(o,t[o],t[o+1],r);return r&&Dl(r,r.next)&&(Qa(r),r=r.next),r},Z_=(t,e)=>{if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(Dl(n,n.next)||ln(n.prev,n,n.next)===0)){if(Qa(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e},kN=(t,e,n)=>{let i=t;do{const s=i.prev,r=i.next.next;!Dl(s,r)&&K_(s,i,i.next,r)&&To(s,r)&&To(r,s)&&(e.push(s.i/n),e.push(i.i/n),e.push(r.i/n),Qa(i),Qa(i.next),i=t=r),i=i.next}while(i!==t);return Z_(i)},BN=(t,e)=>{let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&K_(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1},To=(t,e)=>ln(t.prev,t,t.next)<0?ln(t,e,t.next)>=0&&ln(t,t.prev,e)>=0:ln(t,e,t.prev)<0||ln(t,t.next,e)<0,HN=(t,e)=>{let n=t,i=!1;const s=(t.x+e.x)/2,r=(t.y+e.y)/2;do n.y>r!=n.next.y>r&&n.next.y!==n.y&&s<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i},zN=(t,e)=>{const n=new bm(t.i,t.x,t.y),i=new bm(e.i,e.x,e.y),s=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=s,s.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i},VN=(t,e)=>t.next.i!==e.i&&t.prev.i!==e.i&&!BN(t,e)&&(To(t,e)&&To(e,t)&&HN(t,e)&&(ln(t.prev,t,e.prev)||ln(t,e.prev,e))||Dl(t,e)&&ln(t.prev,t,t.next)>0&&ln(e.prev,e,e.next)>0),K_=(t,e,n,i)=>{const s=Math.sign(ln(t,e,n)),r=Math.sign(ln(t,e,i)),o=Math.sign(ln(n,i,t)),a=Math.sign(ln(n,i,e));return!!(s!==r&&o!==a||s===0&&Sa(t,n,e)||r===0&&Sa(t,i,e)||o===0&&Sa(n,t,i)||a===0&&Sa(n,e,i))},Sa=(t,e,n)=>e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y),$N=(t,e,n,i)=>{let s=0;for(let r=e,o=n-i;r<n;r+=i)s+=(t[o]-t[r])*(t[r+1]+t[o+1]),o=r;return s},Dl=(t,e)=>t.x===e.x&&t.y===e.y;var J_={cureLocalIntersections:kN,filterPoints:Z_,isValidDiagonal:VN,linkedPolygon:ON,locallyInside:To,splitPolygon:zN};const{filterPoints:Bu,linkedPolygon:GN,locallyInside:WN,splitPolygon:XN}=J_,{area:Sm,pointInTriangle:qN}=Af,jN=(t,e,n,i)=>{const s=[];for(let r=0,o=e.length;r<o;r++){const a=e[r]*i,l=r<o-1?e[r+1]*i:t.length,c=GN(t,a,l,i,!1);c===c.next&&(c.steiner=!0),s.push(JN(c))}s.sort((r,o)=>r.x-o.x);for(let r=0;r<s.length;r++)n=YN(s[r],n),n=Bu(n,n.next);return n},YN=(t,e)=>{const n=ZN(t,e);if(!n)return e;const i=XN(n,t),s=Bu(n,n.next);return Bu(i,i.next),e===n?s:e},ZN=(t,e)=>{let n=e;const i=t.x,s=t.y;let r=-1/0,o;do{if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y){const f=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>r){if(r=f,f===i){if(s===n.y)return n;if(s===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(i===r)return o;const a=o,l=o.x,c=o.y;let u=1/0;n=o;do{if(i>=n.x&&n.x>=l&&i!==n.x&&qN(s<c?i:r,s,l,c,s<c?r:i,s,n.x,n.y)){const f=Math.abs(s-n.y)/(i-n.x);WN(n,t)&&(f<u||f===u&&(n.x>o.x||n.x===o.x&&KN(o,n)))&&(o=n,u=f)}n=n.next}while(n!==a);return o},KN=(t,e)=>Sm(t.prev,t,e.prev)<0&&Sm(e.next,t,t.next)<0,JN=t=>{let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n};var QN=jN;const eF=QN,{removeNode:tF,sortLinked:nF}=Y_,{cureLocalIntersections:iF,filterPoints:el,isValidDiagonal:sF,linkedPolygon:rF,splitPolygon:oF}=J_,{area:gs,pointInTriangle:io}=Af,aF=(t,e,n=2)=>{const i=e&&e.length,s=i?e[0]*n:t.length;let r=rF(t,0,s,n,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,f;if(i&&(r=eF(t,e,r,n)),t.length>80*n){a=c=t[0],l=u=t[1];for(let h=n;h<s;h+=n){const d=t[h],m=t[h+1];d<a&&(a=d),m<l&&(l=m),d>c&&(c=d),m>u&&(u=m)}f=Math.max(c-a,u-l),f=f!==0?1/f:0}return Ao(r,o,n,a,l,f),o},Ao=(t,e,n,i,s,r,o)=>{if(!t)return;!o&&r&&fF(t,i,s,r);let a=t,l,c;for(;t.prev!==t.next;){if(l=t.prev,c=t.next,r?cF(t,i,s,r):lF(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),tF(t),t=c.next,a=c.next;continue}if(t=c,t===a){o?o===1?(t=iF(el(t),e,n),Ao(t,e,n,i,s,r,2)):o===2&&uF(t,e,n,i,s,r):Ao(el(t),e,n,i,s,r,1);break}}},lF=t=>{const e=t.prev,n=t,i=t.next;if(gs(e,n,i)>=0)return!1;let s=t.next.next;for(;s!==t.prev;){if(io(e.x,e.y,n.x,n.y,i.x,i.y,s.x,s.y)&&gs(s.prev,s,s.next)>=0)return!1;s=s.next}return!0},cF=(t,e,n,i)=>{const s=t.prev,r=t,o=t.next;if(gs(s,r,o)>=0)return!1;const a=s.x<r.x?s.x<o.x?s.x:o.x:r.x<o.x?r.x:o.x,l=s.y<r.y?s.y<o.y?s.y:o.y:r.y<o.y?r.y:o.y,c=s.x>r.x?s.x>o.x?s.x:o.x:r.x>o.x?r.x:o.x,u=s.y>r.y?s.y>o.y?s.y:o.y:r.y>o.y?r.y:o.y,f=Hu(a,l,e,n,i),h=Hu(c,u,e,n,i);let d=t.prevZ,m=t.nextZ;for(;d&&d.z>=f&&m&&m.z<=h;){if(d!==t.prev&&d!==t.next&&io(s.x,s.y,r.x,r.y,o.x,o.y,d.x,d.y)&&gs(d.prev,d,d.next)>=0||(d=d.prevZ,m!==t.prev&&m!==t.next&&io(s.x,s.y,r.x,r.y,o.x,o.y,m.x,m.y)&&gs(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;d&&d.z>=f;){if(d!==t.prev&&d!==t.next&&io(s.x,s.y,r.x,r.y,o.x,o.y,d.x,d.y)&&gs(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;m&&m.z<=h;){if(m!==t.prev&&m!==t.next&&io(s.x,s.y,r.x,r.y,o.x,o.y,m.x,m.y)&&gs(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0},uF=(t,e,n,i,s,r)=>{let o=t;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&sF(o,a)){let l=oF(o,a);o=el(o,o.next),l=el(l,l.next),Ao(o,e,n,i,s,r),Ao(l,e,n,i,s,r);return}a=a.next}o=o.next}while(o!==t)},fF=(t,e,n,i)=>{let s=t;do s.z===null&&(s.z=Hu(s.x,s.y,e,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,nF(s,r=>r.z)},Hu=(t,e,n,i,s)=>(t=32767*(t-n)*s,e=32767*(e-i)*s,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1);var hF=aF;const{NEPS:nu}=Ye,dF=(t,e)=>Math.abs(t[0]-e[0])<=nu&&Math.abs(t[1]-e[1])<=nu&&Math.abs(t[2]-e[2])<=nu;var pF=dF;const mF=t=>{let e=0;for(let n=0;n<t.length;n++){const i=(n+1)%t.length;e+=t[n][0]*t[i][1],e-=t[i][0]*t[n][1]}return e/2};var Q_=mF;const gF=(t,e,n)=>{let i=n-t[1],s=e[1]-t[1];s<0&&(i=-i,s=-s);let r;return i<=0?r=0:i>=s?r=1:s<1e-10?r=.5:r=i/s,t[0]+r*(e[0]-t[0])};var _F=gF;const vF=(t,e,n,i,s,r)=>{const a=1/(t*i-e*n);let l=s*i-e*r,c=-s*n+t*r;return l*=a,c*=a,[l,c]};var xF=vF,Ul={area:Q_,cos:Bt.cos,sin:Bt.sin,solve2Linear:xF};const yF=Q_,bF=t=>yF(t.vertices);var MF=bF;const SF=t=>((t===void 0||t.length<3)&&(t=[]),{vertices:t});var EF=SF;const wF=EF,TF=t=>{const e=t.vertices.slice().reverse();return wF(e)};var AF=TF;const RF=MF,CF=AF,PF=(t,e)=>{if(t.length===0)return 0;const n=e.vertices;return n.length<3?0:(RF(e)<0&&(e=CF(e)),t.reduce((s,r)=>s+LF(r,n),0)===t.length?1:0)},LF=(t,e)=>{const n=e.length,i=t[0],s=t[1];let r=e[n-1],o=e[0],a=r[1]>s,l=0,c=0;for(let u=n+1;--u;){const f=o[1]>s;if(a!==f){const h=r[0]>i,d=o[0]>i;(h&&d||o[0]-(o[1]-s)*(r[0]-o[0])/(r[1]-o[1])>=i)&&(l=!l)}a=f,r=o,o=e[++c]}return l};var DF=PF,UF={arePointsInside:DF};const{area:IF}=Ul,{toOutlines:NF}=mt,{arePointsInside:FF}=UF,OF=t=>{const e=NF(t),n=[],i=[];e.forEach((o,a)=>{const l=IF(o);l<0?i.push(a):l>0&&n.push(a)});const s=[],r=[];return n.forEach((o,a)=>{const l=e[o];s[a]=[],i.forEach((c,u)=>{const f=e[c];FF([f[0]],{vertices:l})&&(s[a].push(c),r[u]||(r[u]=[]),r[u].push(a))})}),i.forEach((o,a)=>{if(r[a]&&r[a].length>1){const l=kF(r[a],c=>s[c].length);r[a].forEach((c,u)=>{u!==l&&(s[c]=s[c].filter(f=>f!==o))})}}),s.map((o,a)=>({solid:e[n[a]],holes:o.map(l=>e[l])}))},kF=(t,e)=>{let n,i;return t.forEach((s,r)=>{const o=e(s);(i===void 0||o<i)&&(n=r,i=o)}),n};var BF=OF;const HF=mt,Em=Zi,zF=We,Ft=Be,VF=q_,$F=BF;let GF=class{constructor(e){this.plane=VF(e);const n=Ft.orthogonal(Ft.create(),this.plane),i=Ft.cross(Ft.create(),this.plane,n);this.v=Ft.normalize(i,i),this.u=Ft.cross(Ft.create(),this.v,this.plane),this.basisMap=new Map;const s=e.edges.map(o=>o.map(a=>this.to2D(a))),r=HF.create(s);this.roots=$F(r)}to2D(e){const n=zF.fromValues(Ft.dot(e,this.u),Ft.dot(e,this.v));return this.basisMap.set(n,e),n}to3D(e){const n=this.basisMap.get(e);if(n)return n;{console.log("Warning: point not in original slice");const i=Ft.scale(Ft.create(),this.u,e[0]),s=Ft.scale(Ft.create(),this.v,e[1]),r=Ft.scale(Ft.create(),Em,Em[3]),o=Ft.add(i,i,r);return Ft.add(s,s,o)}}};var WF=GF;const XF=nt,qF=hF,jF=WF,YF=t=>{const e=new jF(t),n=[];return e.roots.forEach(({solid:i,holes:s})=>{let r=i.length;const o=[];s.forEach((f,h)=>{o.push(r),r+=f.length});const a=[i,...s].flat(),l=a.flat(),c=f=>e.to3D(a[f]),u=qF(l,o);for(let f=0;f<u.length;f+=3){const h=u.slice(f,f+3).map(c);n.push(XF.fromPointsAndPlane(h,e.plane))}}),n};var ZF=YF;const wm=Be,KF=t=>t.reduce((e,n)=>e+=`[${wm.toString(n[0])}, ${wm.toString(n[1])}], `,""),JF=t=>`[${KF(t.edges)}]`;var QF=JF;const Ea=Be,eO=Ls,tO=(t,e)=>{const n=e.edges.map(i=>[Ea.transform(Ea.create(),i[0],t),Ea.transform(Ea.create(),i[1],t)]);return eO(n)};var nO=tO,Rf={calculatePlane:q_,clone:dN,create:Ls,equals:gN,fromPoints:xN,fromSides:MN,isA:EN,reverse:AN,toEdges:CN,toPolygons:ZF,toString:QF,transform:nO};const Tm=Be,iO=Ls,sO=t=>{if(!t.edges)return t;let e=t.edges;const n=new Map,i=new Map;e=e.filter(o=>!Tm.equals(o[0],o[1])),e.forEach(o=>{const a=o[0].toString(),l=o[1].toString();n.set(a,o[0]),n.set(l,o[1]),i.set(a,(i.get(a)||0)+1),i.set(l,(i.get(l)||0)-1)});const s=[],r=[];return i.forEach((o,a)=>{o<0&&s.push(a),o>0&&r.push(a)}),s.forEach(o=>{const a=n.get(o);let l=1/0,c;r.forEach(u=>{const f=n.get(u),h=Tm.distance(a,f);h<l&&(l=h,c=f)}),console.warn(`slice.repair: repairing vertex gap ${a} to ${c} distance ${l}`),e=e.map(u=>u[0].toString()===o?[c,u[1]]:u[1].toString()===o?[u[0],c]:u)}),iO(e)};var rO=sO;const{EPS:Am}=Ye,Qs=Be,wa=nt,Rm=Rf,zu=(t,e)=>t===e?t:t<e?zu(e,t):e===1?1:e===0?t:zu(e,t%e),oO=(t,e)=>t*e/zu(t,e),Cm=(t,e)=>{const n=t/e.length;if(n===1)return e;const i=Qs.fromValues(n,n,n),s=[];return e.forEach(r=>{const o=Qs.subtract(Qs.create(),r[1],r[0]);Qs.divide(o,o,i);let a=r[0];for(let l=1;l<=n;++l){const c=Qs.add(Qs.create(),a,o);s.push([a,c]),a=c}}),s},Pm=Am*Am/2*Math.sin(Math.PI/3),aO=(t,e)=>{let n=Rm.toEdges(t),i=Rm.toEdges(e);if(n.length!==i.length){const r=oO(n.length,i.length);r!==n.length&&(n=Cm(r,n)),r!==i.length&&(i=Cm(r,i))}const s=[];return n.forEach((r,o)=>{const a=i[o],l=wa.create([r[0],r[1],a[1]]),c=wa.measureArea(l);Number.isFinite(c)&&c>Pm&&s.push(l);const u=wa.create([r[0],a[1],a[0]]),f=wa.measureArea(u);Number.isFinite(f)&&f>Pm&&s.push(u)}),s};var lO=aO;const Lm=gt,Dm=mt,cO=pt,Vu=nt,$i=Rf,uO=rO,Um=lO,fO=(t,e,n)=>{let i=null;return Dm.isA(n)&&(i=$i.fromSides(Dm.toSides(n))),Vu.isA(n)&&(i=$i.fromPoints(Vu.toPoints(n))),t===0||t===1?$i.transform(Lm.fromTranslation(Lm.create(),[0,0,t]),i):null},hO=(t,e)=>{const n={numberOfSlices:2,capStart:!0,capEnd:!0,close:!1,repair:!0,callback:fO},{numberOfSlices:i,capStart:s,capEnd:r,close:o,repair:a,callback:l}=Object.assign({},n,t);if(i<2)throw new Error("numberOfSlices must be 2 or more");a&&(e=uO(e));const c=i-1;let u=null,f=null,h=null,d=[];for(let m=0;m<i;m++){const _=l(m/c,m,e);if(_){if(!$i.isA(_))throw new Error("the callback function must return slice objects");if($i.toEdges(_).length===0)throw new Error("the callback function must return slices with one or more edges");h&&(d=d.concat(Um(h,_))),m===0&&(u=_),m===i-1&&(f=_),h=_}}if(r){const m=$i.toPolygons(f);d=d.concat(m)}if(s){const m=$i.toPolygons(u).map(Vu.invert);d=d.concat(m)}return!s&&!r&&o&&!$i.equals(f,u)&&(d=d.concat(Um(f,u))),cO.create(d)};var dO=hO;const{TAU:gn}=Ye,Gr=gt,{mirrorX:pO}=no,Ta=mt,iu=Rf,mO=dO,gO=(t,e)=>{const n={segments:12,startAngle:0,angle:gn,overflow:"cap"};let{segments:i,startAngle:s,angle:r,overflow:o}=Object.assign({},n,t);if(i<3)throw new Error("segments must be greater then 3");s=Math.abs(s)>gn?s%gn:s,r=Math.abs(r)>gn?r%gn:r;let a=s+r;if(a=Math.abs(a)>gn?a%gn:a,a<s){const S=s;s=a,a=S}let l=a-s;if(l<=0&&(l=gn),Math.abs(l)<gn){const S=gn/i;i=Math.floor(Math.abs(l)/S),Math.abs(l)>i*S&&i++}let c=Ta.toSides(e);if(c.length===0)throw new Error("the given geometry cannot be empty");const u=c.filter(S=>S[0][0]<0),f=c.filter(S=>S[0][0]>=0);u.length>0&&f.length>0&&o==="cap"&&(u.length>f.length?(c=c.map(S=>{let y=S[0],x=S[1];return y=[Math.min(y[0],0),y[1]],x=[Math.min(x[0],0),x[1]],[y,x]}),e=Ta.create(c),e=pO(e)):f.length>=u.length&&(c=c.map(S=>{let y=S[0],x=S[1];return y=[Math.max(y[0],0),y[1]],x=[Math.max(x[0],0),x[1]],[y,x]}),e=Ta.create(c)));const d=l/i,m=Math.abs(l)<gn,_=iu.fromSides(Ta.toSides(e));iu.reverse(_,_);const g=Gr.create(),p=(S,y,x)=>{let b=d*y+s;return l===gn&&y===i&&(b=s),Gr.multiply(g,Gr.fromZRotation(g,b),Gr.fromXRotation(Gr.create(),gn/4)),iu.transform(g,x)};return t={numberOfSlices:i+1,capStart:m,capEnd:m,close:!m,callback:p},mO(t,_)};var _O=gO;const vO=Dn,Im=gt,Nm=mt,Fm=pt,Om=Ln,Il=(t,...e)=>{if(!Array.isArray(t))throw new Error("angles must be an array");if(e=vO(e),e.length===0)throw new Error("wrong number of arguments");for(t=t.slice();t.length<3;)t.push(0);const n=t[2],i=t[1],s=t[0],r=Im.fromTaitBryanRotation(Im.create(),n,i,s),o=e.map(a=>Om.isA(a)?Om.transform(r,a):Nm.isA(a)?Nm.transform(r,a):Fm.isA(a)?Fm.transform(r,a):a);return o.length===1?o[0]:o},xO=(t,...e)=>Il([t,0,0],e),yO=(t,...e)=>Il([0,t,0],e),bO=(t,...e)=>Il([0,0,t],e);var so={rotate:Il,rotateX:xO,rotateY:yO,rotateZ:bO};const MO=Dn,km=gt,Bm=mt,Hm=pt,zm=Ln,Nl=(t,...e)=>{if(!Array.isArray(t))throw new Error("offset must be an array");if(e=MO(e),e.length===0)throw new Error("wrong number of arguments");for(t=t.slice();t.length<3;)t.push(0);const n=km.fromTranslation(km.create(),t),i=e.map(s=>zm.isA(s)?zm.transform(n,s):Bm.isA(s)?Bm.transform(n,s):Hm.isA(s)?Hm.transform(n,s):s);return i.length===1?i[0]:i},SO=(t,...e)=>Nl([t,0,0],e),EO=(t,...e)=>Nl([0,t,0],e),wO=(t,...e)=>Nl([0,0,t],e);var Et={translate:Nl,translateX:SO,translateY:EO,translateZ:wO};const{TAU:TO}=Ye,AO=_O,{rotate:RO}=so,{translate:CO}=Et,PO=w_,{isGT:su,isGTE:ru}=Pt,LO=t=>{const e={innerRadius:1,innerSegments:32,outerRadius:4,outerSegments:32,innerRotation:0,startAngle:0,outerRotation:TO},{innerRadius:n,innerSegments:i,outerRadius:s,outerSegments:r,innerRotation:o,startAngle:a,outerRotation:l}=Object.assign({},e,t);if(!su(n,0))throw new Error("innerRadius must be greater than zero");if(!ru(i,3))throw new Error("innerSegments must be three or more");if(!su(s,0))throw new Error("outerRadius must be greater than zero");if(!ru(r,3))throw new Error("outerSegments must be three or more");if(!ru(a,0))throw new Error("startAngle must be positive");if(!su(l,0))throw new Error("outerRotation must be greater than zero");if(n>=s)throw new Error("inner circle is too large to rotate about the outer circle");let c=PO({radius:n,segments:i});return o!==0&&(c=RO([0,0,o],c)),c=CO([s,0],c),AO({startAngle:a,angle:l,segments:r},c)};var DO=LO;const{NEPS:Er}=Ye,Wr=We,UO=mt,{isNumberArray:IO}=Pt,$u=(t,e,n)=>Math.acos((t*t+e*e-n*n)/(2*t*e)),NO=(t,e,n)=>e>Er?Math.sqrt(t*t+n*n-2*t*n*Math.cos(e)):Math.sqrt((t-n)*(t-n)+t*n*e*e*(1-e*e/12)),FO=t=>{if(Math.abs(t[0]+t[1]+t[2]-Math.PI)>Er)throw new Error("AAA triangles require angles that sum to PI");const n=t[0],i=t[1],s=Math.PI-n-i,r=1,o=r/Math.sin(s)*Math.sin(n),a=r/Math.sin(s)*Math.sin(i);return Dr(n,i,s,o,a,r)},OO=t=>{const e=t[0],n=t[1],i=Math.PI+Er-e-n;if(i<Er)throw new Error("AAS triangles require angles that sum to PI");const s=t[2],r=s/Math.sin(e)*Math.sin(n),o=s/Math.sin(e)*Math.sin(i);return Dr(e,n,i,s,r,o)},kO=t=>{const e=t[0],n=t[2],i=Math.PI+Er-e-n;if(i<Er)throw new Error("ASA triangles require angles that sum to PI");const s=t[1],r=s/Math.sin(i)*Math.sin(e),o=s/Math.sin(i)*Math.sin(n);return Dr(e,n,i,r,o,s)},BO=t=>{const e=t[0],n=t[1],i=t[2],s=NO(e,n,i),r=$u(s,e,i),o=Math.PI-r-n;return Dr(r,n,o,i,s,e)},HO=t=>{const e=t[0],n=t[1],i=t[2],s=Math.asin(n*Math.sin(i)/e),r=Math.PI-s-i,o=e/Math.sin(i)*Math.sin(r);return Dr(s,r,i,n,o,e)},zO=t=>{const e=t[1],n=t[2],i=t[0];if(e+n<=i||n+i<=e||i+e<=n)throw new Error("SSS triangle is incorrect, as the longest side is longer than the sum of the other sides");const s=$u(n,i,e),r=$u(i,e,n),o=Math.PI-s-r;return Dr(s,r,o,e,n,i)},Dr=(t,e,n,i,s,r)=>{const o=Wr.fromValues(0,0),a=Wr.fromValues(r,0),l=Wr.fromValues(i,0);return Wr.add(l,Wr.rotate(l,l,[0,0],Math.PI-e),a),UO.fromPoints([o,a,l])},VO=t=>{const e={type:"SSS",values:[1,1,1]};let{type:n,values:i}=Object.assign({},e,t);if(typeof n!="string")throw new Error("triangle type must be a string");if(n=n.toUpperCase(),!((n[0]==="A"||n[0]==="S")&&(n[1]==="A"||n[1]==="S")&&(n[2]==="A"||n[2]==="S")))throw new Error("triangle type must contain three letters; A or S");if(!IO(i,3))throw new Error("triangle values must contain three values");if(!i.every(s=>s>0))throw new Error("triangle values must be greater than zero");switch(n){case"AAA":return FO(i);case"AAS":return OO(i);case"ASA":return kO(i);case"SAS":return BO(i);case"SSA":return HO(i);case"SSS":return zO(i);default:throw new Error("invalid triangle type, try again")}};var $O=VO,_n={arc:aL,circle:w_,cube:rI,cuboid:wf,cylinder:V_,cylinderElliptic:z_,ellipse:E_,ellipsoid:$_,geodesicSphere:SI,line:TI,polygon:RI,polyhedron:G_,rectangle:Tf,roundedCuboid:NI,roundedCylinder:zI,roundedRectangle:GI,sphere:jI,square:JI,star:sN,torus:DO,triangle:$O};const GO=mt,WO=pt,XO=Ln,qO=t=>{let e;for(const n of t){let i=0;if(GO.isA(n)&&(i=1),WO.isA(n)&&(i=2),XO.isA(n)&&(i=3),e&&i!==e)return!1;e=i}return!0};var jO=qO,Cf={geom2:mt,geom3:pt,path2:Ln,poly3:nt};const{EPS:YO}=Ye,ZO=(t,e)=>{let n=0;for(let i=0;i<e;i++)n+=t[1][i]-t[0][i];return YO*n/e};var KO=ZO;const JO=Dn,ti=We,Xr=Be,ev=mt,tv=pt,nv=Ln,Vm=nt,wr=new WeakMap,QO=t=>{let e=wr.get(t);if(e)return e;const n=nv.toPoints(t);let i;n.length===0?i=ti.create():i=ti.clone(n[0]);let s=ti.clone(i);return n.forEach(r=>{ti.min(i,i,r),ti.max(s,s,r)}),i=[i[0],i[1],0],s=[s[0],s[1],0],e=[i,s],wr.set(t,e),e},ek=t=>{let e=wr.get(t);if(e)return e;const n=ev.toPoints(t);let i;n.length===0?i=ti.create():i=ti.clone(n[0]);let s=ti.clone(i);return n.forEach(r=>{ti.min(i,i,r),ti.max(s,s,r)}),i=[i[0],i[1],0],s=[s[0],s[1],0],e=[i,s],wr.set(t,e),e},tk=t=>{let e=wr.get(t);if(e)return e;const n=tv.toPolygons(t);let i=Xr.create();if(n.length>0){const r=Vm.toPoints(n[0]);Xr.copy(i,r[0])}let s=Xr.clone(i);return n.forEach(r=>{Vm.toPoints(r).forEach(o=>{Xr.min(i,i,o),Xr.max(s,s,o)})}),i=[i[0],i[1],i[2]],s=[s[0],s[1],s[2]],e=[i,s],wr.set(t,e),e},nk=(...t)=>{if(t=JO(t),t.length===0)throw new Error("wrong number of arguments");const e=t.map(n=>nv.isA(n)?QO(n):ev.isA(n)?ek(n):tv.isA(n)?tk(n):[[0,0,0],[0,0,0]]);return e.length===1?e[0]:e};var Pf=nk;const ik=Dn,{geom2:sk,geom3:rk,path2:ok}=Cf,Lf=KO,Df=Pf,ak=t=>Lf(Df(t),2),lk=t=>Lf(Df(t),2),ck=t=>Lf(Df(t),3),uk=(...t)=>{if(t=ik(t),t.length===0)throw new Error("wrong number of arguments");const e=t.map(n=>ok.isA(n)?ak(n):sk.isA(n)?lk(n):rk.isA(n)?ck(n):0);return e.length===1?e[0]:e};var Uf=uk;const $m=We,fk=mt,hk=(t,e)=>{if(e.vertices.length<4)return null;const n=[],i=e.vertices.filter((o,a)=>o[2]>0?(n.push(a),!0):!1);if(i.length!==2)throw new Error("Assertion failed: fromFakePolygon: not enough points found");const s=i.map(o=>{const a=Math.round(o[0]/t)*t+0,l=Math.round(o[1]/t)*t+0;return $m.fromValues(a,l)});if($m.equals(s[0],s[1]))return null;const r=n[1]-n[0];if(r===1||r===3)r===1&&s.reverse();else throw new Error("Assertion failed: fromFakePolygon: unknown index ordering");return s},dk=(t,e)=>{const n=e.map(i=>hk(t,i)).filter(i=>i!==null);return fk.create(n)};var pk=dk;const ki=Be,mk=mt,gk=pt,_k=nt,vk=(t,e,n)=>{const i=[ki.fromVec2(ki.create(),n[0],t),ki.fromVec2(ki.create(),n[1],t),ki.fromVec2(ki.create(),n[1],e),ki.fromVec2(ki.create(),n[0],e)];return _k.create(i)},xk=(t,e)=>{const i=mk.toSides(e).map(r=>vk(t.z0,t.z1,r));return gk.create(i)};var yk=xk;const bk=()=>[0,1,0];var If=bk;const Mk=If,Sk=t=>{const e=Mk();return e[0]=t[0],e[1]=t[1],e[2]=t[2],e};var Ek=Sk;const ou=We,wk=t=>{const e=ou.normal(ou.create(),t);return ou.negate(e,e),e};var Nf=wk;const Gm=We,Tk=t=>Gm.scale(Gm.create(),t,t[2]);var Fl=Tk;const qr=We,Ak=Nf,Rk=Fl,Ck=(t,e)=>{const n=Rk(t),i=Ak(t),s=qr.subtract(qr.create(),e,n),r=qr.dot(s,i);return qr.scale(s,i,r),qr.add(s,s,n),s};var Pk=Ck;const Lk=(t,e)=>(t[0]=e[0],t[1]=e[1],t[2]=e[2],t);var iv=Lk;const Dk=We,Uk=(t,e)=>{let n=Dk.dot(e,t);return n=Math.abs(n-t[2]),n};var Ik=Uk;const Nk=(t,e)=>t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2];var Fk=Nk;const jr=We,Ok=(t,e,n)=>{const i=jr.subtract(jr.create(),n,e);jr.normal(i,i),jr.normalize(i,i);const s=jr.dot(e,i);return t[0]=i[0],t[1]=i[1],t[2]=s,t};var sv=Ok;const kk=If,Bk=(t,e,n)=>{const i=kk();return i[0]=t,i[1]=e,i[2]=n,i};var rv=Bk;const Hk=We,{solve2Linear:zk}=Ul,Vk=(t,e)=>{const n=zk(t[0],t[1],e[0],e[1],t[2],e[2]);return Hk.clone(n)};var $k=Vk;const Wm=We,Gk=iv,Wk=rv,Xk=(t,e)=>{const n=Wm.negate(Wm.create(),e),i=-e[2];return Gk(t,Wk(n[0],n[1],i))};var qk=Xk;const jk=t=>`line2: (${t[0].toFixed(7)}, ${t[1].toFixed(7)}, ${t[2].toFixed(7)})`;var Yk=jk;const Xm=We,Zk=sv,Kk=Fl,Jk=Nf,Qk=(t,e,n)=>{const i=Kk(e),s=Jk(e);return Xm.transform(i,i,n),Xm.transform(s,s,n),Zk(t,i,s)};var eB=Qk;const tB=Fl,nB=(t,e)=>{let n=(t[2]-t[1]*e)/t[0];return Number.isNaN(n)&&(n=tB(t)[0]),n};var iB=nB,sB={clone:Ek,closestPoint:Pk,copy:iv,create:If,direction:Nf,distanceToPoint:Ik,equals:Fk,fromPoints:sv,fromValues:rv,intersectPointOfLines:$k,origin:Fl,reverse:qk,toString:Yk,transform:eB,xAtY:iB};const qm=gt,rB=We,wt=Be,ov=function(t,e){arguments.length<2&&(e=wt.orthogonal(wt.create(),t)),this.v=wt.normalize(wt.create(),wt.cross(wt.create(),t,e)),this.u=wt.cross(wt.create(),this.v,t),this.plane=t,this.planeorigin=wt.scale(wt.create(),t,t[3])};ov.prototype={getProjectionMatrix:function(){return qm.fromValues(this.u[0],this.v[0],this.plane[0],0,this.u[1],this.v[1],this.plane[1],0,this.u[2],this.v[2],this.plane[2],0,0,0,-this.plane[3],1)},getInverseProjectionMatrix:function(){const t=wt.scale(wt.create(),this.plane,this.plane[3]);return qm.fromValues(this.u[0],this.u[1],this.u[2],0,this.v[0],this.v[1],this.v[2],0,this.plane[0],this.plane[1],this.plane[2],0,t[0],t[1],t[2],1)},to2D:function(t){return rB.fromValues(wt.dot(t,this.u),wt.dot(t,this.v))},to3D:function(t){const e=wt.scale(wt.create(),this.u,t[0]),n=wt.scale(wt.create(),this.v,t[1]),i=wt.add(e,e,this.planeorigin);return wt.add(n,n,i)}};var oB=ov;const aB=(t,e)=>t-e;var lB=aB;const cB=(t,e,n)=>{let i=0,s=t.length;for(;s>i;){const r=Math.floor((i+s)/2),o=t[r];n(e,o)>0?i=r+1:s=r}t.splice(i,0,e)};var uB=cB;const{TAU:TV}=Ye;var fB={fnNumberSort:lB,insertSorted:uB};const{EPS:_i}=Ye,Bi=sB,kn=We,hB=oB,er=_F,{insertSorted:dB,fnNumberSort:pB}=fB,jm=nt,mB=t=>{if(t.length<2)return t;const e=[],n=t.length,i=jm.plane(t[0]),s=new hB(i),r=[],o=[],a=new Map,l=new Map,c=new Map,u=10/_i;for(let m=0;m<n;m++){const _=t[m];let g=[],p=_.vertices.length,S=-1;if(p>0){let y,x;for(let b=0;b<p;b++){let M=s.to2D(_.vertices[b]);const T=Math.floor(M[1]*u);let L;c.has(T)?L=c.get(T):c.has(T+1)?L=c.get(T+1):c.has(T-1)?L=c.get(T-1):(L=M[1],c.set(T,M[1])),M=kn.fromValues(M[0],L),g.push(M);const v=M[1];(b===0||v<y)&&(y=v,S=b),(b===0||v>x)&&(x=v);let w=l.get(v);w||(w={},l.set(v,w)),w[m]=!0}if(y>=x)g=[],p=0,S=-1;else{let b=a.get(y);b||(b=[],a.set(y,b)),b.push(m)}}g.reverse(),S=p-S-1,r.push(g),o.push(S)}const f=[];l.forEach((m,_)=>f.push(_)),f.sort(pB);let h=[],d=[];for(let m=0;m<f.length;m++){const _=[],g=f[m],p=l.get(g);for(let y=0;y<h.length;++y){const x=h[y],b=x.polygonindex;if(p[b]){const M=r[b],T=M.length;let L=x.leftvertexindex,v=x.rightvertexindex;for(;;){let N=L+1;if(N>=T&&(N=0),M[N][1]!==g)break;L=N}let w=v-1;if(w<0&&(w=T-1),M[w][1]===g&&(v=w),L!==x.leftvertexindex&&L===v)h.splice(y,1),--y;else{x.leftvertexindex=L,x.rightvertexindex=v,x.topleft=M[L],x.topright=M[v];let N=L+1;N>=T&&(N=0),x.bottomleft=M[N];let U=v-1;U<0&&(U=T-1),x.bottomright=M[U]}}}let S;if(m>=f.length-1)h=[],S=null;else{S=Number(f[m+1]);const y=.5*(g+S),x=a.get(g);for(const b in x){const M=x[b],T=r[M],L=T.length,v=o[M];let w=v;for(;;){let k=w+1;if(k>=L&&(k=0),T[k][1]!==g||k===v)break;w=k}let N=v;for(;;){let k=N-1;if(k<0&&(k=L-1),T[k][1]!==g||k===w)break;N=k}let U=w+1;U>=L&&(U=0);let I=N-1;I<0&&(I=L-1);const F={polygonindex:M,leftvertexindex:w,rightvertexindex:N,topleft:T[w],topright:T[N],bottomleft:T[U],bottomright:T[I]};dB(h,F,(k,H)=>{const $=er(k.topleft,k.bottomleft,y),W=er(H.topleft,H.bottomleft,y);return $>W?1:$<W?-1:0})}}for(const y in h){const x=h[y];let b=er(x.topleft,x.bottomleft,g);const M=kn.fromValues(b,g);b=er(x.topright,x.bottomright,g);const T=kn.fromValues(b,g);b=er(x.topleft,x.bottomleft,S);const L=kn.fromValues(b,S);b=er(x.topright,x.bottomright,S);const v=kn.fromValues(b,S),w={topleft:M,topright:T,bottomleft:L,bottomright:v,leftline:Bi.fromPoints(Bi.create(),M,L),rightline:Bi.fromPoints(Bi.create(),v,T)};if(_.length>0){const N=_[_.length-1],U=kn.distance(w.topleft,N.topright),I=kn.distance(w.bottomleft,N.bottomright);U<_i&&I<_i&&(w.topleft=N.topleft,w.leftline=N.leftline,w.bottomleft=N.bottomleft,_.splice(_.length-1,1))}_.push(w)}if(m>0){const y=new Set,x=new Set;for(let b=0;b<_.length;b++){const M=_[b];for(let T=0;T<d.length;T++)if(!x.has(T)){const L=d[T];if(kn.distance(L.bottomleft,M.topleft)<_i&&kn.distance(L.bottomright,M.topright)<_i){x.add(T);const v=Bi.direction(M.leftline),w=Bi.direction(L.leftline),N=v[0]-w[0],U=Bi.direction(M.rightline),I=Bi.direction(L.rightline),F=U[0]-I[0],k=Math.abs(N)<_i,H=Math.abs(F)<_i,$=k||N>=0,W=H||F>=0;$&&W&&(M.outpolygon=L.outpolygon,M.leftlinecontinues=k,M.rightlinecontinues=H,y.add(T));break}}}for(let b=0;b<d.length;b++)if(!y.has(b)){const M=d[b];M.outpolygon.rightpoints.push(M.bottomright),kn.distance(M.bottomright,M.bottomleft)>_i&&M.outpolygon.leftpoints.push(M.bottomleft),M.outpolygon.leftpoints.reverse();const L=M.outpolygon.rightpoints.concat(M.outpolygon.leftpoints).map(w=>s.to3D(w)),v=jm.fromPointsAndPlane(L,i);v.vertices.length&&e.push(v)}}for(let y=0;y<_.length;y++){const x=_[y];x.outpolygon?(x.leftlinecontinues||x.outpolygon.leftpoints.push(x.topleft),x.rightlinecontinues||x.outpolygon.rightpoints.push(x.topright)):(x.outpolygon={leftpoints:[],rightpoints:[]},x.outpolygon.leftpoints.push(x.topleft),kn.distance(x.topleft,x.topright)>_i&&x.outpolygon.rightpoints.push(x.topright))}d=_}return e};var gB=mB;const Ym=pt,_B=nt,{NEPS:vB}=Ye,xB=gB,yB=t=>{if(t.isRetesselated)return t;const e=Ym.toPolygons(t).map((r,o)=>({vertices:r.vertices,plane:_B.plane(r),index:o})),n=bB(e),i=[];n.forEach(r=>{if(Array.isArray(r)){const o=xB(r);i.push(...o)}else i.push(r)});const s=Ym.create(i);return s.isRetesselated=!0,s},bB=t=>{let e=[t];const n=[];for(let s=3;s>=0;s--){const r=[],o=s===3?15e-9:vB;e.forEach(a=>{a.sort(MB(s,o));let l=0;for(let c=1;c<a.length;c++)a[c].plane[s]-a[l].plane[s]>o&&(c-l===1?n.push(a[l]):r.push(a.slice(l,c)),l=c);a.length-l===1?n.push(a[l]):r.push(a.slice(l))}),e=r}const i=[];return e.forEach(s=>{s[0]&&(i[s[0].index]=s)}),n.forEach(s=>{i[s.index]=s}),i},MB=(t,e)=>(n,i)=>n.plane[t]-i.plane[t]>e?1:i.plane[t]-n.plane[t]>e?-1:0;var av=yB;const{EPS:tr}=Ye,Zm=Pf,SB=(t,e)=>{if(t.polygons.length===0||e.polygons.length===0)return!1;const n=Zm(t),i=n[0],s=n[1],r=Zm(e),o=r[0],a=r[1];return!(o[0]-s[0]>tr||i[0]-a[0]>tr||o[1]-s[1]>tr||i[1]-a[1]>tr||o[2]-s[2]>tr||i[2]-a[2]>tr)};var EB=SB;const Km=Zi,wB=nt;let TB=class Gu{constructor(e){this.plane=null,this.front=null,this.back=null,this.polygontreenodes=[],this.parent=e}invert(){const e=[this];let n;for(let i=0;i<e.length;i++){n=e[i],n.plane&&(n.plane=Km.flip(Km.create(),n.plane)),n.front&&e.push(n.front),n.back&&e.push(n.back);const s=n.front;n.front=n.back,n.back=s}}clipPolygons(e,n){let i={node:this,polygontreenodes:e},s;const r=[];do{if(s=i.node,e=i.polygontreenodes,s.plane){const o=s.plane,a=[],l=[],c=n?a:l,u=e.length;for(let h=0;h<u;h++){const d=e[h];d.isRemoved()||d.splitByPlane(o,c,a,l,a)}s.front&&l.length>0&&r.push({node:s.front,polygontreenodes:l});const f=a.length;if(s.back&&f>0)r.push({node:s.back,polygontreenodes:a});else for(let h=0;h<f;h++)a[h].remove()}i=r.pop()}while(i!==void 0)}clipTo(e,n){let i=this;const s=[];do i.polygontreenodes.length>0&&e.rootnode.clipPolygons(i.polygontreenodes,n),i.front&&s.push(i.front),i.back&&s.push(i.back),i=s.pop();while(i!==void 0)}addPolygonTreeNodes(e){let n={node:this,polygontreenodes:e};const i=[];do{const s=n.node,r=n.polygontreenodes;if(r.length===0){n=i.pop();continue}if(!s.plane){let c=0;c=Math.floor(r.length/2);const u=r[c].getPolygon();s.plane=wB.plane(u)}const o=[],a=[],l=r.length;for(let c=0;c<l;++c)r[c].splitByPlane(s.plane,s.polygontreenodes,a,o,a);o.length>0&&(s.front||(s.front=new Gu(s)),l===o.length&&a.length===0?s.front.polygontreenodes=o:i.push({node:s.front,polygontreenodes:o})),a.length>0&&(s.back||(s.back=new Gu(s)),l===a.length&&o.length===0?s.back.polygontreenodes=a:i.push({node:s.back,polygontreenodes:a})),n=i.pop()}while(n!==void 0)}};var AB=TB;const nr=Be,RB=(t,e,n)=>{const i=nr.subtract(nr.create(),n,e);let s=(t[3]-nr.dot(t,e))/nr.dot(t,i);return Number.isNaN(s)&&(s=0),s>1&&(s=1),s<0&&(s=0),nr.scale(i,i,s),nr.add(i,e,i),i};var CB=RB;const{EPS:Aa}=Ye,PB=Zi,Ra=Be,au=nt,LB=CB,DB=(t,e)=>{const n={type:null,front:null,back:null},i=e.vertices,s=i.length,r=au.plane(e);if(PB.equals(r,t))n.type=0;else{let o=!1,a=!1;const l=[],c=-Aa;for(let u=0;u<s;u++){const f=Ra.dot(t,i[u])-t[3],h=f<c;l.push(h),f>Aa&&(o=!0),f<c&&(a=!0)}if(!o&&!a){const u=Ra.dot(t,r);n.type=u>=0?0:1}else if(!a)n.type=2;else if(!o)n.type=3;else{n.type=4;const u=[],f=[];let h=l[0];for(let m=0;m<s;m++){const _=i[m];let g=m+1;g>=s&&(g=0);const p=l[g];if(h===p)h?f.push(_):u.push(_);else{const S=i[g],y=LB(t,_,S);h?(f.push(_),f.push(y),u.push(y)):(u.push(_),u.push(y),f.push(y))}h=p}const d=Aa*Aa;if(f.length>=3){let m=f[f.length-1];for(let _=0;_<f.length;_++){const g=f[_];Ra.squaredDistance(g,m)<d&&(f.splice(_,1),_--),m=g}}if(u.length>=3){let m=u[u.length-1];for(let _=0;_<u.length;_++){const g=u[_];Ra.squaredDistance(g,m)<d&&(u.splice(_,1),_--),m=g}}u.length>=3&&(n.front=au.fromPointsAndPlane(u,r)),f.length>=3&&(n.back=au.fromPointsAndPlane(f,r))}}return n};var UB=DB;const{EPS:IB}=Ye,NB=Be,Jm=nt,FB=UB;let OB=class lv{constructor(e,n){this.parent=e,this.children=[],this.polygon=n,this.removed=!1}addPolygons(e){if(!this.isRootNode())throw new Error("Assertion failed");const n=this;e.forEach(i=>{n.addChild(i)})}remove(){if(!this.removed){this.removed=!0,this.polygon=null;const e=this.parent.children,n=e.indexOf(this);if(n<0)throw new Error("Assertion failed");e.splice(n,1),this.parent.recursivelyInvalidatePolygon()}}isRemoved(){return this.removed}isRootNode(){return!this.parent}invert(){if(!this.isRootNode())throw new Error("Assertion failed");this.invertSub()}getPolygon(){if(!this.polygon)throw new Error("Assertion failed");return this.polygon}getPolygons(e){let n=[this];const i=[n];let s,r,o,a;for(s=0;s<i.length;++s)for(n=i[s],r=0,o=n.length;r<o;r++)a=n[r],a.polygon?e.push(a.polygon):a.children.length>0&&i.push(a.children)}splitByPlane(e,n,i,s,r){if(this.children.length){const o=[this.children];let a,l,c,u,f;for(a=0;a<o.length;a++)for(f=o[a],l=0,c=f.length;l<c;l++)u=f[l],u.children.length>0?o.push(u.children):u._splitByPlane(e,n,i,s,r)}else this._splitByPlane(e,n,i,s,r)}_splitByPlane(e,n,i,s,r){const o=this.polygon;if(o){const a=Jm.measureBoundingSphere(o),l=a[3]+IB,c=a,u=NB.dot(e,c)-e[3];if(u>l)s.push(this);else if(u<-l)r.push(this);else{const f=FB(e,o);switch(f.type){case 0:n.push(this);break;case 1:i.push(this);break;case 2:s.push(this);break;case 3:r.push(this);break;case 4:if(f.front){const h=this.addChild(f.front);s.push(h)}if(f.back){const h=this.addChild(f.back);r.push(h)}break}}}}addChild(e){const n=new lv(this,e);return this.children.push(n),n}invertSub(){let e=[this];const n=[e];let i,s,r,o;for(i=0;i<n.length;i++)for(e=n[i],s=0,r=e.length;s<r;s++)o=e[s],o.polygon&&(o.polygon=Jm.invert(o.polygon)),o.children.length>0&&n.push(o.children)}recursivelyInvalidatePolygon(){this.polygon=null,this.parent&&this.parent.recursivelyInvalidatePolygon()}clear(){let e=[this];const n=[e];for(let i=0;i<n.length;++i){e=n[i];const s=e.length;for(let r=0;r<s;r++){const o=e[r];o.polygon&&(o.polygon=null),o.parent&&(o.parent=null),o.children.length>0&&n.push(o.children),o.children=[]}}}toString(){let e="",n=[this];const i=[n];let s,r,o,a;for(s=0;s<i.length;++s){n=i[s];const l=" ".repeat(s);for(r=0,o=n.length;r<o;r++)a=n[r],e+=`${l}PolygonTreeNode (${a.isRootNode()}): ${a.children.length}`,a.polygon?e+=`
 ${l}polygon: ${a.polygon.vertices}
`:e+=`
`,a.children.length>0&&i.push(a.children)}return e}};var kB=OB;const BB=AB,HB=kB;let zB=class{constructor(e){this.polygonTree=new HB,this.rootnode=new BB(null),e&&this.addPolygons(e)}invert(){this.polygonTree.invert(),this.rootnode.invert()}clipTo(e,n=!1){this.rootnode.clipTo(e,n)}allPolygons(){const e=[];return this.polygonTree.getPolygons(e),e}addPolygons(e){const n=new Array(e.length);for(let i=0;i<e.length;i++)n[i]=this.polygonTree.addChild(e[i]);this.rootnode.addPolygonTreeNodes(n)}clear(){this.polygonTree.clear()}toString(){return"Tree: "+this.polygonTree.toString("")}};var VB=zB,Ff={Tree:VB};const Ca=pt,$B=EB,{Tree:Qm}=Ff,GB=(t,e)=>{if(!$B(t,e))return Ca.clone(t);const n=new Qm(Ca.toPolygons(t)),i=new Qm(Ca.toPolygons(e));n.invert(),n.clipTo(i),i.clipTo(n,!0),n.addPolygons(i.allPolygons()),n.invert();const s=n.allPolygons();return Ca.create(s)};var WB=GB;const XB=Dn,qB=av,jB=WB,YB=(...t)=>{t=XB(t);let e=t.shift();return t.forEach(n=>{e=jB(e,n)}),e=qB(e),e};var cv=YB;const ZB=Dn,KB=pt,JB=Uf,QB=pk,eH=yk,tH=cv,nH=(...t)=>{t=ZB(t);const e=t.map(s=>eH({z0:-1,z1:1},s)),n=tH(e),i=JB(n);return QB(i,KB.toPolygons(n))};var iH=nH;const sH=Dn,rH=jO,oH=mt,aH=pt,lH=iH,cH=cv,uH=(...t)=>{if(t=sH(t),t.length===0)throw new Error("wrong number of arguments");if(!rH(t))throw new Error("only subtract of the types are supported");const e=t[0];return oH.isA(e)?lH(t):aH.isA(e)?cH(t):e};var fH=uH;const Pa=rA(fH);function hH({width:t,depth:e,safety:n=0,bottomHeight:i=15,topHeight:s=25,borderThickness:r=2.5,enableBackHole:o=!1,backHoleXOffset:a=0,backHoleWidth:l=55,backHoleHeight:c=10,enableFrontHole:u=!1,frontHoleXOffset:f=0,frontHoleWidth:h=55,frontHoleHeight:d=10,enableRightHole:m=!1,rightHoleXOffset:_=0,rightHoleWidth:g=55,rightHoleHeight:p=10,enableLeftHole:S=!1,leftHoleXOffset:y=0,leftHoleWidth:x=55,leftHoleHeight:b=10}){const M=r*2,T=t+n,L=e+n,v=-i/2,w=Et.translate([0,L/2+r/2,v],_n.cuboid({size:[T+M,r,i]})),N=Et.translate([0,-L/2-r/2,v],_n.cuboid({size:[T+M,r,i]})),U=Et.translate([T/2+r/2,0,v],_n.cuboid({size:[r,L+M,i]})),I=Et.translate([-T/2-r/2,0,v],_n.cuboid({size:[r,L+M,i]}));let F=N;if(o){const A=_n.cuboid({size:[l,r+M,c]}),fe=Et.translate([a,-L/2-r/2,-i+c/2],A);F=Pa(F,fe)}let k=w;if(u){const A=_n.cuboid({size:[h,r+M,d]}),fe=Et.translate([-f,L/2+r/2,-i+d/2],A);k=Pa(k,fe)}let H=I,$=U;if(m){const A=_n.cuboid({size:[r+M,g,p]}),fe=Et.translate([-T/2-r/2,-_,-i+p/2],A);H=Pa(H,fe)}if(S){const A=_n.cuboid({size:[r+M,x,b]}),fe=Et.translate([T/2+r/2,y,-i+b/2],A);$=Pa($,fe)}const W=s/2,ae=T-r/2,te=L-r/2,Ee=Et.translate([0,te/2+r/2,W],_n.cuboid({size:[ae+M,r,s]})),ce=Et.translate([0,-te/2-r/2,W],_n.cuboid({size:[ae+M,r,s]})),Z=Et.translate([ae/2+r/2,0,W],_n.cuboid({size:[r,te+M,s]})),re=Et.translate([-ae/2-r/2,0,W],_n.cuboid({size:[r,te+M,s]})),ge=s+r/2,_e=Et.translate([0,0,ge],_n.cuboid({size:[ae+M,te+M,r]}));return[k,F,$,H,Ee,ce,Z,re,_e]}const{solve2Linear:RV}=Ul,{EPS:CV}=Ye,{geom2:PV,geom3:LV,path2:DV}=Cf,{Tree:UV}=Ff,{Tree:IV}=Ff,{EPS:NV,TAU:FV}=Ye,{EPS:OV,TAU:kV}=Ye,{area:BV}=Ul,{TAU:HV}=Ye,lu=Be,uv=nt,dH=(t,e)=>{const n=Math.abs(uv.measureArea(e));return Number.isFinite(n)&&n>t},pH=(t,e)=>{let n=e.map(s=>{const r=s.vertices.map(l=>lu.snap(lu.create(),l,t)),o=[];for(let l=0;l<r.length;l++){const c=(l+1)%r.length;lu.equals(r[l],r[c])||o.push(r[l])}const a=uv.create(o);return s.color&&(a.color=s.color),a});const i=t*t*Math.sqrt(3)/4;return n=n.filter(s=>dH(i,s)),n};var fv=pH;const mH=pF,or=Be,tl=nt,gH=t=>{const e=tl.toPoints(t),n=[];for(let i=0;i<e.length;i++){const s=(i+1)%e.length,r={v1:e[i],v2:e[s]};n.push(r)}for(let i=0;i<n.length;i++){const s=(i+1)%e.length;n[i].next=n[s],n[s].prev=n[i]}return n},_H=(t,e)=>{const n=`${e.v1}:${e.v2}`;t.set(n,e)},cu=(t,e)=>{const n=`${e.v1}:${e.v2}`;t.delete(n)},vH=(t,e)=>{const n=`${e.v2}:${e.v1}`;return t.get(n)},xH=(t,e,n)=>{let i=t.prev.v1,s=t.prev.v2,r=e.next.v2;const o=eg(i,s,r,n);i=e.prev.v1,s=e.prev.v2,r=t.next.v2;const a=eg(i,s,r,n);return[o,a]},yH=or.create(),bH=or.create(),eg=(t,e,n,i)=>{const s=or.subtract(yH,e,t),r=or.subtract(bH,n,e);return or.cross(s,s,r),or.dot(s,i)},MH=t=>{let e;const n=[];for(;t.next;){const i=t.next;n.push(t.v1),t.v1=null,t.v2=null,t.next=null,t.prev=null,t=i}return n.length>0&&(e=tl.create(n)),e},SH=t=>{if(t.length<2)return t;const e=t[0].plane,n=t.slice(),i=new Map;for(;n.length>0;){const r=n.shift(),o=gH(r);for(let a=0;a<o.length;a++){const l=o[a],c=vH(i,l);if(c){const u=xH(l,c,e);if(u[0]>=0&&u[1]>=0){const f=c.next,h=l.next;l.prev.next=c.next,l.next.prev=c.prev,c.prev.next=l.next,c.next.prev=l.prev,l.v1=null,l.v2=null,l.next=null,l.prev=null,cu(i,c),c.v1=null,c.v2=null,c.next=null,c.prev=null;const d=(m,_,g)=>{const p={v1:g.v1,v2:_.v2,next:_.next,prev:g.prev};g.prev.next=p,_.next.prev=p,cu(m,_),_.v1=null,_.v2=null,_.next=null,_.prev=null,cu(m,g),g.v1=null,g.v2=null,g.next=null,g.prev=null};u[0]===0&&d(i,f,f.prev),u[1]===0&&d(i,h,h.prev)}}else l.next&&_H(i,l)}}const s=[];return i.forEach(r=>{const o=MH(r);o&&s.push(o)}),i.clear(),s},EH=(t,e)=>Math.abs(t[3]-e[3])<15e-8?mH(t,e):!1,wH=(t,e)=>{const n=[];e.forEach(s=>{const r=n.find(o=>EH(o[0],tl.plane(s)));r?r[1].push(s):n.push([tl.plane(s),[s]])});let i=[];return n.forEach(s=>{const r=s[1],o=SH(r);i=i.concat(o)}),i};var TH=wH;const tg=Ye,Zn=Be,AH=nt,Zt=t=>`${t}`,ng=(t,e,n,i,s,r)=>{const o=Zt(i),a=Zt(s),l=`${o}/${a}`,c=`${a}/${o}`;if(t.has(c))return Ha(t,e,n,s,i,null),null;const u={vertex0:i,vertex1:s,polygonindex:r};return t.has(l)?t.get(l).push(u):t.set(l,[u]),e.has(o)?e.get(o).push(l):e.set(o,[l]),n.has(a)?n.get(a).push(l):n.set(a,[l]),l},Ha=(t,e,n,i,s,r)=>{const o=Zt(i),a=Zt(s),l=`${o}/${a}`;let c=-1;const u=t.get(l);for(let f=0;f<u.length;f++){const h=u[f];let d=Zt(h.vertex0);if(d===o&&(d=Zt(h.vertex1),d===a&&!(r!==null&&h.polygonindex!==r))){c=f;break}}u.splice(c,1),u.length===0&&t.delete(l),c=e.get(o).indexOf(l),e.get(o).splice(c,1),e.get(o).length===0&&e.delete(o),c=n.get(a).indexOf(l),n.get(a).splice(c,1),n.get(a).length===0&&n.delete(a)},RH=t=>{const e=new Map;for(let n=0;n<t.length;n++){const i=t[n],s=i.vertices.length;if(s>=3){let r=i.vertices[0],o=Zt(r);for(let a=0;a<s;a++){let l=a+1;l===s&&(l=0);const c=i.vertices[l],u=Zt(c),f=`${o}/${u}`,h=`${u}/${o}`;if(e.has(h)){const d=e.get(h);d.splice(-1,1),d.length===0&&e.delete(h)}else{const d={vertex0:r,vertex1:c,polygonindex:n};e.has(f)?e.get(f).push(d):e.set(f,[d])}r=c,o=u}}else console.warn("warning: invalid polygon found during insertTjunctions")}if(e.size>0){const n=new Map,i=new Map,s=new Map;for(const[o,a]of e)s.set(o,!0),a.forEach(l=>{const c=Zt(l.vertex0),u=Zt(l.vertex1);n.has(c)?n.get(c).push(o):n.set(c,[o]),i.has(u)?i.get(u).push(o):i.set(u,[o])});const r=t.slice(0);for(;e.size!==0;){for(const a of e.keys())s.set(a,!0);let o=!1;for(;;){const a=Array.from(s.keys());if(a.length===0)break;const l=a[0];let c=!0;if(e.has(l)){const f=e.get(l)[0];for(let h=0;h<2;h++){const d=h===0?f.vertex0:f.vertex1,m=h===0?f.vertex1:f.vertex0,_=Zt(d),g=Zt(m);let p=[];h===0?i.has(_)&&(p=i.get(_)):n.has(_)&&(p=n.get(_));for(let S=0;S<p.length;S++){const y=p[S],x=e.get(y)[0],b=h===0?x.vertex0:x.vertex1;if(h===0?x.vertex1:x.vertex0,Zt(b)===g){Ha(e,n,i,d,m,null),Ha(e,n,i,m,d,null),c=!1,h=2,o=!0;break}else{const T=d,L=m,v=b,w=Zn.subtract(Zn.create(),v,T),N=Zn.dot(Zn.subtract(Zn.create(),L,T),w)/Zn.dot(w,w);if(N>0&&N<1){const U=Zn.scale(Zn.create(),w,N);if(Zn.add(U,U,T),Zn.squaredDistance(U,L)<tg.EPS*tg.EPS){const F=x.polygonindex,k=r[F],H=Zt(x.vertex1);let $=-1;for(let ce=0;ce<k.vertices.length;ce++)if(Zt(k.vertices[ce])===H){$=ce;break}const W=k.vertices.slice(0);W.splice($,0,m);const ae=AH.create(W);r[F]=ae,Ha(e,n,i,x.vertex0,x.vertex1,F);const te=ng(e,n,i,x.vertex0,m,F),Ee=ng(e,n,i,m,x.vertex1,F);te!==null&&s.set(te,!0),Ee!==null&&s.set(Ee,!0),c=!1,h=2,o=!0;break}}}}}}c&&s.delete(l)}if(!o)break}t=r}return e.clear(),t};var CH=RH;const uu=Be,fu=nt,PH=(t,e,n)=>{const i=e.vertices.length;if(i>3){if(i>4){const o=[0,0,0];e.vertices.forEach(a=>uu.add(o,o,a)),uu.snap(o,uu.divide(o,o,[i,i,i]),t);for(let a=0;a<i;a++){const l=fu.create([o,e.vertices[a],e.vertices[(a+1)%i]]);e.color&&(l.color=e.color),n.push(l)}return}const s=fu.create([e.vertices[0],e.vertices[1],e.vertices[2]]),r=fu.create([e.vertices[0],e.vertices[2],e.vertices[3]]);e.color&&(s.color=e.color,r.color=e.color),n.push(s,r);return}n.push(e)},LH=(t,e)=>{const n=[];return e.forEach(i=>{PH(t,i,n)}),n};var DH=LH;const UH=Dn,IH=Uf,NH=mt,hv=pt,FH=Ln,OH=fv,kH=TH,BH=CH,HH=DH,zH=(t,e)=>e,VH=(t,e)=>e,$H=(t,e)=>{const n={snap:!1,simplify:!1,triangulate:!1},{snap:i,simplify:s,triangulate:r}=Object.assign({},n,t),o=IH(e);let a=hv.toPolygons(e);i&&(a=OH(o,a)),s&&(a=kH(o,a)),r&&(a=BH(a),a=HH(o,a));const l=Object.assign({},e);return l.polygons=a,l},GH=(t,...e)=>{if(e=UH(e),e.length===0)throw new Error("wrong number of arguments");const n=e.map(i=>{if(FH.isA(i))return zH(t,i);if(NH.isA(i))return VH(t,i);if(hv.isA(i))return $H(t,i);throw new Error("invalid geometry")});return n.length===1?n[0]:n};var WH=GH;const XH=Dn,_s=We,Wu=mt,Xu=pt,qu=Ln,Of=Uf,qH=fv,jH=t=>{const e=Of(t),i=qu.toPoints(t).map(s=>_s.snap(_s.create(),s,e));return qu.create(i)},YH=t=>{const e=Of(t);let i=Wu.toSides(t).map(s=>[_s.snap(_s.create(),s[0],e),_s.snap(_s.create(),s[1],e)]);return i=i.filter(s=>!_s.equals(s[0],s[1])),Wu.create(i)},ZH=t=>{const e=Of(t),n=Xu.toPolygons(t),i=qH(e,n);return Xu.create(i)},KH=(...t)=>{if(t=XH(t),t.length===0)throw new Error("wrong number of arguments");const e=t.map(n=>qu.isA(n)?jH(n):Wu.isA(n)?YH(n):Xu.isA(n)?ZH(n):n);return e.length===1?e[0]:e};var JH=KH,QH={generalize:WH,snap:JH,retessellate:av};const{translate:zV}=Et,ez=Dn,tz=mt,nz=pt,iz=Ln,sz=Pf,{translate:rz}=Et,hu=(t,e)=>{const n={axes:[!0,!0,!0],relativeTo:[0,0,0]},{axes:i,relativeTo:s}=Object.assign({},n,t),r=sz(e),o=[0,0,0];return i[0]&&(o[0]=s[0]-(r[0][0]+(r[1][0]-r[0][0])/2)),i[1]&&(o[1]=s[1]-(r[0][1]+(r[1][1]-r[0][1])/2)),i[2]&&(o[2]=s[2]-(r[0][2]+(r[1][2]-r[0][2])/2)),rz(o,e)},Ol=(t,...e)=>{const n={axes:[!0,!0,!0],relativeTo:[0,0,0]},{axes:i,relativeTo:s}=Object.assign({},n,t);if(e=ez(e),e.length===0)throw new Error("wrong number of arguments");if(s.length!==3)throw new Error("relativeTo must be an array of length 3");t={axes:i,relativeTo:s};const r=e.map(o=>iz.isA(o)||tz.isA(o)||nz.isA(o)?hu(t,o):o);return r.length===1?r[0]:r},oz=(...t)=>Ol({axes:[!0,!1,!1]},t),az=(...t)=>Ol({axes:[!1,!0,!1]},t),lz=(...t)=>Ol({axes:[!1,!1,!0]},t);var La={center:Ol,centerX:oz,centerY:az,centerZ:lz};const cz=Dn,ig=gt,sg=mt,rg=pt,og=Ln,kl=(t,...e)=>{if(!Array.isArray(t))throw new Error("factors must be an array");if(e=cz(e),e.length===0)throw new Error("wrong number of arguments");for(t=t.slice();t.length<3;)t.push(1);if(t[0]<=0||t[1]<=0||t[2]<=0)throw new Error("factors must be positive");const n=ig.fromScaling(ig.create(),t),i=e.map(s=>og.isA(s)?og.transform(n,s):sg.isA(s)?sg.transform(n,s):rg.isA(s)?rg.transform(n,s):s);return i.length===1?i[0]:i},uz=(t,...e)=>kl([t,1,1],e),fz=(t,...e)=>kl([1,t,1],e),hz=(t,...e)=>kl([1,1,t],e);var Da={scale:kl,scaleX:uz,scaleY:fz,scaleZ:hz};La.center,La.centerX,La.centerY,La.centerZ,no.mirror,no.mirrorX,no.mirrorY,no.mirrorZ,so.rotate,so.rotateX,so.rotateY,so.rotateZ,Da.scale,Da.scaleX,Da.scaleY,Da.scaleZ,Et.translate,Et.translateX,Et.translateY,Et.translateZ;var kf={geometries:Cf,modifiers:QH};const dv=t=>t.reduce((e,n)=>Array.isArray(n)?e.concat(dv(n)):e.concat(n),[]);var dz=dv;const pz=t=>Array.isArray(t)?t:t==null?[]:[t];var mz=pz,gz={flatten:dz,toArray:mz};const{geometries:du}=kf,_z=(t,e)=>{e.statusCallback&&e.statusCallback({progress:0});const n=new ArrayBuffer(4),i=new Int32Array(n,0,1),s=new Int8Array(n,0,4);if(i[0]=287454020,s[0]!==68)throw new Error("Binary STL output is currently only supported on little-endian (Intel) processors");let r=0,o=0;t.forEach((g,p)=>{du.geom3.toPolygons(g).forEach(y=>{const x=y.vertices.length,b=x>=3?x-2:0;r+=b,o+=1})});const a=new Uint8Array(80);for(let g=0;g<80;g++)a[g]=65;const l=new Uint32Array(1);l[0]=r;const c=new ArrayBuffer(50*r),u=new Int8Array(c),f=new ArrayBuffer(50),h=new Int8Array(f),d=new Float32Array(f,0,12),m=new Uint16Array(f,48,1);let _=0;return t.forEach(g=>{du.geom3.toPolygons(g).forEach((S,y)=>{const x=S.vertices,b=x.length,M=du.poly3.plane(S);for(let T=0;T<b-2;T++){d[0]=M[0],d[1]=M[1],d[2]=M[2];let L=3;for(let v=0;v<3;v++){const w=v+(v>0?T:0),N=x[w];d[L++]=N[0],d[L++]=N[1],d[L++]=N[2]}m[0]=0,u.set(h,_),_+=50}e.statusCallback&&e.statusCallback({progress:100*y/o})})}),e.statusCallback&&e.statusCallback({progress:100}),[a.buffer,l.buffer,c]};var vz={serializeBinary:_z};const{geometries:pv}=kf,xz=(t,e)=>{e.statusCallback&&e.statusCallback({progress:0});const n=`solid JSCAD
${yz(t,e)}
endsolid JSCAD
`;return e.statusCallback&&e.statusCallback({progress:100}),[n]},yz=(t,e)=>{const n=[];return t.forEach((i,s)=>{n.push(bz(i)),e.statusCallback&&e.statusCallback({progress:100*s/t.length})}),n.join(`
`)},bz=(t,e)=>{const n=[];return pv.geom3.toPolygons(t).forEach((s,r)=>{n.push(Mz(s))}),n.join(`
`)},mv=t=>`${t[0]} ${t[1]} ${t[2]}`,pu=t=>`vertex ${mv(t)}`,Mz=t=>{const e=[];if(t.vertices.length>=3){const n=pu(t.vertices[0]);for(let i=0;i<t.vertices.length-2;i++){const s=`facet normal ${mv(pv.poly3.plane(t))}
outer loop
${n}
${pu(t.vertices[i+1])}
${pu(t.vertices[i+2])}
endloop
endfacet`;e.push(s)}}return e.join(`
`)};var Sz={serializeText:xz};const{geometries:Ez,modifiers:wz}=kf,{flatten:Tz,toArray:Az}=gz,{serializeBinary:Rz}=vz,{serializeText:Cz}=Sz,Pz="application/sla",Lz=(t,...e)=>{t=Object.assign({},{binary:!0,statusCallback:null},t),e=Tz(e);let i=e.filter(s=>Ez.geom3.isA(s));if(i.length===0)throw new Error("only 3D geometries can be serialized to STL");return e.length!==i.length&&console.warn("some objects could not be serialized to STL"),i=Az(wz.generalize({snap:!0,triangulate:!0},i)),t.binary?Rz(i,t):Cz(i,t)};var Dz={mimeType:Pz,serialize:Lz};const Uz={props:["width","depth","safety","bottomHeight","topHeight","borderThickness","enableBackHole","backHoleXOffset","backHoleWidth","backHoleHeight","enableFrontHole","frontHoleXOffset","frontHoleWidth","frontHoleHeight","enableRightHole","rightHoleXOffset","rightHoleWidth","rightHoleHeight","enableLeftHole","leftHoleXOffset","leftHoleWidth","leftHoleHeight"],data(){return{stlData:null,currentWidth:0,currentDepth:0,currentSafety:0,currentBottomHeight:0,currentTopHeight:0,currentBorderThickness:0,tweenDuration:1e3,edgeLines:null}},computed:{allOptions(){return{width:this.width,depth:this.depth,safety:this.safety,bottomHeight:this.bottomHeight,topHeight:this.topHeight,borderThickness:this.borderThickness,enableBackHole:this.enableBackHole,backHoleXOffset:this.backHoleXOffset,backHoleWidth:this.backHoleWidth,backHoleHeight:this.backHoleHeight,enableFrontHole:this.enableFrontHole,frontHoleXOffset:this.frontHoleXOffset,frontHoleWidth:this.frontHoleWidth,frontHoleHeight:this.frontHoleHeight,enableRightHole:this.enableRightHole,rightHoleXOffset:this.rightHoleXOffset,rightHoleWidth:this.rightHoleWidth,rightHoleHeight:this.rightHoleHeight,enableLeftHole:this.enableLeftHole,leftHoleXOffset:this.leftHoleXOffset,leftHoleWidth:this.leftHoleWidth,leftHoleHeight:this.leftHoleHeight}}},watch:{allOptions:{deep:!0,handler(t,e){if(!e)return;const n=["width","depth","safety","bottomHeight","topHeight","borderThickness"];if(n.some(s=>t[s]!==e[s])){const s={},r={};n.forEach(o=>{s[o]=e[o],r[o]=t[o]}),this.animateDimensionsTransition(s,r)}else this.rebuildMesh()}}},created(){this.scene=null,this.camera=null,this.renderer=null,this.controls=null,this.mesh=null},mounted(){this.currentWidth=this.width,this.currentDepth=this.depth,this.currentSafety=this.safety,this.currentBottomHeight=this.bottomHeight,this.currentTopHeight=this.topHeight,this.currentBorderThickness=this.borderThickness,this.initScene(),this.createInitialMesh()},methods:{generateSTL(t,e,n,i,s,r){const o=l=>Math.max(0,Number(l)||0),a={width:t,depth:e,safety:n,bottomHeight:i,topHeight:s,borderThickness:r,enableBackHole:this.enableBackHole,backHoleXOffset:this.backHoleXOffset,backHoleWidth:this.backHoleWidth,backHoleHeight:o(this.backHoleHeight),enableFrontHole:this.enableFrontHole,frontHoleXOffset:this.frontHoleXOffset,frontHoleWidth:this.frontHoleWidth,frontHoleHeight:o(this.frontHoleHeight),enableRightHole:this.enableRightHole,rightHoleXOffset:this.rightHoleXOffset,rightHoleWidth:this.rightHoleWidth,rightHoleHeight:o(this.rightHoleHeight),enableLeftHole:this.enableLeftHole,leftHoleXOffset:this.leftHoleXOffset,leftHoleWidth:this.leftHoleWidth,leftHoleHeight:o(this.leftHoleHeight)};try{const l=hH(a);return Dz.serialize({binary:!1},l).join(`
`)}catch(l){return console.error("Error generating geometry or STL:",l),null}},createInitialMesh(){const t=this.generateSTL(this.width,this.depth,this.safety,this.bottomHeight,this.topHeight,this.borderThickness);if(!t)return;this.stlData=t;const n=new lp().parse(t),i=new YT({color:11066076,roughness:.6,metalness:.1}),s=new Si(n,i);this.mesh=cs(s),this.scene.add(this.mesh);const r=new ip(n),o=new Ou({color:3355443}),a=new np(r,o);this.edgeLines=cs(a),this.scene.add(this.edgeLines)},rebuildMesh(){this.mesh&&(this.scene.remove(this.mesh),this.mesh.geometry.dispose()),this.edgeLines&&(this.scene.remove(this.edgeLines),this.edgeLines.geometry.dispose()),this.createInitialMesh()},animateDimensionsTransition(t,e){const n=performance.now(),i=this.tweenDuration,s=new lp,r=o=>{const a=Math.min((o-n)/i,1),l={};for(const u of Object.keys(t))l[u]=t[u]+(e[u]-t[u])*a;const c=this.generateSTL(l.width,l.depth,l.safety,l.bottomHeight,l.topHeight,l.borderThickness);if(c){const u=s.parse(c);this.mesh&&(this.mesh.geometry.dispose(),this.mesh.geometry=u),this.edgeLines&&(this.scene.remove(this.edgeLines),this.edgeLines.geometry.dispose());const f=new ip(u),h=new np(f,new Ou({color:3355443}));this.edgeLines=cs(h),this.scene.add(this.edgeLines),this.stlData=c}a<1?requestAnimationFrame(r):(this.currentWidth=e.width,this.currentDepth=e.depth,this.currentSafety=e.safety,this.currentBottomHeight=e.bottomHeight,this.currentTopHeight=e.topHeight,this.currentBorderThickness=e.borderThickness)};requestAnimationFrame(r)},initScene(){this.scene=cs(new qT),this.camera=cs(new Rn(75,600/500,.1,1e3)),this.camera.position.set(0,150,100),this.camera.up.set(0,0,1),this.camera.lookAt(0,0,10),this.renderer=cs(new t_({canvas:this.$refs.canvas,antialias:!0})),this.renderer.setSize(600,500),this.renderer.setClearColor(16250871),this.scene.add(new iA(7368816,.5));const n=new eA(16777215,4473924,.6);n.position.set(0,200,0),this.scene.add(n);const i=new ap(16777215,.8);i.position.set(1,1,1).normalize(),this.scene.add(i);const s=new ap(16777215,.4);s.position.set(-1,-1,1).normalize(),this.scene.add(s),this.controls=new sA(this.camera,this.renderer.domElement),this.controls.rotateSpeed=1,this.controls.zoomSpeed=1.2,this.controls.panSpeed=.2,this.controls.dynamicDampingFactor=.05,this.controls.minPolarAngle=Math.PI/4,this.controls.maxPolarAngle=Math.PI/2,this.animate()},animate(){requestAnimationFrame(this.animate.bind(this)),this.controls.update(),this.renderer.render(this.scene,this.camera)},downloadSTL(){if(!this.stlData)return;const t=new Blob([this.stlData],{type:"application/octet-stream"}),e=document.createElement("a");e.href=URL.createObjectURL(t),e.download=`SynthArmor_cover_${this.width}x${this.depth}_safetyOffset${this.safety}_bottomHeight${this.bottomHeight}_topHeight${this.topHeight}_borderThickness${this.borderThickness}.stl`,e.click()}}},Iz={class:"mt-2 mb-2 flex flex-col items-center"},Nz={class:"w-full max-w-[600px] flex flex-col items-center"},Fz={ref:"canvas",class:"rounded-md w-full max-w-[600px] border border-gray-300 border-t-0 border-b-0"};function Oz(t,e,n,i,s,r){return en(),an("div",Iz,[q("div",Nz,[e[0]||(e[0]=q("div",{class:"bg-gray-300 h-[1px] w-[95%]"},null,-1)),q("canvas",Fz,null,512),e[1]||(e[1]=q("div",{class:"bg-gray-300 h-[1px] w-[95%]"},null,-1))])])}const kz=Cs(Uz,[["render",Oz]]),Bz={name:"FAQ",data(){return{faqs:[{question:"What is this?",answer:"This web app lets you quickly generate a custom 3D model for gear cover protection. Simply enter your equipment’s dimensions, adjust a safety offset if needed, and download an STL file ready for 3D printing.",open:!1},{question:"How does it work?",answer:`
            <ol class="list-decimal pl-6 mt-2">
              <li><strong>Enter Dimensions:</strong> Provide the exact width and depth of your machine.</li>
              <li><strong>Adjust for Fit:</strong> Use the "Safety Offset" to add a small buffer for a secure fit.</li>
              <li><strong>Automatic Preview:</strong> The model updates automatically as you modify the values.</li>
              <li><strong>Download STL:</strong> Click the download button to save your custom design for 3D printing.</li>
            </ol>
          `,open:!1},{question:"A Word of Caution",answer:"Please note that you are solely responsible for ensuring that the generated model fits your machine. Always double-check the dimensions before printing.",open:!1}]}},methods:{toggle(t){this.faqs[t].open=!this.faqs[t].open}}},Hz={class:"w-full max-w-[600px] mt-8"},zz=["onClick"],Vz={class:"text-lg font-medium text-gray-700"},$z={class:"px-6 py-4 bg-gray-50"},Gz=["innerHTML"];function Wz(t,e,n,i,s,r){return en(),an("div",Hz,[e[1]||(e[1]=q("h2",{class:"text-2xl font-bold mb-6 text-gray-800 text-center"},"FAQ",-1)),(en(!0),an(Bn,null,Hx(s.faqs,(o,a)=>(en(),an("div",{key:a,class:"mb-4 border border-gray-200 rounded-lg overflow-hidden shadow-sm"},[q("button",{onClick:l=>r.toggle(a),class:"w-full flex items-center justify-between px-6 py-4 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"},[q("span",Vz,tf(o.question),1),(en(),an("svg",{class:ul(["w-5 h-5 text-gray-500 transform transition-transform duration-300",{"rotate-180":o.open}]),fill:"none",stroke:"currentColor",viewBox:"0 0 24 24"},e[0]||(e[0]=[q("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M19 9l-7 7-7-7"},null,-1)]),2))],8,zz),Tt(H1,{name:"faq-collapse"},{default:Vg(()=>[$e(q("div",$z,[q("div",{innerHTML:o.answer,class:"text-gray-600"},null,8,Gz)],512),[[X1,o.open]])]),_:2},1024)]))),128))])}const Xz=Cs(Bz,[["render",Wz],["__scopeId","data-v-9b75b70f"]]),qz={name:"HoleOptionsForm",props:{initialEnableBackHole:{type:Boolean,default:!1},initialBackHoleXOffset:{type:Number,default:0},initialBackHoleWidth:{type:Number,default:55},initialBackHoleHeight:{type:Number,default:10},initialEnableFrontHole:{type:Boolean,default:!1},initialFrontHoleXOffset:{type:Number,default:0},initialFrontHoleWidth:{type:Number,default:55},initialFrontHoleHeight:{type:Number,default:10},initialEnableRightHole:{type:Boolean,default:!1},initialRightHoleXOffset:{type:Number,default:0},initialRightHoleWidth:{type:Number,default:55},initialRightHoleHeight:{type:Number,default:10},initialEnableLeftHole:{type:Boolean,default:!1},initialLeftHoleXOffset:{type:Number,default:0},initialLeftHoleWidth:{type:Number,default:55},initialLeftHoleHeight:{type:Number,default:10},bottomHeight:{type:Number,required:!0}},data(){return{local:{enableBackHole:this.initialEnableBackHole,backHoleXOffset:this.initialBackHoleXOffset,backHoleWidth:this.initialBackHoleWidth,backHoleHeight:this.initialBackHoleHeight,enableFrontHole:this.initialEnableFrontHole,frontHoleXOffset:this.initialFrontHoleXOffset,frontHoleWidth:this.initialFrontHoleWidth,frontHoleHeight:this.initialFrontHoleHeight,enableRightHole:this.initialEnableRightHole,rightHoleXOffset:this.initialRightHoleXOffset,rightHoleWidth:this.initialRightHoleWidth,rightHoleHeight:this.initialRightHoleHeight,enableLeftHole:this.initialEnableLeftHole,leftHoleXOffset:this.initialLeftHoleXOffset,leftHoleWidth:this.initialLeftHoleWidth,leftHoleHeight:this.initialLeftHoleHeight}}},watch:{local:{deep:!0,handler(){this.$emit("update-hole-options",{...this.local})}}}},jz={class:"mb-6 p-4 border border-gray-300 rounded"},Yz={class:"grid grid-cols-1 md:grid-cols-2 gap-4"},Zz={class:"inline-flex items-center mb-2"},Kz={key:0,class:"space-y-2"},Jz={class:"flex items-center space-x-2"},Qz={class:"flex items-center space-x-2"},e4={class:"flex items-center space-x-2"},t4=["max"],n4=["max"],i4={class:"inline-flex items-center mb-2"},s4={key:0,class:"space-y-2"},r4={class:"flex items-center space-x-2"},o4={class:"flex items-center space-x-2"},a4={class:"flex items-center space-x-2"},l4=["max"],c4=["max"],u4={class:"inline-flex items-center mb-2"},f4={key:0,class:"space-y-2"},h4={class:"flex items-center space-x-2"},d4={class:"flex items-center space-x-2"},p4={class:"flex items-center space-x-2"},m4=["max"],g4=["max"],_4={class:"inline-flex items-center mb-2"},v4={key:0,class:"space-y-2"},x4={class:"flex items-center space-x-2"},y4={class:"flex items-center space-x-2"},b4={class:"flex items-center space-x-2"},M4=["max"],S4=["max"];function E4(t,e,n,i,s,r){return en(),an("fieldset",jz,[e[56]||(e[56]=q("legend",{class:"px-2 text-lg font-semibold"},"Hole Options",-1)),q("div",Yz,[q("div",null,[q("div",Zz,[$e(q("input",{type:"checkbox","onUpdate:modelValue":e[0]||(e[0]=o=>s.local.enableBackHole=o),class:"mr-2"},null,512),[[Vo,s.local.enableBackHole]]),e[28]||(e[28]=q("span",{class:"text-sm font-medium text-gray-700"},"Enable Back Hole",-1))]),s.local.enableBackHole?(en(),an("div",Kz,[q("div",Jz,[e[29]||(e[29]=q("label",{class:"w-24 text-sm text-gray-700"},"Position:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[1]||(e[1]=o=>s.local.backHoleXOffset=o),min:"-100",max:"100",step:"1",class:"flex-1"},null,512),[[Je,s.local.backHoleXOffset,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[2]||(e[2]=o=>s.local.backHoleXOffset=o),min:"-100",max:"100",step:"1",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.backHoleXOffset,void 0,{number:!0}]]),e[30]||(e[30]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",Qz,[e[31]||(e[31]=q("label",{class:"w-24 text-sm text-gray-700"},"Width:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[3]||(e[3]=o=>s.local.backHoleWidth=o),min:"0",max:"300",step:"1",class:"flex-1"},null,512),[[Je,s.local.backHoleWidth,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[4]||(e[4]=o=>s.local.backHoleWidth=o),min:"0",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.backHoleWidth,void 0,{number:!0}]]),e[32]||(e[32]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",e4,[e[33]||(e[33]=q("label",{class:"w-24 text-sm text-gray-700"},"Height:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[5]||(e[5]=o=>s.local.backHoleHeight=o),min:"0",max:n.bottomHeight,step:"1",class:"flex-1"},null,8,t4),[[Je,s.local.backHoleHeight,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[6]||(e[6]=o=>s.local.backHoleHeight=o),min:"0",max:n.bottomHeight,class:"p-2 border border-gray-300 rounded-md w-16"},null,8,n4),[[Je,s.local.backHoleHeight,void 0,{number:!0}]]),e[34]||(e[34]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])])):Jr("",!0)]),q("div",null,[q("div",i4,[$e(q("input",{type:"checkbox","onUpdate:modelValue":e[7]||(e[7]=o=>s.local.enableFrontHole=o),class:"mr-2"},null,512),[[Vo,s.local.enableFrontHole]]),e[35]||(e[35]=q("span",{class:"text-sm font-medium text-gray-700"},"Enable Front Hole",-1))]),s.local.enableFrontHole?(en(),an("div",s4,[q("div",r4,[e[36]||(e[36]=q("label",{class:"w-24 text-sm text-gray-700"},"Position:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[8]||(e[8]=o=>s.local.frontHoleXOffset=o),min:"-100",max:"100",step:"1",class:"flex-1"},null,512),[[Je,s.local.frontHoleXOffset,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[9]||(e[9]=o=>s.local.frontHoleXOffset=o),min:"-100",max:"100",step:"1",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.frontHoleXOffset,void 0,{number:!0}]]),e[37]||(e[37]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",o4,[e[38]||(e[38]=q("label",{class:"w-24 text-sm text-gray-700"},"Width:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[10]||(e[10]=o=>s.local.frontHoleWidth=o),min:"0",max:"300",step:"1",class:"flex-1"},null,512),[[Je,s.local.frontHoleWidth,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[11]||(e[11]=o=>s.local.frontHoleWidth=o),min:"0",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.frontHoleWidth,void 0,{number:!0}]]),e[39]||(e[39]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",a4,[e[40]||(e[40]=q("label",{class:"w-24 text-sm text-gray-700"},"Height:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[12]||(e[12]=o=>s.local.frontHoleHeight=o),min:"0",max:n.bottomHeight,step:"1",class:"flex-1"},null,8,l4),[[Je,s.local.frontHoleHeight,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[13]||(e[13]=o=>s.local.frontHoleHeight=o),min:"0",max:n.bottomHeight,class:"p-2 border border-gray-300 rounded-md w-16"},null,8,c4),[[Je,s.local.frontHoleHeight,void 0,{number:!0}]]),e[41]||(e[41]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])])):Jr("",!0)]),q("div",null,[q("div",u4,[$e(q("input",{type:"checkbox","onUpdate:modelValue":e[14]||(e[14]=o=>s.local.enableRightHole=o),class:"mr-2"},null,512),[[Vo,s.local.enableRightHole]]),e[42]||(e[42]=q("span",{class:"text-sm font-medium text-gray-700"},"Enable Right Hole",-1))]),s.local.enableRightHole?(en(),an("div",f4,[q("div",h4,[e[43]||(e[43]=q("label",{class:"w-24 text-sm text-gray-700"},"Position:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[15]||(e[15]=o=>s.local.rightHoleXOffset=o),min:"-100",max:"100",step:"1",class:"flex-1"},null,512),[[Je,s.local.rightHoleXOffset,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[16]||(e[16]=o=>s.local.rightHoleXOffset=o),min:"-100",max:"100",step:"1",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.rightHoleXOffset,void 0,{number:!0}]]),e[44]||(e[44]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",d4,[e[45]||(e[45]=q("label",{class:"w-24 text-sm text-gray-700"},"Width:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[17]||(e[17]=o=>s.local.rightHoleWidth=o),min:"0",max:"300",step:"1",class:"flex-1"},null,512),[[Je,s.local.rightHoleWidth,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[18]||(e[18]=o=>s.local.rightHoleWidth=o),min:"0",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.rightHoleWidth,void 0,{number:!0}]]),e[46]||(e[46]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",p4,[e[47]||(e[47]=q("label",{class:"w-24 text-sm text-gray-700"},"Height:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[19]||(e[19]=o=>s.local.rightHoleHeight=o),min:"0",max:n.bottomHeight,step:"1",class:"flex-1"},null,8,m4),[[Je,s.local.rightHoleHeight,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[20]||(e[20]=o=>s.local.rightHoleHeight=o),min:"0",max:n.bottomHeight,class:"p-2 border border-gray-300 rounded-md w-16"},null,8,g4),[[Je,s.local.rightHoleHeight,void 0,{number:!0}]]),e[48]||(e[48]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])])):Jr("",!0)]),q("div",null,[q("div",_4,[$e(q("input",{type:"checkbox","onUpdate:modelValue":e[21]||(e[21]=o=>s.local.enableLeftHole=o),class:"mr-2"},null,512),[[Vo,s.local.enableLeftHole]]),e[49]||(e[49]=q("span",{class:"text-sm font-medium text-gray-700"},"Enable Left Hole",-1))]),s.local.enableLeftHole?(en(),an("div",v4,[q("div",x4,[e[50]||(e[50]=q("label",{class:"w-24 text-sm text-gray-700"},"Position:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[22]||(e[22]=o=>s.local.leftHoleXOffset=o),min:"-100",max:"100",step:"1",class:"flex-1"},null,512),[[Je,s.local.leftHoleXOffset,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[23]||(e[23]=o=>s.local.leftHoleXOffset=o),min:"-100",max:"100",step:"1",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.leftHoleXOffset,void 0,{number:!0}]]),e[51]||(e[51]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",y4,[e[52]||(e[52]=q("label",{class:"w-24 text-sm text-gray-700"},"Width:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[24]||(e[24]=o=>s.local.leftHoleWidth=o),min:"0",max:"300",step:"1",class:"flex-1"},null,512),[[Je,s.local.leftHoleWidth,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[25]||(e[25]=o=>s.local.leftHoleWidth=o),min:"0",class:"p-2 border border-gray-300 rounded-md w-16"},null,512),[[Je,s.local.leftHoleWidth,void 0,{number:!0}]]),e[53]||(e[53]=q("span",{class:"text-sm text-gray-700"},"mm",-1))]),q("div",b4,[e[54]||(e[54]=q("label",{class:"w-24 text-sm text-gray-700"},"Height:",-1)),$e(q("input",{type:"range","onUpdate:modelValue":e[26]||(e[26]=o=>s.local.leftHoleHeight=o),min:"0",max:n.bottomHeight,step:"1",class:"flex-1"},null,8,M4),[[Je,s.local.leftHoleHeight,void 0,{number:!0}]]),$e(q("input",{type:"number","onUpdate:modelValue":e[27]||(e[27]=o=>s.local.leftHoleHeight=o),min:"0",max:n.bottomHeight,class:"p-2 border border-gray-300 rounded-md w-16"},null,8,S4),[[Je,s.local.leftHoleHeight,void 0,{number:!0}]]),e[55]||(e[55]=q("span",{class:"text-sm text-gray-700"},"mm",-1))])])):Jr("",!0)])])])}const w4=Cs(qz,[["render",E4]]);function Bf(){return{async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}}var Ds=Bf();function gv(t){Ds=t}var po={exec:()=>null};function tt(t,e=""){let n=typeof t=="string"?t:t.source;const i={replace:(s,r)=>{let o=typeof r=="string"?r:r.source;return o=o.replace(tn.caret,"$1"),n=n.replace(s,o),i},getRegex:()=>new RegExp(n,e)};return i}var tn={codeRemoveIndent:/^(?: {1,4}| {0,3}\t)/gm,outputLinkReplace:/\\([\[\]])/g,indentCodeCompensation:/^(\s+)(?:```)/,beginningSpace:/^\s+/,endingHash:/#$/,startingSpaceChar:/^ /,endingSpaceChar:/ $/,nonSpaceChar:/[^ ]/,newLineCharGlobal:/\n/g,tabCharGlobal:/\t/g,multipleSpaceGlobal:/\s+/g,blankLine:/^[ \t]*$/,doubleBlankLine:/\n[ \t]*\n[ \t]*$/,blockquoteStart:/^ {0,3}>/,blockquoteSetextReplace:/\n {0,3}((?:=+|-+) *)(?=\n|$)/g,blockquoteSetextReplace2:/^ {0,3}>[ \t]?/gm,listReplaceTabs:/^\t+/,listReplaceNesting:/^ {1,4}(?=( {4})*[^ ])/g,listIsTask:/^\[[ xX]\] /,listReplaceTask:/^\[[ xX]\] +/,anyLine:/\n.*\n/,hrefBrackets:/^<(.*)>$/,tableDelimiter:/[:|]/,tableAlignChars:/^\||\| *$/g,tableRowBlankLine:/\n[ \t]*$/,tableAlignRight:/^ *-+: *$/,tableAlignCenter:/^ *:-+: *$/,tableAlignLeft:/^ *:-+ *$/,startATag:/^<a /i,endATag:/^<\/a>/i,startPreScriptTag:/^<(pre|code|kbd|script)(\s|>)/i,endPreScriptTag:/^<\/(pre|code|kbd|script)(\s|>)/i,startAngleBracket:/^</,endAngleBracket:/>$/,pedanticHrefTitle:/^([^'"]*[^\s])\s+(['"])(.*)\2/,unicodeAlphaNumeric:/[\p{L}\p{N}]/u,escapeTest:/[&<>"']/,escapeReplace:/[&<>"']/g,escapeTestNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,escapeReplaceNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g,unescapeTest:/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig,caret:/(^|[^\[])\^/g,percentDecode:/%25/g,findPipe:/\|/g,splitPipe:/ \|/,slashPipe:/\\\|/g,carriageReturn:/\r\n|\r/g,spaceLine:/^ +$/gm,notSpaceStart:/^\S*/,endingNewline:/\n$/,listItemRegex:t=>new RegExp(`^( {0,3}${t})((?:[	 ][^\\n]*)?(?:\\n|$))`),nextBulletRegex:t=>new RegExp(`^ {0,${Math.min(3,t-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),hrRegex:t=>new RegExp(`^ {0,${Math.min(3,t-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),fencesBeginRegex:t=>new RegExp(`^ {0,${Math.min(3,t-1)}}(?:\`\`\`|~~~)`),headingBeginRegex:t=>new RegExp(`^ {0,${Math.min(3,t-1)}}#`),htmlBeginRegex:t=>new RegExp(`^ {0,${Math.min(3,t-1)}}<(?:[a-z].*>|!--)`,"i")},T4=/^(?:[ \t]*(?:\n|$))+/,A4=/^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/,R4=/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,Fo=/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,C4=/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,Hf=/(?:[*+-]|\d{1,9}[.)])/,_v=/^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,vv=tt(_v).replace(/bull/g,Hf).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/\|table/g,"").getRegex(),P4=tt(_v).replace(/bull/g,Hf).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/table/g,/ {0,3}\|?(?:[:\- ]*\|)+[\:\- ]*\n/).getRegex(),zf=/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,L4=/^[^\n]+/,Vf=/(?!\s*\])(?:\\.|[^\[\]\\])+/,D4=tt(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label",Vf).replace("title",/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(),U4=tt(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g,Hf).getRegex(),Bl="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",$f=/<!--(?:-?>|[\s\S]*?(?:-->|$))/,I4=tt("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$))","i").replace("comment",$f).replace("tag",Bl).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),xv=tt(zf).replace("hr",Fo).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Bl).getRegex(),N4=tt(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph",xv).getRegex(),Gf={blockquote:N4,code:A4,def:D4,fences:R4,heading:C4,hr:Fo,html:I4,lheading:vv,list:U4,newline:T4,paragraph:xv,table:po,text:L4},ag=tt("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr",Fo).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("blockquote"," {0,3}>").replace("code","(?: {4}| {0,3}	)[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Bl).getRegex(),F4={...Gf,lheading:P4,table:ag,paragraph:tt(zf).replace("hr",Fo).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("table",ag).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",Bl).getRegex()},O4={...Gf,html:tt(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",$f).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:po,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:tt(zf).replace("hr",Fo).replace("heading",` *#{1,6} *[^
]`).replace("lheading",vv).replace("|table","").replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").replace("|tag","").getRegex()},k4=/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,B4=/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,yv=/^( {2,}|\\)\n(?!\s*$)/,H4=/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,Hl=/[\p{P}\p{S}]/u,Wf=/[\s\p{P}\p{S}]/u,bv=/[^\s\p{P}\p{S}]/u,z4=tt(/^((?![*_])punctSpace)/,"u").replace(/punctSpace/g,Wf).getRegex(),Mv=/(?!~)[\p{P}\p{S}]/u,V4=/(?!~)[\s\p{P}\p{S}]/u,$4=/(?:[^\s\p{P}\p{S}]|~)/u,G4=/\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g,Sv=/^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/,W4=tt(Sv,"u").replace(/punct/g,Hl).getRegex(),X4=tt(Sv,"u").replace(/punct/g,Mv).getRegex(),Ev="^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)",q4=tt(Ev,"gu").replace(/notPunctSpace/g,bv).replace(/punctSpace/g,Wf).replace(/punct/g,Hl).getRegex(),j4=tt(Ev,"gu").replace(/notPunctSpace/g,$4).replace(/punctSpace/g,V4).replace(/punct/g,Mv).getRegex(),Y4=tt("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)","gu").replace(/notPunctSpace/g,bv).replace(/punctSpace/g,Wf).replace(/punct/g,Hl).getRegex(),Z4=tt(/\\(punct)/,"gu").replace(/punct/g,Hl).getRegex(),K4=tt(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme",/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email",/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(),J4=tt($f).replace("(?:-->|$)","-->").getRegex(),Q4=tt("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment",J4).replace("attribute",/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(),nl=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,eV=tt(/^!?\[(label)\]\(\s*(href)(?:(?:[ \t]*(?:\n[ \t]*)?)(title))?\s*\)/).replace("label",nl).replace("href",/<(?:\\.|[^\n<>\\])+>|[^ \t\n\x00-\x1f]*/).replace("title",/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(),wv=tt(/^!?\[(label)\]\[(ref)\]/).replace("label",nl).replace("ref",Vf).getRegex(),Tv=tt(/^!?\[(ref)\](?:\[\])?/).replace("ref",Vf).getRegex(),tV=tt("reflink|nolink(?!\\()","g").replace("reflink",wv).replace("nolink",Tv).getRegex(),Xf={_backpedal:po,anyPunctuation:Z4,autolink:K4,blockSkip:G4,br:yv,code:B4,del:po,emStrongLDelim:W4,emStrongRDelimAst:q4,emStrongRDelimUnd:Y4,escape:k4,link:eV,nolink:Tv,punctuation:z4,reflink:wv,reflinkSearch:tV,tag:Q4,text:H4,url:po},nV={...Xf,link:tt(/^!?\[(label)\]\((.*?)\)/).replace("label",nl).getRegex(),reflink:tt(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",nl).getRegex()},ju={...Xf,emStrongRDelimAst:j4,emStrongLDelim:X4,url:tt(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,"i").replace("email",/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/},iV={...ju,br:tt(yv).replace("{2,}","*").getRegex(),text:tt(ju.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()},Ua={normal:Gf,gfm:F4,pedantic:O4},Yr={normal:Xf,gfm:ju,breaks:iV,pedantic:nV},sV={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},lg=t=>sV[t];function Kn(t,e){if(e){if(tn.escapeTest.test(t))return t.replace(tn.escapeReplace,lg)}else if(tn.escapeTestNoEncode.test(t))return t.replace(tn.escapeReplaceNoEncode,lg);return t}function cg(t){try{t=encodeURI(t).replace(tn.percentDecode,"%")}catch{return null}return t}function ug(t,e){var r;const n=t.replace(tn.findPipe,(o,a,l)=>{let c=!1,u=a;for(;--u>=0&&l[u]==="\\";)c=!c;return c?"|":" |"}),i=n.split(tn.splitPipe);let s=0;if(i[0].trim()||i.shift(),i.length>0&&!((r=i.at(-1))!=null&&r.trim())&&i.pop(),e)if(i.length>e)i.splice(e);else for(;i.length<e;)i.push("");for(;s<i.length;s++)i[s]=i[s].trim().replace(tn.slashPipe,"|");return i}function Zr(t,e,n){const i=t.length;if(i===0)return"";let s=0;for(;s<i&&t.charAt(i-s-1)===e;)s++;return t.slice(0,i-s)}function rV(t,e){if(t.indexOf(e[1])===-1)return-1;let n=0;for(let i=0;i<t.length;i++)if(t[i]==="\\")i++;else if(t[i]===e[0])n++;else if(t[i]===e[1]&&(n--,n<0))return i;return n>0?-2:-1}function fg(t,e,n,i,s){const r=e.href,o=e.title||null,a=t[1].replace(s.other.outputLinkReplace,"$1");i.state.inLink=!0;const l={type:t[0].charAt(0)==="!"?"image":"link",raw:n,href:r,title:o,text:a,tokens:i.inlineTokens(a)};return i.state.inLink=!1,l}function oV(t,e,n){const i=t.match(n.other.indentCodeCompensation);if(i===null)return e;const s=i[1];return e.split(`
`).map(r=>{const o=r.match(n.other.beginningSpace);if(o===null)return r;const[a]=o;return a.length>=s.length?r.slice(s.length):r}).join(`
`)}var il=class{constructor(t){ct(this,"options");ct(this,"rules");ct(this,"lexer");this.options=t||Ds}space(t){const e=this.rules.block.newline.exec(t);if(e&&e[0].length>0)return{type:"space",raw:e[0]}}code(t){const e=this.rules.block.code.exec(t);if(e){const n=e[0].replace(this.rules.other.codeRemoveIndent,"");return{type:"code",raw:e[0],codeBlockStyle:"indented",text:this.options.pedantic?n:Zr(n,`
`)}}}fences(t){const e=this.rules.block.fences.exec(t);if(e){const n=e[0],i=oV(n,e[3]||"",this.rules);return{type:"code",raw:n,lang:e[2]?e[2].trim().replace(this.rules.inline.anyPunctuation,"$1"):e[2],text:i}}}heading(t){const e=this.rules.block.heading.exec(t);if(e){let n=e[2].trim();if(this.rules.other.endingHash.test(n)){const i=Zr(n,"#");(this.options.pedantic||!i||this.rules.other.endingSpaceChar.test(i))&&(n=i.trim())}return{type:"heading",raw:e[0],depth:e[1].length,text:n,tokens:this.lexer.inline(n)}}}hr(t){const e=this.rules.block.hr.exec(t);if(e)return{type:"hr",raw:Zr(e[0],`
`)}}blockquote(t){const e=this.rules.block.blockquote.exec(t);if(e){let n=Zr(e[0],`
`).split(`
`),i="",s="";const r=[];for(;n.length>0;){let o=!1;const a=[];let l;for(l=0;l<n.length;l++)if(this.rules.other.blockquoteStart.test(n[l]))a.push(n[l]),o=!0;else if(!o)a.push(n[l]);else break;n=n.slice(l);const c=a.join(`
`),u=c.replace(this.rules.other.blockquoteSetextReplace,`
    $1`).replace(this.rules.other.blockquoteSetextReplace2,"");i=i?`${i}
${c}`:c,s=s?`${s}
${u}`:u;const f=this.lexer.state.top;if(this.lexer.state.top=!0,this.lexer.blockTokens(u,r,!0),this.lexer.state.top=f,n.length===0)break;const h=r.at(-1);if((h==null?void 0:h.type)==="code")break;if((h==null?void 0:h.type)==="blockquote"){const d=h,m=d.raw+`
`+n.join(`
`),_=this.blockquote(m);r[r.length-1]=_,i=i.substring(0,i.length-d.raw.length)+_.raw,s=s.substring(0,s.length-d.text.length)+_.text;break}else if((h==null?void 0:h.type)==="list"){const d=h,m=d.raw+`
`+n.join(`
`),_=this.list(m);r[r.length-1]=_,i=i.substring(0,i.length-h.raw.length)+_.raw,s=s.substring(0,s.length-d.raw.length)+_.raw,n=m.substring(r.at(-1).raw.length).split(`
`);continue}}return{type:"blockquote",raw:i,tokens:r,text:s}}}list(t){let e=this.rules.block.list.exec(t);if(e){let n=e[1].trim();const i=n.length>1,s={type:"list",raw:"",ordered:i,start:i?+n.slice(0,-1):"",loose:!1,items:[]};n=i?`\\d{1,9}\\${n.slice(-1)}`:`\\${n}`,this.options.pedantic&&(n=i?n:"[*+-]");const r=this.rules.other.listItemRegex(n);let o=!1;for(;t;){let l=!1,c="",u="";if(!(e=r.exec(t))||this.rules.block.hr.test(t))break;c=e[0],t=t.substring(c.length);let f=e[2].split(`
`,1)[0].replace(this.rules.other.listReplaceTabs,p=>" ".repeat(3*p.length)),h=t.split(`
`,1)[0],d=!f.trim(),m=0;if(this.options.pedantic?(m=2,u=f.trimStart()):d?m=e[1].length+1:(m=e[2].search(this.rules.other.nonSpaceChar),m=m>4?1:m,u=f.slice(m),m+=e[1].length),d&&this.rules.other.blankLine.test(h)&&(c+=h+`
`,t=t.substring(h.length+1),l=!0),!l){const p=this.rules.other.nextBulletRegex(m),S=this.rules.other.hrRegex(m),y=this.rules.other.fencesBeginRegex(m),x=this.rules.other.headingBeginRegex(m),b=this.rules.other.htmlBeginRegex(m);for(;t;){const M=t.split(`
`,1)[0];let T;if(h=M,this.options.pedantic?(h=h.replace(this.rules.other.listReplaceNesting,"  "),T=h):T=h.replace(this.rules.other.tabCharGlobal,"    "),y.test(h)||x.test(h)||b.test(h)||p.test(h)||S.test(h))break;if(T.search(this.rules.other.nonSpaceChar)>=m||!h.trim())u+=`
`+T.slice(m);else{if(d||f.replace(this.rules.other.tabCharGlobal,"    ").search(this.rules.other.nonSpaceChar)>=4||y.test(f)||x.test(f)||S.test(f))break;u+=`
`+h}!d&&!h.trim()&&(d=!0),c+=M+`
`,t=t.substring(M.length+1),f=T.slice(m)}}s.loose||(o?s.loose=!0:this.rules.other.doubleBlankLine.test(c)&&(o=!0));let _=null,g;this.options.gfm&&(_=this.rules.other.listIsTask.exec(u),_&&(g=_[0]!=="[ ] ",u=u.replace(this.rules.other.listReplaceTask,""))),s.items.push({type:"list_item",raw:c,task:!!_,checked:g,loose:!1,text:u,tokens:[]}),s.raw+=c}const a=s.items.at(-1);if(a)a.raw=a.raw.trimEnd(),a.text=a.text.trimEnd();else return;s.raw=s.raw.trimEnd();for(let l=0;l<s.items.length;l++)if(this.lexer.state.top=!1,s.items[l].tokens=this.lexer.blockTokens(s.items[l].text,[]),!s.loose){const c=s.items[l].tokens.filter(f=>f.type==="space"),u=c.length>0&&c.some(f=>this.rules.other.anyLine.test(f.raw));s.loose=u}if(s.loose)for(let l=0;l<s.items.length;l++)s.items[l].loose=!0;return s}}html(t){const e=this.rules.block.html.exec(t);if(e)return{type:"html",block:!0,raw:e[0],pre:e[1]==="pre"||e[1]==="script"||e[1]==="style",text:e[0]}}def(t){const e=this.rules.block.def.exec(t);if(e){const n=e[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal," "),i=e[2]?e[2].replace(this.rules.other.hrefBrackets,"$1").replace(this.rules.inline.anyPunctuation,"$1"):"",s=e[3]?e[3].substring(1,e[3].length-1).replace(this.rules.inline.anyPunctuation,"$1"):e[3];return{type:"def",tag:n,raw:e[0],href:i,title:s}}}table(t){var o;const e=this.rules.block.table.exec(t);if(!e||!this.rules.other.tableDelimiter.test(e[2]))return;const n=ug(e[1]),i=e[2].replace(this.rules.other.tableAlignChars,"").split("|"),s=(o=e[3])!=null&&o.trim()?e[3].replace(this.rules.other.tableRowBlankLine,"").split(`
`):[],r={type:"table",raw:e[0],header:[],align:[],rows:[]};if(n.length===i.length){for(const a of i)this.rules.other.tableAlignRight.test(a)?r.align.push("right"):this.rules.other.tableAlignCenter.test(a)?r.align.push("center"):this.rules.other.tableAlignLeft.test(a)?r.align.push("left"):r.align.push(null);for(let a=0;a<n.length;a++)r.header.push({text:n[a],tokens:this.lexer.inline(n[a]),header:!0,align:r.align[a]});for(const a of s)r.rows.push(ug(a,r.header.length).map((l,c)=>({text:l,tokens:this.lexer.inline(l),header:!1,align:r.align[c]})));return r}}lheading(t){const e=this.rules.block.lheading.exec(t);if(e)return{type:"heading",raw:e[0],depth:e[2].charAt(0)==="="?1:2,text:e[1],tokens:this.lexer.inline(e[1])}}paragraph(t){const e=this.rules.block.paragraph.exec(t);if(e){const n=e[1].charAt(e[1].length-1)===`
`?e[1].slice(0,-1):e[1];return{type:"paragraph",raw:e[0],text:n,tokens:this.lexer.inline(n)}}}text(t){const e=this.rules.block.text.exec(t);if(e)return{type:"text",raw:e[0],text:e[0],tokens:this.lexer.inline(e[0])}}escape(t){const e=this.rules.inline.escape.exec(t);if(e)return{type:"escape",raw:e[0],text:e[1]}}tag(t){const e=this.rules.inline.tag.exec(t);if(e)return!this.lexer.state.inLink&&this.rules.other.startATag.test(e[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&this.rules.other.endATag.test(e[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&this.rules.other.startPreScriptTag.test(e[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&this.rules.other.endPreScriptTag.test(e[0])&&(this.lexer.state.inRawBlock=!1),{type:"html",raw:e[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,block:!1,text:e[0]}}link(t){const e=this.rules.inline.link.exec(t);if(e){const n=e[2].trim();if(!this.options.pedantic&&this.rules.other.startAngleBracket.test(n)){if(!this.rules.other.endAngleBracket.test(n))return;const r=Zr(n.slice(0,-1),"\\");if((n.length-r.length)%2===0)return}else{const r=rV(e[2],"()");if(r===-2)return;if(r>-1){const a=(e[0].indexOf("!")===0?5:4)+e[1].length+r;e[2]=e[2].substring(0,r),e[0]=e[0].substring(0,a).trim(),e[3]=""}}let i=e[2],s="";if(this.options.pedantic){const r=this.rules.other.pedanticHrefTitle.exec(i);r&&(i=r[1],s=r[3])}else s=e[3]?e[3].slice(1,-1):"";return i=i.trim(),this.rules.other.startAngleBracket.test(i)&&(this.options.pedantic&&!this.rules.other.endAngleBracket.test(n)?i=i.slice(1):i=i.slice(1,-1)),fg(e,{href:i&&i.replace(this.rules.inline.anyPunctuation,"$1"),title:s&&s.replace(this.rules.inline.anyPunctuation,"$1")},e[0],this.lexer,this.rules)}}reflink(t,e){let n;if((n=this.rules.inline.reflink.exec(t))||(n=this.rules.inline.nolink.exec(t))){const i=(n[2]||n[1]).replace(this.rules.other.multipleSpaceGlobal," "),s=e[i.toLowerCase()];if(!s){const r=n[0].charAt(0);return{type:"text",raw:r,text:r}}return fg(n,s,n[0],this.lexer,this.rules)}}emStrong(t,e,n=""){let i=this.rules.inline.emStrongLDelim.exec(t);if(!i||i[3]&&n.match(this.rules.other.unicodeAlphaNumeric))return;if(!(i[1]||i[2]||"")||!n||this.rules.inline.punctuation.exec(n)){const r=[...i[0]].length-1;let o,a,l=r,c=0;const u=i[0][0]==="*"?this.rules.inline.emStrongRDelimAst:this.rules.inline.emStrongRDelimUnd;for(u.lastIndex=0,e=e.slice(-1*t.length+r);(i=u.exec(e))!=null;){if(o=i[1]||i[2]||i[3]||i[4]||i[5]||i[6],!o)continue;if(a=[...o].length,i[3]||i[4]){l+=a;continue}else if((i[5]||i[6])&&r%3&&!((r+a)%3)){c+=a;continue}if(l-=a,l>0)continue;a=Math.min(a,a+l+c);const f=[...i[0]][0].length,h=t.slice(0,r+i.index+f+a);if(Math.min(r,a)%2){const m=h.slice(1,-1);return{type:"em",raw:h,text:m,tokens:this.lexer.inlineTokens(m)}}const d=h.slice(2,-2);return{type:"strong",raw:h,text:d,tokens:this.lexer.inlineTokens(d)}}}}codespan(t){const e=this.rules.inline.code.exec(t);if(e){let n=e[2].replace(this.rules.other.newLineCharGlobal," ");const i=this.rules.other.nonSpaceChar.test(n),s=this.rules.other.startingSpaceChar.test(n)&&this.rules.other.endingSpaceChar.test(n);return i&&s&&(n=n.substring(1,n.length-1)),{type:"codespan",raw:e[0],text:n}}}br(t){const e=this.rules.inline.br.exec(t);if(e)return{type:"br",raw:e[0]}}del(t){const e=this.rules.inline.del.exec(t);if(e)return{type:"del",raw:e[0],text:e[2],tokens:this.lexer.inlineTokens(e[2])}}autolink(t){const e=this.rules.inline.autolink.exec(t);if(e){let n,i;return e[2]==="@"?(n=e[1],i="mailto:"+n):(n=e[1],i=n),{type:"link",raw:e[0],text:n,href:i,tokens:[{type:"text",raw:n,text:n}]}}}url(t){var n;let e;if(e=this.rules.inline.url.exec(t)){let i,s;if(e[2]==="@")i=e[0],s="mailto:"+i;else{let r;do r=e[0],e[0]=((n=this.rules.inline._backpedal.exec(e[0]))==null?void 0:n[0])??"";while(r!==e[0]);i=e[0],e[1]==="www."?s="http://"+e[0]:s=e[0]}return{type:"link",raw:e[0],text:i,href:s,tokens:[{type:"text",raw:i,text:i}]}}}inlineText(t){const e=this.rules.inline.text.exec(t);if(e){const n=this.lexer.state.inRawBlock;return{type:"text",raw:e[0],text:e[0],escaped:n}}}},Ei=class Yu{constructor(e){ct(this,"tokens");ct(this,"options");ct(this,"state");ct(this,"tokenizer");ct(this,"inlineQueue");this.tokens=[],this.tokens.links=Object.create(null),this.options=e||Ds,this.options.tokenizer=this.options.tokenizer||new il,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const n={other:tn,block:Ua.normal,inline:Yr.normal};this.options.pedantic?(n.block=Ua.pedantic,n.inline=Yr.pedantic):this.options.gfm&&(n.block=Ua.gfm,this.options.breaks?n.inline=Yr.breaks:n.inline=Yr.gfm),this.tokenizer.rules=n}static get rules(){return{block:Ua,inline:Yr}}static lex(e,n){return new Yu(n).lex(e)}static lexInline(e,n){return new Yu(n).inlineTokens(e)}lex(e){e=e.replace(tn.carriageReturn,`
`),this.blockTokens(e,this.tokens);for(let n=0;n<this.inlineQueue.length;n++){const i=this.inlineQueue[n];this.inlineTokens(i.src,i.tokens)}return this.inlineQueue=[],this.tokens}blockTokens(e,n=[],i=!1){var s,r,o;for(this.options.pedantic&&(e=e.replace(tn.tabCharGlobal,"    ").replace(tn.spaceLine,""));e;){let a;if((r=(s=this.options.extensions)==null?void 0:s.block)!=null&&r.some(c=>(a=c.call({lexer:this},e,n))?(e=e.substring(a.raw.length),n.push(a),!0):!1))continue;if(a=this.tokenizer.space(e)){e=e.substring(a.raw.length);const c=n.at(-1);a.raw.length===1&&c!==void 0?c.raw+=`
`:n.push(a);continue}if(a=this.tokenizer.code(e)){e=e.substring(a.raw.length);const c=n.at(-1);(c==null?void 0:c.type)==="paragraph"||(c==null?void 0:c.type)==="text"?(c.raw+=`
`+a.raw,c.text+=`
`+a.text,this.inlineQueue.at(-1).src=c.text):n.push(a);continue}if(a=this.tokenizer.fences(e)){e=e.substring(a.raw.length),n.push(a);continue}if(a=this.tokenizer.heading(e)){e=e.substring(a.raw.length),n.push(a);continue}if(a=this.tokenizer.hr(e)){e=e.substring(a.raw.length),n.push(a);continue}if(a=this.tokenizer.blockquote(e)){e=e.substring(a.raw.length),n.push(a);continue}if(a=this.tokenizer.list(e)){e=e.substring(a.raw.length),n.push(a);continue}if(a=this.tokenizer.html(e)){e=e.substring(a.raw.length),n.push(a);continue}if(a=this.tokenizer.def(e)){e=e.substring(a.raw.length);const c=n.at(-1);(c==null?void 0:c.type)==="paragraph"||(c==null?void 0:c.type)==="text"?(c.raw+=`
`+a.raw,c.text+=`
`+a.raw,this.inlineQueue.at(-1).src=c.text):this.tokens.links[a.tag]||(this.tokens.links[a.tag]={href:a.href,title:a.title});continue}if(a=this.tokenizer.table(e)){e=e.substring(a.raw.length),n.push(a);continue}if(a=this.tokenizer.lheading(e)){e=e.substring(a.raw.length),n.push(a);continue}let l=e;if((o=this.options.extensions)!=null&&o.startBlock){let c=1/0;const u=e.slice(1);let f;this.options.extensions.startBlock.forEach(h=>{f=h.call({lexer:this},u),typeof f=="number"&&f>=0&&(c=Math.min(c,f))}),c<1/0&&c>=0&&(l=e.substring(0,c+1))}if(this.state.top&&(a=this.tokenizer.paragraph(l))){const c=n.at(-1);i&&(c==null?void 0:c.type)==="paragraph"?(c.raw+=`
`+a.raw,c.text+=`
`+a.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=c.text):n.push(a),i=l.length!==e.length,e=e.substring(a.raw.length);continue}if(a=this.tokenizer.text(e)){e=e.substring(a.raw.length);const c=n.at(-1);(c==null?void 0:c.type)==="text"?(c.raw+=`
`+a.raw,c.text+=`
`+a.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=c.text):n.push(a);continue}if(e){const c="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(c);break}else throw new Error(c)}}return this.state.top=!0,n}inline(e,n=[]){return this.inlineQueue.push({src:e,tokens:n}),n}inlineTokens(e,n=[]){var a,l,c;let i=e,s=null;if(this.tokens.links){const u=Object.keys(this.tokens.links);if(u.length>0)for(;(s=this.tokenizer.rules.inline.reflinkSearch.exec(i))!=null;)u.includes(s[0].slice(s[0].lastIndexOf("[")+1,-1))&&(i=i.slice(0,s.index)+"["+"a".repeat(s[0].length-2)+"]"+i.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(s=this.tokenizer.rules.inline.anyPunctuation.exec(i))!=null;)i=i.slice(0,s.index)+"++"+i.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);for(;(s=this.tokenizer.rules.inline.blockSkip.exec(i))!=null;)i=i.slice(0,s.index)+"["+"a".repeat(s[0].length-2)+"]"+i.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);let r=!1,o="";for(;e;){r||(o=""),r=!1;let u;if((l=(a=this.options.extensions)==null?void 0:a.inline)!=null&&l.some(h=>(u=h.call({lexer:this},e,n))?(e=e.substring(u.raw.length),n.push(u),!0):!1))continue;if(u=this.tokenizer.escape(e)){e=e.substring(u.raw.length),n.push(u);continue}if(u=this.tokenizer.tag(e)){e=e.substring(u.raw.length),n.push(u);continue}if(u=this.tokenizer.link(e)){e=e.substring(u.raw.length),n.push(u);continue}if(u=this.tokenizer.reflink(e,this.tokens.links)){e=e.substring(u.raw.length);const h=n.at(-1);u.type==="text"&&(h==null?void 0:h.type)==="text"?(h.raw+=u.raw,h.text+=u.text):n.push(u);continue}if(u=this.tokenizer.emStrong(e,i,o)){e=e.substring(u.raw.length),n.push(u);continue}if(u=this.tokenizer.codespan(e)){e=e.substring(u.raw.length),n.push(u);continue}if(u=this.tokenizer.br(e)){e=e.substring(u.raw.length),n.push(u);continue}if(u=this.tokenizer.del(e)){e=e.substring(u.raw.length),n.push(u);continue}if(u=this.tokenizer.autolink(e)){e=e.substring(u.raw.length),n.push(u);continue}if(!this.state.inLink&&(u=this.tokenizer.url(e))){e=e.substring(u.raw.length),n.push(u);continue}let f=e;if((c=this.options.extensions)!=null&&c.startInline){let h=1/0;const d=e.slice(1);let m;this.options.extensions.startInline.forEach(_=>{m=_.call({lexer:this},d),typeof m=="number"&&m>=0&&(h=Math.min(h,m))}),h<1/0&&h>=0&&(f=e.substring(0,h+1))}if(u=this.tokenizer.inlineText(f)){e=e.substring(u.raw.length),u.raw.slice(-1)!=="_"&&(o=u.raw.slice(-1)),r=!0;const h=n.at(-1);(h==null?void 0:h.type)==="text"?(h.raw+=u.raw,h.text+=u.text):n.push(u);continue}if(e){const h="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(h);break}else throw new Error(h)}}return n}},sl=class{constructor(t){ct(this,"options");ct(this,"parser");this.options=t||Ds}space(t){return""}code({text:t,lang:e,escaped:n}){var r;const i=(r=(e||"").match(tn.notSpaceStart))==null?void 0:r[0],s=t.replace(tn.endingNewline,"")+`
`;return i?'<pre><code class="language-'+Kn(i)+'">'+(n?s:Kn(s,!0))+`</code></pre>
`:"<pre><code>"+(n?s:Kn(s,!0))+`</code></pre>
`}blockquote({tokens:t}){return`<blockquote>
${this.parser.parse(t)}</blockquote>
`}html({text:t}){return t}heading({tokens:t,depth:e}){return`<h${e}>${this.parser.parseInline(t)}</h${e}>
`}hr(t){return`<hr>
`}list(t){const e=t.ordered,n=t.start;let i="";for(let o=0;o<t.items.length;o++){const a=t.items[o];i+=this.listitem(a)}const s=e?"ol":"ul",r=e&&n!==1?' start="'+n+'"':"";return"<"+s+r+`>
`+i+"</"+s+`>
`}listitem(t){var n;let e="";if(t.task){const i=this.checkbox({checked:!!t.checked});t.loose?((n=t.tokens[0])==null?void 0:n.type)==="paragraph"?(t.tokens[0].text=i+" "+t.tokens[0].text,t.tokens[0].tokens&&t.tokens[0].tokens.length>0&&t.tokens[0].tokens[0].type==="text"&&(t.tokens[0].tokens[0].text=i+" "+Kn(t.tokens[0].tokens[0].text),t.tokens[0].tokens[0].escaped=!0)):t.tokens.unshift({type:"text",raw:i+" ",text:i+" ",escaped:!0}):e+=i+" "}return e+=this.parser.parse(t.tokens,!!t.loose),`<li>${e}</li>
`}checkbox({checked:t}){return"<input "+(t?'checked="" ':"")+'disabled="" type="checkbox">'}paragraph({tokens:t}){return`<p>${this.parser.parseInline(t)}</p>
`}table(t){let e="",n="";for(let s=0;s<t.header.length;s++)n+=this.tablecell(t.header[s]);e+=this.tablerow({text:n});let i="";for(let s=0;s<t.rows.length;s++){const r=t.rows[s];n="";for(let o=0;o<r.length;o++)n+=this.tablecell(r[o]);i+=this.tablerow({text:n})}return i&&(i=`<tbody>${i}</tbody>`),`<table>
<thead>
`+e+`</thead>
`+i+`</table>
`}tablerow({text:t}){return`<tr>
${t}</tr>
`}tablecell(t){const e=this.parser.parseInline(t.tokens),n=t.header?"th":"td";return(t.align?`<${n} align="${t.align}">`:`<${n}>`)+e+`</${n}>
`}strong({tokens:t}){return`<strong>${this.parser.parseInline(t)}</strong>`}em({tokens:t}){return`<em>${this.parser.parseInline(t)}</em>`}codespan({text:t}){return`<code>${Kn(t,!0)}</code>`}br(t){return"<br>"}del({tokens:t}){return`<del>${this.parser.parseInline(t)}</del>`}link({href:t,title:e,tokens:n}){const i=this.parser.parseInline(n),s=cg(t);if(s===null)return i;t=s;let r='<a href="'+t+'"';return e&&(r+=' title="'+Kn(e)+'"'),r+=">"+i+"</a>",r}image({href:t,title:e,text:n,tokens:i}){i&&(n=this.parser.parseInline(i,this.parser.textRenderer));const s=cg(t);if(s===null)return Kn(n);t=s;let r=`<img src="${t}" alt="${n}"`;return e&&(r+=` title="${Kn(e)}"`),r+=">",r}text(t){return"tokens"in t&&t.tokens?this.parser.parseInline(t.tokens):"escaped"in t&&t.escaped?t.text:Kn(t.text)}},qf=class{strong({text:t}){return t}em({text:t}){return t}codespan({text:t}){return t}del({text:t}){return t}html({text:t}){return t}text({text:t}){return t}link({text:t}){return""+t}image({text:t}){return""+t}br(){return""}},wi=class Zu{constructor(e){ct(this,"options");ct(this,"renderer");ct(this,"textRenderer");this.options=e||Ds,this.options.renderer=this.options.renderer||new sl,this.renderer=this.options.renderer,this.renderer.options=this.options,this.renderer.parser=this,this.textRenderer=new qf}static parse(e,n){return new Zu(n).parse(e)}static parseInline(e,n){return new Zu(n).parseInline(e)}parse(e,n=!0){var s,r;let i="";for(let o=0;o<e.length;o++){const a=e[o];if((r=(s=this.options.extensions)==null?void 0:s.renderers)!=null&&r[a.type]){const c=a,u=this.options.extensions.renderers[c.type].call({parser:this},c);if(u!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(c.type)){i+=u||"";continue}}const l=a;switch(l.type){case"space":{i+=this.renderer.space(l);continue}case"hr":{i+=this.renderer.hr(l);continue}case"heading":{i+=this.renderer.heading(l);continue}case"code":{i+=this.renderer.code(l);continue}case"table":{i+=this.renderer.table(l);continue}case"blockquote":{i+=this.renderer.blockquote(l);continue}case"list":{i+=this.renderer.list(l);continue}case"html":{i+=this.renderer.html(l);continue}case"paragraph":{i+=this.renderer.paragraph(l);continue}case"text":{let c=l,u=this.renderer.text(c);for(;o+1<e.length&&e[o+1].type==="text";)c=e[++o],u+=`
`+this.renderer.text(c);n?i+=this.renderer.paragraph({type:"paragraph",raw:u,text:u,tokens:[{type:"text",raw:u,text:u,escaped:!0}]}):i+=u;continue}default:{const c='Token with "'+l.type+'" type was not found.';if(this.options.silent)return console.error(c),"";throw new Error(c)}}}return i}parseInline(e,n=this.renderer){var s,r;let i="";for(let o=0;o<e.length;o++){const a=e[o];if((r=(s=this.options.extensions)==null?void 0:s.renderers)!=null&&r[a.type]){const c=this.options.extensions.renderers[a.type].call({parser:this},a);if(c!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(a.type)){i+=c||"";continue}}const l=a;switch(l.type){case"escape":{i+=n.text(l);break}case"html":{i+=n.html(l);break}case"link":{i+=n.link(l);break}case"image":{i+=n.image(l);break}case"strong":{i+=n.strong(l);break}case"em":{i+=n.em(l);break}case"codespan":{i+=n.codespan(l);break}case"br":{i+=n.br(l);break}case"del":{i+=n.del(l);break}case"text":{i+=n.text(l);break}default:{const c='Token with "'+l.type+'" type was not found.';if(this.options.silent)return console.error(c),"";throw new Error(c)}}}return i}},mu,za=(mu=class{constructor(t){ct(this,"options");ct(this,"block");this.options=t||Ds}preprocess(t){return t}postprocess(t){return t}processAllTokens(t){return t}provideLexer(){return this.block?Ei.lex:Ei.lexInline}provideParser(){return this.block?wi.parse:wi.parseInline}},ct(mu,"passThroughHooks",new Set(["preprocess","postprocess","processAllTokens"])),mu),aV=class{constructor(...t){ct(this,"defaults",Bf());ct(this,"options",this.setOptions);ct(this,"parse",this.parseMarkdown(!0));ct(this,"parseInline",this.parseMarkdown(!1));ct(this,"Parser",wi);ct(this,"Renderer",sl);ct(this,"TextRenderer",qf);ct(this,"Lexer",Ei);ct(this,"Tokenizer",il);ct(this,"Hooks",za);this.use(...t)}walkTokens(t,e){var i,s;let n=[];for(const r of t)switch(n=n.concat(e.call(this,r)),r.type){case"table":{const o=r;for(const a of o.header)n=n.concat(this.walkTokens(a.tokens,e));for(const a of o.rows)for(const l of a)n=n.concat(this.walkTokens(l.tokens,e));break}case"list":{const o=r;n=n.concat(this.walkTokens(o.items,e));break}default:{const o=r;(s=(i=this.defaults.extensions)==null?void 0:i.childTokens)!=null&&s[o.type]?this.defaults.extensions.childTokens[o.type].forEach(a=>{const l=o[a].flat(1/0);n=n.concat(this.walkTokens(l,e))}):o.tokens&&(n=n.concat(this.walkTokens(o.tokens,e)))}}return n}use(...t){const e=this.defaults.extensions||{renderers:{},childTokens:{}};return t.forEach(n=>{const i={...n};if(i.async=this.defaults.async||i.async||!1,n.extensions&&(n.extensions.forEach(s=>{if(!s.name)throw new Error("extension name required");if("renderer"in s){const r=e.renderers[s.name];r?e.renderers[s.name]=function(...o){let a=s.renderer.apply(this,o);return a===!1&&(a=r.apply(this,o)),a}:e.renderers[s.name]=s.renderer}if("tokenizer"in s){if(!s.level||s.level!=="block"&&s.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");const r=e[s.level];r?r.unshift(s.tokenizer):e[s.level]=[s.tokenizer],s.start&&(s.level==="block"?e.startBlock?e.startBlock.push(s.start):e.startBlock=[s.start]:s.level==="inline"&&(e.startInline?e.startInline.push(s.start):e.startInline=[s.start]))}"childTokens"in s&&s.childTokens&&(e.childTokens[s.name]=s.childTokens)}),i.extensions=e),n.renderer){const s=this.defaults.renderer||new sl(this.defaults);for(const r in n.renderer){if(!(r in s))throw new Error(`renderer '${r}' does not exist`);if(["options","parser"].includes(r))continue;const o=r,a=n.renderer[o],l=s[o];s[o]=(...c)=>{let u=a.apply(s,c);return u===!1&&(u=l.apply(s,c)),u||""}}i.renderer=s}if(n.tokenizer){const s=this.defaults.tokenizer||new il(this.defaults);for(const r in n.tokenizer){if(!(r in s))throw new Error(`tokenizer '${r}' does not exist`);if(["options","rules","lexer"].includes(r))continue;const o=r,a=n.tokenizer[o],l=s[o];s[o]=(...c)=>{let u=a.apply(s,c);return u===!1&&(u=l.apply(s,c)),u}}i.tokenizer=s}if(n.hooks){const s=this.defaults.hooks||new za;for(const r in n.hooks){if(!(r in s))throw new Error(`hook '${r}' does not exist`);if(["options","block"].includes(r))continue;const o=r,a=n.hooks[o],l=s[o];za.passThroughHooks.has(r)?s[o]=c=>{if(this.defaults.async)return Promise.resolve(a.call(s,c)).then(f=>l.call(s,f));const u=a.call(s,c);return l.call(s,u)}:s[o]=(...c)=>{let u=a.apply(s,c);return u===!1&&(u=l.apply(s,c)),u}}i.hooks=s}if(n.walkTokens){const s=this.defaults.walkTokens,r=n.walkTokens;i.walkTokens=function(o){let a=[];return a.push(r.call(this,o)),s&&(a=a.concat(s.call(this,o))),a}}this.defaults={...this.defaults,...i}}),this}setOptions(t){return this.defaults={...this.defaults,...t},this}lexer(t,e){return Ei.lex(t,e??this.defaults)}parser(t,e){return wi.parse(t,e??this.defaults)}parseMarkdown(t){return(n,i)=>{const s={...i},r={...this.defaults,...s},o=this.onError(!!r.silent,!!r.async);if(this.defaults.async===!0&&s.async===!1)return o(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise."));if(typeof n>"u"||n===null)return o(new Error("marked(): input parameter is undefined or null"));if(typeof n!="string")return o(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected"));r.hooks&&(r.hooks.options=r,r.hooks.block=t);const a=r.hooks?r.hooks.provideLexer():t?Ei.lex:Ei.lexInline,l=r.hooks?r.hooks.provideParser():t?wi.parse:wi.parseInline;if(r.async)return Promise.resolve(r.hooks?r.hooks.preprocess(n):n).then(c=>a(c,r)).then(c=>r.hooks?r.hooks.processAllTokens(c):c).then(c=>r.walkTokens?Promise.all(this.walkTokens(c,r.walkTokens)).then(()=>c):c).then(c=>l(c,r)).then(c=>r.hooks?r.hooks.postprocess(c):c).catch(o);try{r.hooks&&(n=r.hooks.preprocess(n));let c=a(n,r);r.hooks&&(c=r.hooks.processAllTokens(c)),r.walkTokens&&this.walkTokens(c,r.walkTokens);let u=l(c,r);return r.hooks&&(u=r.hooks.postprocess(u)),u}catch(c){return o(c)}}}onError(t,e){return n=>{if(n.message+=`
Please report this to https://github.com/markedjs/marked.`,t){const i="<p>An error occurred:</p><pre>"+Kn(n.message+"",!0)+"</pre>";return e?Promise.resolve(i):i}if(e)return Promise.reject(n);throw n}}},Rs=new aV;function rt(t,e){return Rs.parse(t,e)}rt.options=rt.setOptions=function(t){return Rs.setOptions(t),rt.defaults=Rs.defaults,gv(rt.defaults),rt};rt.getDefaults=Bf;rt.defaults=Ds;rt.use=function(...t){return Rs.use(...t),rt.defaults=Rs.defaults,gv(rt.defaults),rt};rt.walkTokens=function(t,e){return Rs.walkTokens(t,e)};rt.parseInline=Rs.parseInline;rt.Parser=wi;rt.parser=wi.parse;rt.Renderer=sl;rt.TextRenderer=qf;rt.Lexer=Ei;rt.lexer=Ei.lex;rt.Tokenizer=il;rt.Hooks=za;rt.parse=rt;rt.options;rt.setOptions;rt.use;rt.walkTokens;rt.parseInline;wi.parse;Ei.lex;const lV={name:"TermsModal",props:{visible:Boolean},data(){return{license:""}},computed:{formattedLicense(){if(!this.license)return"";const t=this.license.split(`
`);let e=!1;return t.map((n,i)=>{const s=n.trim();if(s.startsWith(">"))return n;if(!e&&s)return e=!0,`# ${s.replace(/^#+\s*/,"")}`;const r=(t[i+1]||"").trim(),o=/^https?:\/\//.test(s),a=/[A-Za-z0-9]$/.test(s),l=/^[A-Za-z0-9 ]+$/.test(s);return e&&s&&!o&&a&&l&&r?`## ${s}`:n}).join(`
`)},renderedLicense(){return rt.parse(this.formattedLicense,{headerIds:!1,mangle:!1,gfm:!0})},containerStyle(){return{position:"relative",maxHeight:"80vh"}},bodyStyle(){return{maxHeight:"calc(80vh - 4rem)",overflowY:"auto"}}},watch:{visible(t){t&&!this.license&&fetch("/SynthArmor/LICENSE").then(e=>e.text()).then(e=>{this.license=e}).catch(()=>{this.license="Failed to load terms."})}},methods:{close(){this.$emit("update:visible",!1)}}},cV=["innerHTML"];function uV(t,e,n,i,s,r){return n.visible?(en(),an("div",{key:0,class:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",onClick:e[2]||(e[2]=Ka((...o)=>r.close&&r.close(...o),["self"]))},[q("div",{onClick:e[1]||(e[1]=Ka(()=>{},["stop"])),class:"bg-white rounded-lg shadow-lg overflow-hidden w-full max-w-3xl mx-4",style:mo(r.containerStyle)},[q("button",{onClick:e[0]||(e[0]=(...o)=>r.close&&r.close(...o)),class:"absolute top-2 right-2 text-2xl text-gray-500 hover:text-gray-700","aria-label":"Close"},"×"),e[3]||(e[3]=q("h2",{class:"px-6 pt-6 text-2xl font-semibold text-gray-800"},"Terms & License",-1)),q("div",{style:mo(r.bodyStyle),class:"p-6 text-gray-800"},[q("div",{innerHTML:r.renderedLicense,class:"prose prose-sm sm:prose lg:prose-lg"},null,8,cV)],4)],4)])):Jr("",!0)}const fV=Cs(lV,[["render",uV]]),hV="/SynthArmor/SynthArmor_logo.png",dV={name:"App",components:{BasicForm:wy,AdvancedForm:Ny,ModelViewer:kz,FAQ:Xz,HoleOptionsForm:w4,TermsModal:fV},data(){return{width:155,depth:105,safety:0,bottomHeight:15,topHeight:25,borderThickness:2.5,enableBackHole:!1,backHoleXOffset:0,backHoleWidth:55,backHoleHeight:10,enableFrontHole:!1,frontHoleXOffset:0,frontHoleWidth:55,frontHoleHeight:10,enableRightHole:!1,rightHoleXOffset:0,rightHoleWidth:55,rightHoleHeight:10,enableLeftHole:!1,leftHoleXOffset:0,leftHoleWidth:55,leftHoleHeight:10,showTerms:!1}},computed:{version(){return"v1.1.1"}},methods:{updateBasic({width:t,depth:e,safety:n}){this.width=t,this.depth=e,this.safety=n},updateAdvanced({bottomHeight:t,topHeight:e,borderThickness:n}){this.bottomHeight=t,this.topHeight=e,this.borderThickness=n},updateHoleOptions(t){Object.assign(this,t)},downloadModel(){this.$refs.modelViewer.downloadSTL()}}},pV={class:"max-w-3xl mx-auto min-h-screen flex flex-col justify-center items-center p-6"},mV={class:"w-full max-w-[600px] bg-white rounded shadow p-6"},gV={class:"mt-4 text-sm text-gray-500 text-center space-x-4"};function _V(t,e,n,i,s,r){const o=Is("BasicForm"),a=Is("ModelViewer"),l=Is("AdvancedForm"),c=Is("HoleOptionsForm"),u=Is("FAQ"),f=Is("TermsModal");return en(),an("div",pV,[e[3]||(e[3]=q("img",{src:hV,alt:"SynthArmor Logo",class:"w-40 mb-4"},null,-1)),e[4]||(e[4]=q("div",{class:"mb-8 text-center"},[q("p",{class:"text-gray-600"}," Modify the dimensions of a 3D model and download your custom design instantly. ")],-1)),q("div",mV,[Tt(o,{"initial-width":s.width,"initial-depth":s.depth,"initial-safety":s.safety,onUpdateDimensions:r.updateBasic},null,8,["initial-width","initial-depth","initial-safety","onUpdateDimensions"]),Tt(a,{ref:"modelViewer",width:s.width,depth:s.depth,safety:s.safety,"bottom-height":s.bottomHeight,"top-height":s.topHeight,"border-thickness":s.borderThickness,"enable-back-hole":s.enableBackHole,"back-hole-x-offset":s.backHoleXOffset,"back-hole-width":s.backHoleWidth,"back-hole-height":s.backHoleHeight,"enable-front-hole":s.enableFrontHole,"front-hole-x-offset":s.frontHoleXOffset,"front-hole-width":s.frontHoleWidth,"front-hole-height":s.frontHoleHeight,"enable-right-hole":s.enableRightHole,"right-hole-x-offset":s.rightHoleXOffset,"right-hole-width":s.rightHoleWidth,"right-hole-height":s.rightHoleHeight,"enable-left-hole":s.enableLeftHole,"left-hole-x-offset":s.leftHoleXOffset,"left-hole-width":s.leftHoleWidth,"left-hole-height":s.leftHoleHeight},null,8,["width","depth","safety","bottom-height","top-height","border-thickness","enable-back-hole","back-hole-x-offset","back-hole-width","back-hole-height","enable-front-hole","front-hole-x-offset","front-hole-width","front-hole-height","enable-right-hole","right-hole-x-offset","right-hole-width","right-hole-height","enable-left-hole","left-hole-x-offset","left-hole-width","left-hole-height"]),Tt(l,{"initial-bottom-height":s.bottomHeight,"initial-top-height":s.topHeight,"initial-border-thickness":s.borderThickness,onUpdateAdvanced:r.updateAdvanced},null,8,["initial-bottom-height","initial-top-height","initial-border-thickness","onUpdateAdvanced"]),Tt(c,{"initial-enable-back-hole":s.enableBackHole,"initial-back-hole-x-offset":s.backHoleXOffset,"initial-back-hole-width":s.backHoleWidth,"initial-back-hole-height":s.backHoleHeight,"initial-enable-front-hole":s.enableFrontHole,"initial-front-hole-x-offset":s.frontHoleXOffset,"initial-front-hole-width":s.frontHoleWidth,"initial-front-hole-height":s.frontHoleHeight,"initial-enable-right-hole":s.enableRightHole,"initial-right-hole-x-offset":s.rightHoleXOffset,"initial-right-hole-width":s.rightHoleWidth,"initial-right-hole-height":s.rightHoleHeight,"initial-enable-left-hole":s.enableLeftHole,"initial-left-hole-x-offset":s.leftHoleXOffset,"initial-left-hole-width":s.leftHoleWidth,"initial-left-hole-height":s.leftHoleHeight,"bottom-height":s.bottomHeight,onUpdateHoleOptions:r.updateHoleOptions},null,8,["initial-enable-back-hole","initial-back-hole-x-offset","initial-back-hole-width","initial-back-hole-height","initial-enable-front-hole","initial-front-hole-x-offset","initial-front-hole-width","initial-front-hole-height","initial-enable-right-hole","initial-right-hole-x-offset","initial-right-hole-width","initial-right-hole-height","initial-enable-left-hole","initial-left-hole-x-offset","initial-left-hole-width","initial-left-hole-height","bottom-height","onUpdateHoleOptions"]),q("button",{onClick:e[0]||(e[0]=(...h)=>r.downloadModel&&r.downloadModel(...h)),class:"mt-4 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 block mx-auto"}," Download file ")]),Tt(u),q("footer",gV,[q("span",null,tf(r.version),1),q("button",{onClick:e[1]||(e[1]=h=>s.showTerms=!0),class:"underline hover:text-gray-700"}," Terms ")]),Tt(f,{visible:s.showTerms,"onUpdate:visible":e[2]||(e[2]=h=>s.showTerms=h)},null,8,["visible"])])}const vV=Cs(dV,[["render",_V]]);dy(vV).mount("#app");
